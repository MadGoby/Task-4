/*! For license information please see commons.js.LICENSE.txt */
(self.webpackChunktest=self.webpackChunktest||[]).push([["commons"],{"./node_modules/autobind-decorator/lib/esm/index.js":(A,e,n)=>{"use strict";function t(A){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},t(A)}function l(A,e,n){var l=n.value;if("function"!=typeof l)throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(t(l)));var s=!1;return{configurable:!0,get:function(){if(s||this===A.prototype||this.hasOwnProperty(e)||"function"!=typeof l)return l;var n=l.bind(this);return s=!0,Object.defineProperty(this,e,{configurable:!0,get:function(){return n},set:function(A){l=A,delete this[e]}}),s=!1,n},set:function(A){l=A}}}function s(A){var e;return"undefined"!=typeof Reflect&&"function"==typeof Reflect.ownKeys?e=Reflect.ownKeys(A.prototype):(e=Object.getOwnPropertyNames(A.prototype),"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(A.prototype)))),e.forEach((function(e){if("constructor"!==e){var n=Object.getOwnPropertyDescriptor(A.prototype,e);"function"==typeof n.value&&Object.defineProperty(A.prototype,e,l(A,e,n))}})),A}function i(){return 1===arguments.length?s.apply(void 0,arguments):l.apply(void 0,arguments)}n.r(e),n.d(e,{boundMethod:()=>l,boundClass:()=>s,default:()=>i})},"./src/plugin/Model/Model.ts":(A,e)=>{"use strict";var n,t,l,s,i,r,o=(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\Model.ts",t="49ea8768fa8f80f796273189f7372db2284f5795",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\Model.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:0},end:{line:3,column:23}},2:{start:{line:6,column:8},end:{line:11,column:10}},3:{start:{line:14,column:8},end:{line:14,column:46}},4:{start:{line:17,column:27},end:{line:17,column:94}},5:{start:{line:18,column:31},end:{line:18,column:71}},6:{start:{line:19,column:26},end:{line:19,column:67}},7:{start:{line:20,column:8},end:{line:27,column:9}},8:{start:{line:22,column:16},end:{line:22,column:40}},9:{start:{line:24,column:16},end:{line:24,column:40}},10:{start:{line:26,column:16},end:{line:26,column:40}},11:{start:{line:30,column:32},end:{line:33,column:9}},12:{start:{line:31,column:27},end:{line:31,column:181}},13:{start:{line:32,column:12},end:{line:32,column:57}},14:{start:{line:34,column:8},end:{line:34,column:94}},15:{start:{line:37,column:34},end:{line:37,column:134}},16:{start:{line:37,column:46},end:{line:37,column:133}},17:{start:{line:38,column:8},end:{line:45,column:10}},18:{start:{line:48,column:31},end:{line:48,column:81}},19:{start:{line:49,column:29},end:{line:49,column:77}},20:{start:{line:50,column:37},end:{line:50,column:79}},21:{start:{line:52,column:8},end:{line:57,column:9}},22:{start:{line:53,column:12},end:{line:53,column:47}},23:{start:{line:56,column:12},end:{line:56,column:45}},24:{start:{line:58,column:8},end:{line:58,column:39}},25:{start:{line:59,column:8},end:{line:64,column:10}},26:{start:{line:67,column:45},end:{line:67,column:53}},27:{start:{line:68,column:23},end:{line:68,column:31}},28:{start:{line:69,column:8},end:{line:70,column:24}},29:{start:{line:70,column:12},end:{line:70,column:24}},30:{start:{line:71,column:26},end:{line:71,column:124}},31:{start:{line:72,column:8},end:{line:72,column:69}},32:{start:{line:75,column:8},end:{line:75,column:55}},33:{start:{line:78,column:8},end:{line:78,column:55}},34:{start:{line:81,column:8},end:{line:81,column:108}},35:{start:{line:84,column:8},end:{line:84,column:108}},36:{start:{line:88,column:8},end:{line:93,column:9}},37:{start:{line:89,column:12},end:{line:89,column:41}},38:{start:{line:92,column:12},end:{line:92,column:91}},39:{start:{line:94,column:29},end:{line:94,column:31}},40:{start:{line:95,column:8},end:{line:100,column:9}},41:{start:{line:96,column:12},end:{line:96,column:107}},42:{start:{line:98,column:13},end:{line:100,column:9}},43:{start:{line:99,column:12},end:{line:99,column:109}},44:{start:{line:101,column:8},end:{line:101,column:30}},45:{start:{line:104,column:21},end:{line:108,column:10}},46:{start:{line:109,column:24},end:{line:109,column:32}},47:{start:{line:110,column:8},end:{line:112,column:9}},48:{start:{line:111,column:12},end:{line:111,column:71}},49:{start:{line:113,column:8},end:{line:115,column:9}},50:{start:{line:114,column:12},end:{line:114,column:73}},51:{start:{line:116,column:8},end:{line:116,column:21}},52:{start:{line:119,column:8},end:{line:120,column:45}},53:{start:{line:120,column:12},end:{line:120,column:45}},54:{start:{line:121,column:8},end:{line:122,column:45}},55:{start:{line:122,column:12},end:{line:122,column:45}},56:{start:{line:123,column:8},end:{line:124,column:65}},57:{start:{line:124,column:12},end:{line:124,column:65}},58:{start:{line:125,column:8},end:{line:125,column:81}},59:{start:{line:126,column:8},end:{line:131,column:10}},60:{start:{line:134,column:8},end:{line:135,column:56}},61:{start:{line:135,column:12},end:{line:135,column:56}},62:{start:{line:136,column:8},end:{line:136,column:21}},63:{start:{line:139,column:8},end:{line:140,column:56}},64:{start:{line:140,column:12},end:{line:140,column:56}},65:{start:{line:141,column:8},end:{line:141,column:21}},66:{start:{line:144,column:25},end:{line:144,column:33}},67:{start:{line:145,column:24},end:{line:145,column:32}},68:{start:{line:146,column:8},end:{line:157,column:9}},69:{start:{line:148,column:16},end:{line:148,column:103}},70:{start:{line:149,column:16},end:{line:149,column:40}},71:{start:{line:150,column:16},end:{line:150,column:22}},72:{start:{line:152,column:16},end:{line:152,column:101}},73:{start:{line:153,column:16},end:{line:153,column:40}},74:{start:{line:154,column:16},end:{line:154,column:22}},75:{start:{line:156,column:16},end:{line:156,column:22}},76:{start:{line:158,column:8},end:{line:159,column:47}},77:{start:{line:159,column:12},end:{line:159,column:47}},78:{start:{line:160,column:8},end:{line:161,column:45}},79:{start:{line:161,column:12},end:{line:161,column:45}},80:{start:{line:164,column:0},end:{line:164,column:22}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:26},end:{line:12,column:5}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:28},end:{line:15,column:5}},line:13},2:{name:"(anonymous_2)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:43},end:{line:28,column:5}},line:16},3:{name:"(anonymous_3)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:40},end:{line:35,column:5}},line:29},4:{name:"(anonymous_4)",decl:{start:{line:30,column:32},end:{line:30,column:33}},loc:{start:{line:30,column:53},end:{line:33,column:9}},line:30},5:{name:"(anonymous_5)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:33},end:{line:46,column:5}},line:36},6:{name:"(anonymous_6)",decl:{start:{line:37,column:34},end:{line:37,column:35}},loc:{start:{line:37,column:46},end:{line:37,column:133}},line:37},7:{name:"(anonymous_7)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:42},end:{line:65,column:5}},line:47},8:{name:"(anonymous_8)",decl:{start:{line:66,column:4},end:{line:66,column:5}},loc:{start:{line:66,column:33},end:{line:73,column:5}},line:66},9:{name:"(anonymous_9)",decl:{start:{line:74,column:4},end:{line:74,column:5}},loc:{start:{line:74,column:38},end:{line:76,column:5}},line:74},10:{name:"(anonymous_10)",decl:{start:{line:77,column:4},end:{line:77,column:5}},loc:{start:{line:77,column:37},end:{line:79,column:5}},line:77},11:{name:"(anonymous_11)",decl:{start:{line:80,column:4},end:{line:80,column:5}},loc:{start:{line:80,column:65},end:{line:82,column:5}},line:80},12:{name:"(anonymous_12)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:66},end:{line:85,column:5}},line:83},13:{name:"(anonymous_13)",decl:{start:{line:86,column:4},end:{line:86,column:5}},loc:{start:{line:86,column:52},end:{line:102,column:5}},line:86},14:{name:"(anonymous_14)",decl:{start:{line:103,column:4},end:{line:103,column:5}},loc:{start:{line:103,column:35},end:{line:117,column:5}},line:103},15:{name:"(anonymous_15)",decl:{start:{line:118,column:4},end:{line:118,column:5}},loc:{start:{line:118,column:41},end:{line:132,column:5}},line:118},16:{name:"(anonymous_16)",decl:{start:{line:133,column:4},end:{line:133,column:5}},loc:{start:{line:133,column:38},end:{line:137,column:5}},line:133},17:{name:"(anonymous_17)",decl:{start:{line:138,column:4},end:{line:138,column:5}},loc:{start:{line:138,column:36},end:{line:142,column:5}},line:138},18:{name:"(anonymous_18)",decl:{start:{line:143,column:4},end:{line:143,column:5}},loc:{start:{line:143,column:38},end:{line:162,column:5}},line:143}},branchMap:{0:{loc:{start:{line:17,column:27},end:{line:17,column:94}},type:"binary-expr",locations:[{start:{line:17,column:27},end:{line:17,column:51}},{start:{line:17,column:55},end:{line:17,column:94}}],line:17},1:{loc:{start:{line:19,column:26},end:{line:19,column:67}},type:"binary-expr",locations:[{start:{line:19,column:26},end:{line:19,column:49}},{start:{line:19,column:53},end:{line:19,column:67}}],line:19},2:{loc:{start:{line:20,column:8},end:{line:27,column:9}},type:"switch",locations:[{start:{line:21,column:12},end:{line:22,column:40}},{start:{line:23,column:12},end:{line:24,column:40}},{start:{line:25,column:12},end:{line:26,column:40}}],line:20},3:{loc:{start:{line:50,column:37},end:{line:50,column:79}},type:"binary-expr",locations:[{start:{line:50,column:37},end:{line:50,column:66}},{start:{line:50,column:70},end:{line:50,column:79}}],line:50},4:{loc:{start:{line:52,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:52,column:8},end:{line:57,column:9}},{start:{line:52,column:8},end:{line:57,column:9}}],line:52},5:{loc:{start:{line:69,column:8},end:{line:70,column:24}},type:"if",locations:[{start:{line:69,column:8},end:{line:70,column:24}},{start:{line:69,column:8},end:{line:70,column:24}}],line:69},6:{loc:{start:{line:81,column:15},end:{line:81,column:107}},type:"binary-expr",locations:[{start:{line:81,column:16},end:{line:81,column:31}},{start:{line:81,column:37},end:{line:81,column:106}}],line:81},7:{loc:{start:{line:84,column:15},end:{line:84,column:107}},type:"binary-expr",locations:[{start:{line:84,column:16},end:{line:84,column:29}},{start:{line:84,column:35},end:{line:84,column:106}}],line:84},8:{loc:{start:{line:88,column:8},end:{line:93,column:9}},type:"if",locations:[{start:{line:88,column:8},end:{line:93,column:9}},{start:{line:88,column:8},end:{line:93,column:9}}],line:88},9:{loc:{start:{line:95,column:8},end:{line:100,column:9}},type:"if",locations:[{start:{line:95,column:8},end:{line:100,column:9}},{start:{line:95,column:8},end:{line:100,column:9}}],line:95},10:{loc:{start:{line:98,column:13},end:{line:100,column:9}},type:"if",locations:[{start:{line:98,column:13},end:{line:100,column:9}},{start:{line:98,column:13},end:{line:100,column:9}}],line:98},11:{loc:{start:{line:110,column:8},end:{line:112,column:9}},type:"if",locations:[{start:{line:110,column:8},end:{line:112,column:9}},{start:{line:110,column:8},end:{line:112,column:9}}],line:110},12:{loc:{start:{line:113,column:8},end:{line:115,column:9}},type:"if",locations:[{start:{line:113,column:8},end:{line:115,column:9}},{start:{line:113,column:8},end:{line:115,column:9}}],line:113},13:{loc:{start:{line:119,column:8},end:{line:120,column:45}},type:"if",locations:[{start:{line:119,column:8},end:{line:120,column:45}},{start:{line:119,column:8},end:{line:120,column:45}}],line:119},14:{loc:{start:{line:121,column:8},end:{line:122,column:45}},type:"if",locations:[{start:{line:121,column:8},end:{line:122,column:45}},{start:{line:121,column:8},end:{line:122,column:45}}],line:121},15:{loc:{start:{line:123,column:8},end:{line:124,column:65}},type:"if",locations:[{start:{line:123,column:8},end:{line:124,column:65}},{start:{line:123,column:8},end:{line:124,column:65}}],line:123},16:{loc:{start:{line:134,column:8},end:{line:135,column:56}},type:"if",locations:[{start:{line:134,column:8},end:{line:135,column:56}},{start:{line:134,column:8},end:{line:135,column:56}}],line:134},17:{loc:{start:{line:139,column:8},end:{line:140,column:56}},type:"if",locations:[{start:{line:139,column:8},end:{line:140,column:56}},{start:{line:139,column:8},end:{line:140,column:56}}],line:139},18:{loc:{start:{line:146,column:8},end:{line:157,column:9}},type:"switch",locations:[{start:{line:147,column:12},end:{line:150,column:22}},{start:{line:151,column:12},end:{line:154,column:22}},{start:{line:155,column:12},end:{line:156,column:22}}],line:146},19:{loc:{start:{line:158,column:8},end:{line:159,column:47}},type:"if",locations:[{start:{line:158,column:8},end:{line:159,column:47}},{start:{line:158,column:8},end:{line:159,column:47}}],line:158},20:{loc:{start:{line:160,column:8},end:{line:161,column:45}},type:"if",locations:[{start:{line:160,column:8},end:{line:161,column:45}},{start:{line:160,column:8},end:{line:161,column:45}}],line:160}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0},b:{0:[0,0],1:[0,0],2:[0,0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0,0],19:[0,0],20:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\Model.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\Model.ts"],names:[],mappings:"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",sourcesContent:["import { DataForAdjustPosition, DataForAdjustPositionBasic } from '../View/Handles/types';\r\nimport {\r\n  BasicModelSettings,\r\n  CalculationData,\r\n  DataForPrepareValue,\r\n  DataForRefreshingModel,\r\n  DataForValueScale,\r\n  StepCalculateData,\r\n  StepInfoFromModel,\r\n  ValuesRangeData,\r\n} from './types';\r\n\r\nclass Model {\r\n  public values: BasicModelSettings;\r\n\r\n  constructor(settings: BasicModelSettings) {\r\n    this.values = {\r\n      min: Model.truncatesNumbersAfterDot(Number(settings.min)),\r\n      max: Model.truncatesNumbersAfterDot(Number(settings.max)),\r\n      from: Model.truncatesNumbersAfterDot(Number(settings.from)),\r\n      to: Model.truncatesNumbersAfterDot(Number(settings.to)),\r\n    };\r\n  }\r\n\r\n  private writesDataToModel(data: DataForRefreshingModel): void {\r\n    this.values[data.target] = data.value;\r\n  }\r\n\r\n  public static truncatesNumbersAfterDot(value: number): string {\r\n    const isLastZero: boolean = !Number.isInteger(value) && `${value.toFixed(2)}`.slice(-1) === '0';\r\n    const areLastTwoZero: boolean = `${value.toFixed(2)}`.slice(-2) === '00';\r\n    const isInteger: boolean = Number.isInteger(value) || areLastTwoZero;\r\n\r\n    switch (true) {\r\n      case isInteger:\r\n        return value.toFixed(0);\r\n      case isLastZero:\r\n        return value.toFixed(1);\r\n      default:\r\n        return value.toFixed(2);\r\n    }\r\n  }\r\n\r\n  public calculateValuesByPosition(settings: CalculationData): void {\r\n    const calculateValues = (calculationData: CalculationData): string => {\r\n      const value: number = (Number(this.values.min) + (Number(calculationData.position) / (\r\n        Number(calculationData.sliderWidth) / (Number(this.values.max) - Number(this.values.min)))\r\n      ));\r\n      return Model.truncatesNumbersAfterDot(value);\r\n    };\r\n\r\n    this.writesDataToModel({ target: settings.target, value: calculateValues(settings) });\r\n  }\r\n\r\n  public calculateDataForValueScale(): DataForValueScale {\r\n    const calculatePosition = (ratio: number) => (\r\n      ((Number(this.values.max) - Number(this.values.min)) * ratio) + Number(this.values.min)\r\n    );\r\n\r\n    return {\r\n      min: Model.truncatesNumbersAfterDot(Number(this.values.min)),\r\n      max: Model.truncatesNumbersAfterDot(Number(this.values.max)),\r\n      20: Model.truncatesNumbersAfterDot(calculatePosition(0.2)),\r\n      40: Model.truncatesNumbersAfterDot(calculatePosition(0.4)),\r\n      60: Model.truncatesNumbersAfterDot(calculatePosition(0.6)),\r\n      80: Model.truncatesNumbersAfterDot(calculatePosition(0.8)),\r\n    };\r\n  }\r\n\r\n  public assignValueFromScale(value: string, isDouble: boolean): DataForAdjustPosition {\r\n    const fromDifference = Math.abs(Number(this.values.from) - Number(value));\r\n    const toDifference = Math.abs(Number(this.values.to) - Number(value));\r\n    const isFromDifferenceLess = fromDifference < toDifference || !isDouble;\r\n    let result: DataForAdjustPositionBasic;\r\n\r\n    if (isFromDifferenceLess) {\r\n      result = { target: 'from', value };\r\n    } else {\r\n      result = { target: 'to', value };\r\n    }\r\n\r\n    this.writesDataToModel(result);\r\n    return {\r\n      target: result.target,\r\n      value: result.value,\r\n      totalValues: Number(this.values.max) - Number(this.values.min),\r\n      minValue: this.values.min,\r\n    };\r\n  }\r\n\r\n  public calculateStepWidth(settings: StepCalculateData): StepInfoFromModel {\r\n    const { sliderWidth, handleWidth } = settings;\r\n    let { step } = settings;\r\n\r\n    if (step < 0.01) step = 0.01;\r\n\r\n    const stepWidth: number = (\r\n      (sliderWidth - handleWidth) / (Number(this.values.max) - Number(this.values.min))\r\n    ) * Number(step);\r\n\r\n    return { minStep: 0.01, stepWidth: String(stepWidth), step };\r\n  }\r\n\r\n  private checkIsValueSmallerThanMin(value: string): boolean {\r\n    return Number(value) < Number(this.values.min);\r\n  }\r\n\r\n  private checkIsValueBiggerThanMax(value: string): boolean {\r\n    return Number(value) > Number(this.values.max);\r\n  }\r\n\r\n  private checkIsFromValueBiggerThanTo(name: string, value: string, step: string, handleWidth: number): boolean {\r\n    return (name === 'from') && (Number(value) > Number(this.values.to) - (handleWidth / Number(step)));\r\n  }\r\n\r\n  private checkIsToValueSmallerThanFrom(name: string, value: string, step: string, handleWidth: number): boolean {\r\n    return (name === 'to') && (Number(value) < Number(this.values.from) + (handleWidth / Number(step)));\r\n  }\r\n\r\n  private correctFromBiggerThenTo(settings: DataForPrepareValue, step: StepInfoFromModel, target: string): string {\r\n    let adjustOffset: number;\r\n\r\n    if (typeof settings.step === 'number') {\r\n      adjustOffset = settings.step;\r\n    } else {\r\n      adjustOffset = Number(Math.round(settings.handleWidth * Number(step.minStep)));\r\n    }\r\n\r\n    let newHandleValue: string = '';\r\n\r\n    if (target === 'to') {\r\n      newHandleValue = String(Model.truncatesNumbersAfterDot(Number(this.values.to) - adjustOffset));\r\n    } else if (target === 'from') {\r\n      newHandleValue = String(Model.truncatesNumbersAfterDot(Number(this.values.from) + adjustOffset));\r\n    }\r\n\r\n    return newHandleValue;\r\n  }\r\n\r\n  private correctsDoubleValues(settings: DataForPrepareValue): string {\r\n    const step: StepInfoFromModel = this.calculateStepWidth({\r\n      step: 0.01,\r\n      sliderWidth: settings.sliderWidth,\r\n      handleWidth: settings.handleWidth,\r\n    });\r\n    let { value } = settings;\r\n\r\n    if (this.checkIsFromValueBiggerThanTo(settings.name, settings.value, step.stepWidth, settings.handleWidth)) {\r\n      value = this.correctFromBiggerThenTo(settings, step, 'to');\r\n    }\r\n\r\n    if (this.checkIsToValueSmallerThanFrom(settings.name, settings.value, step.stepWidth, settings.handleWidth)) {\r\n      value = this.correctFromBiggerThenTo(settings, step, 'from');\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  public prepareInputValueForRecord(settings: DataForPrepareValue): DataForAdjustPosition {\r\n    if (this.checkIsValueSmallerThanMin(settings.value)) settings.value = this.values.min;\r\n    if (this.checkIsValueBiggerThanMax(settings.value)) settings.value = this.values.max;\r\n    if (settings.isDouble) settings.value = this.correctsDoubleValues(settings);\r\n\r\n    this.writesDataToModel({ target: settings.name, value: settings.value });\r\n    return {\r\n      target: settings.name,\r\n      value: settings.value,\r\n      totalValues: Number(this.values.max) - Number(this.values.min),\r\n      minValue: this.values.min,\r\n    };\r\n  }\r\n\r\n  private correctsValueBiggerThanMax(value: string): string {\r\n    if (value >= this.values.max) value = String(Number(this.values.max) - 1);\r\n    return value;\r\n  }\r\n\r\n  private correctsValueLessThanMin(value: string): string {\r\n    if (value <= this.values.min) value = String(Number(this.values.min) + 1);\r\n    return value;\r\n  }\r\n\r\n  public changeSliderValuesRange(settings: ValuesRangeData) {\r\n    const { name } = settings;\r\n    let { value } = settings;\r\n\r\n    switch (name) {\r\n      case 'min':\r\n        value = Model.truncatesNumbersAfterDot(Number(\r\n          this.correctsValueBiggerThanMax(value),\r\n        ));\r\n        this.values.min = value;\r\n        break;\r\n      case 'max':\r\n        value = Model.truncatesNumbersAfterDot(Number(\r\n          this.correctsValueLessThanMin(value),\r\n        ));\r\n        this.values.max = value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (Number(this.values.from) < Number(this.values.min)) this.values.from = this.values.min;\r\n    if (Number(this.values.to) > Number(this.values.max)) this.values.to = this.values.max;\r\n  }\r\n}\r\n\r\nexport { Model };\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i));o.s[0]++,Object.defineProperty(e,"__esModule",{value:!0}),o.s[1]++,e.Model=void 0;class C{constructor(A){o.f[0]++,o.s[2]++,this.values={min:C.truncatesNumbersAfterDot(Number(A.min)),max:C.truncatesNumbersAfterDot(Number(A.max)),from:C.truncatesNumbersAfterDot(Number(A.from)),to:C.truncatesNumbersAfterDot(Number(A.to))}}writesDataToModel(A){o.f[1]++,o.s[3]++,this.values[A.target]=A.value}static truncatesNumbersAfterDot(A){o.f[2]++;const e=(o.s[4]++,o.b[0][0]++,!Number.isInteger(A)&&(o.b[0][1]++,"0"===`${A.toFixed(2)}`.slice(-1))),n=(o.s[5]++,"00"===`${A.toFixed(2)}`.slice(-2)),t=(o.s[6]++,o.b[1][0]++,Number.isInteger(A)||(o.b[1][1]++,n));switch(o.s[7]++,!0){case t:return o.b[2][0]++,o.s[8]++,A.toFixed(0);case e:return o.b[2][1]++,o.s[9]++,A.toFixed(1);default:return o.b[2][2]++,o.s[10]++,A.toFixed(2)}}calculateValuesByPosition(A){o.f[3]++,o.s[11]++;o.s[14]++,this.writesDataToModel({target:A.target,value:(A=>{o.f[4]++;const e=(o.s[12]++,Number(this.values.min)+Number(A.position)/(Number(A.sliderWidth)/(Number(this.values.max)-Number(this.values.min))));return o.s[13]++,C.truncatesNumbersAfterDot(e)})(A)})}calculateDataForValueScale(){o.f[5]++,o.s[15]++;const A=A=>(o.f[6]++,o.s[16]++,(Number(this.values.max)-Number(this.values.min))*A+Number(this.values.min));return o.s[17]++,{min:C.truncatesNumbersAfterDot(Number(this.values.min)),max:C.truncatesNumbersAfterDot(Number(this.values.max)),20:C.truncatesNumbersAfterDot(A(.2)),40:C.truncatesNumbersAfterDot(A(.4)),60:C.truncatesNumbersAfterDot(A(.6)),80:C.truncatesNumbersAfterDot(A(.8))}}assignValueFromScale(A,e){o.f[7]++;const n=(o.s[18]++,Math.abs(Number(this.values.from)-Number(A))),t=(o.s[19]++,Math.abs(Number(this.values.to)-Number(A))),l=(o.s[20]++,o.b[3][0]++,n<t||(o.b[3][1]++,!e));let s;return o.s[21]++,l?(o.b[4][0]++,o.s[22]++,s={target:"from",value:A}):(o.b[4][1]++,o.s[23]++,s={target:"to",value:A}),o.s[24]++,this.writesDataToModel(s),o.s[25]++,{target:s.target,value:s.value,totalValues:Number(this.values.max)-Number(this.values.min),minValue:this.values.min}}calculateStepWidth(A){o.f[8]++;const{sliderWidth:e,handleWidth:n}=(o.s[26]++,A);let{step:t}=(o.s[27]++,A);o.s[28]++,t<.01?(o.b[5][0]++,o.s[29]++,t=.01):o.b[5][1]++;const l=(o.s[30]++,(e-n)/(Number(this.values.max)-Number(this.values.min))*Number(t));return o.s[31]++,{minStep:.01,stepWidth:String(l),step:t}}checkIsValueSmallerThanMin(A){return o.f[9]++,o.s[32]++,Number(A)<Number(this.values.min)}checkIsValueBiggerThanMax(A){return o.f[10]++,o.s[33]++,Number(A)>Number(this.values.max)}checkIsFromValueBiggerThanTo(A,e,n,t){return o.f[11]++,o.s[34]++,o.b[6][0]++,"from"===A&&(o.b[6][1]++,Number(e)>Number(this.values.to)-t/Number(n))}checkIsToValueSmallerThanFrom(A,e,n,t){return o.f[12]++,o.s[35]++,o.b[7][0]++,"to"===A&&(o.b[7][1]++,Number(e)<Number(this.values.from)+t/Number(n))}correctFromBiggerThenTo(A,e,n){let t;o.f[13]++,o.s[36]++,"number"==typeof A.step?(o.b[8][0]++,o.s[37]++,t=A.step):(o.b[8][1]++,o.s[38]++,t=Number(Math.round(A.handleWidth*Number(e.minStep))));let l=(o.s[39]++,"");return o.s[40]++,"to"===n?(o.b[9][0]++,o.s[41]++,l=String(C.truncatesNumbersAfterDot(Number(this.values.to)-t))):(o.b[9][1]++,o.s[42]++,"from"===n?(o.b[10][0]++,o.s[43]++,l=String(C.truncatesNumbersAfterDot(Number(this.values.from)+t))):o.b[10][1]++),o.s[44]++,l}correctsDoubleValues(A){o.f[14]++;const e=(o.s[45]++,this.calculateStepWidth({step:.01,sliderWidth:A.sliderWidth,handleWidth:A.handleWidth}));let{value:n}=(o.s[46]++,A);return o.s[47]++,this.checkIsFromValueBiggerThanTo(A.name,A.value,e.stepWidth,A.handleWidth)?(o.b[11][0]++,o.s[48]++,n=this.correctFromBiggerThenTo(A,e,"to")):o.b[11][1]++,o.s[49]++,this.checkIsToValueSmallerThanFrom(A.name,A.value,e.stepWidth,A.handleWidth)?(o.b[12][0]++,o.s[50]++,n=this.correctFromBiggerThenTo(A,e,"from")):o.b[12][1]++,o.s[51]++,n}prepareInputValueForRecord(A){return o.f[15]++,o.s[52]++,this.checkIsValueSmallerThanMin(A.value)?(o.b[13][0]++,o.s[53]++,A.value=this.values.min):o.b[13][1]++,o.s[54]++,this.checkIsValueBiggerThanMax(A.value)?(o.b[14][0]++,o.s[55]++,A.value=this.values.max):o.b[14][1]++,o.s[56]++,A.isDouble?(o.b[15][0]++,o.s[57]++,A.value=this.correctsDoubleValues(A)):o.b[15][1]++,o.s[58]++,this.writesDataToModel({target:A.name,value:A.value}),o.s[59]++,{target:A.name,value:A.value,totalValues:Number(this.values.max)-Number(this.values.min),minValue:this.values.min}}correctsValueBiggerThanMax(A){return o.f[16]++,o.s[60]++,A>=this.values.max?(o.b[16][0]++,o.s[61]++,A=String(Number(this.values.max)-1)):o.b[16][1]++,o.s[62]++,A}correctsValueLessThanMin(A){return o.f[17]++,o.s[63]++,A<=this.values.min?(o.b[17][0]++,o.s[64]++,A=String(Number(this.values.min)+1)):o.b[17][1]++,o.s[65]++,A}changeSliderValuesRange(A){o.f[18]++;const{name:e}=(o.s[66]++,A);let{value:n}=(o.s[67]++,A);switch(o.s[68]++,e){case"min":o.b[18][0]++,o.s[69]++,n=C.truncatesNumbersAfterDot(Number(this.correctsValueBiggerThanMax(n))),o.s[70]++,this.values.min=n,o.s[71]++;break;case"max":o.b[18][1]++,o.s[72]++,n=C.truncatesNumbersAfterDot(Number(this.correctsValueLessThanMin(n))),o.s[73]++,this.values.max=n,o.s[74]++;break;default:o.b[18][2]++,o.s[75]++}o.s[76]++,Number(this.values.from)<Number(this.values.min)?(o.b[19][0]++,o.s[77]++,this.values.from=this.values.min):o.b[19][1]++,o.s[78]++,Number(this.values.to)>Number(this.values.max)?(o.b[20][0]++,o.s[79]++,this.values.to=this.values.max):o.b[20][1]++}}o.s[80]++,e.Model=C},"./src/plugin/Model/model.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\model.test.ts",l="c945ed61f5ff795b25542a457b7977f7a6d526d9",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\model.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:16},end:{line:3,column:34}},2:{start:{line:4,column:0},end:{line:158,column:3}},3:{start:{line:6,column:4},end:{line:13,column:7}},4:{start:{line:7,column:8},end:{line:12,column:11}},5:{start:{line:14,column:4},end:{line:16,column:7}},6:{start:{line:15,column:8},end:{line:15,column:35}},7:{start:{line:17,column:4},end:{line:20,column:7}},8:{start:{line:18,column:8},end:{line:18,column:94}},9:{start:{line:19,column:8},end:{line:19,column:47}},10:{start:{line:21,column:4},end:{line:24,column:7}},11:{start:{line:22,column:8},end:{line:22,column:92}},12:{start:{line:23,column:8},end:{line:23,column:45}},13:{start:{line:25,column:4},end:{line:30,column:7}},14:{start:{line:26,column:23},end:{line:26,column:57}},15:{start:{line:27,column:8},end:{line:29,column:11}},16:{start:{line:31,column:4},end:{line:34,column:7}},17:{start:{line:32,column:8},end:{line:32,column:46}},18:{start:{line:33,column:8},end:{line:33,column:47}},19:{start:{line:35,column:4},end:{line:40,column:7}},20:{start:{line:36,column:23},end:{line:36,column:60}},21:{start:{line:37,column:8},end:{line:39,column:11}},22:{start:{line:41,column:4},end:{line:44,column:7}},23:{start:{line:42,column:8},end:{line:42,column:46}},24:{start:{line:43,column:8},end:{line:43,column:45}},25:{start:{line:45,column:4},end:{line:50,column:7}},26:{start:{line:46,column:23},end:{line:46,column:60}},27:{start:{line:47,column:8},end:{line:49,column:11}},28:{start:{line:51,column:4},end:{line:58,column:7}},29:{start:{line:52,column:23},end:{line:56,column:10}},30:{start:{line:57,column:8},end:{line:57,column:76}},31:{start:{line:59,column:4},end:{line:66,column:7}},32:{start:{line:60,column:23},end:{line:64,column:10}},33:{start:{line:65,column:8},end:{line:65,column:80}},34:{start:{line:67,column:4},end:{line:81,column:7}},35:{start:{line:68,column:23},end:{line:76,column:10}},36:{start:{line:77,column:8},end:{line:77,column:47}},37:{start:{line:78,column:8},end:{line:80,column:11}},38:{start:{line:82,column:4},end:{line:96,column:7}},39:{start:{line:83,column:23},end:{line:91,column:10}},40:{start:{line:92,column:8},end:{line:92,column:47}},41:{start:{line:93,column:8},end:{line:95,column:11}},42:{start:{line:97,column:4},end:{line:111,column:7}},43:{start:{line:98,column:23},end:{line:106,column:10}},44:{start:{line:107,column:8},end:{line:107,column:48}},45:{start:{line:108,column:8},end:{line:110,column:11}},46:{start:{line:112,column:4},end:{line:126,column:7}},47:{start:{line:113,column:23},end:{line:121,column:10}},48:{start:{line:122,column:8},end:{line:122,column:47}},49:{start:{line:123,column:8},end:{line:125,column:11}},50:{start:{line:127,column:4},end:{line:141,column:7}},51:{start:{line:128,column:23},end:{line:136,column:10}},52:{start:{line:137,column:8},end:{line:137,column:45}},53:{start:{line:138,column:8},end:{line:140,column:11}},54:{start:{line:142,column:4},end:{line:149,column:7}},55:{start:{line:143,column:21},end:{line:143,column:70}},56:{start:{line:144,column:8},end:{line:144,column:39}},57:{start:{line:145,column:8},end:{line:145,column:67}},58:{start:{line:146,column:8},end:{line:146,column:38}},59:{start:{line:147,column:8},end:{line:147,column:67}},60:{start:{line:148,column:8},end:{line:148,column:36}},61:{start:{line:150,column:4},end:{line:153,column:7}},62:{start:{line:151,column:8},end:{line:151,column:68}},63:{start:{line:152,column:8},end:{line:152,column:46}},64:{start:{line:154,column:4},end:{line:157,column:7}},65:{start:{line:155,column:8},end:{line:155,column:68}},66:{start:{line:156,column:8},end:{line:156,column:46}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:18},end:{line:4,column:19}},loc:{start:{line:4,column:24},end:{line:158,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:21},end:{line:13,column:5}},line:6},2:{name:"(anonymous_2)",decl:{start:{line:14,column:30},end:{line:14,column:31}},loc:{start:{line:14,column:36},end:{line:16,column:5}},line:14},3:{name:"(anonymous_3)",decl:{start:{line:17,column:65},end:{line:17,column:66}},loc:{start:{line:17,column:71},end:{line:20,column:5}},line:17},4:{name:"(anonymous_4)",decl:{start:{line:21,column:63},end:{line:21,column:64}},loc:{start:{line:21,column:69},end:{line:24,column:5}},line:21},5:{name:"(anonymous_5)",decl:{start:{line:25,column:66},end:{line:25,column:67}},loc:{start:{line:25,column:72},end:{line:30,column:5}},line:25},6:{name:"(anonymous_6)",decl:{start:{line:31,column:79},end:{line:31,column:80}},loc:{start:{line:31,column:85},end:{line:34,column:5}},line:31},7:{name:"(anonymous_7)",decl:{start:{line:35,column:80},end:{line:35,column:81}},loc:{start:{line:35,column:86},end:{line:40,column:5}},line:35},8:{name:"(anonymous_8)",decl:{start:{line:41,column:77},end:{line:41,column:78}},loc:{start:{line:41,column:83},end:{line:44,column:5}},line:41},9:{name:"(anonymous_9)",decl:{start:{line:45,column:78},end:{line:45,column:79}},loc:{start:{line:45,column:84},end:{line:50,column:5}},line:45},10:{name:"(anonymous_10)",decl:{start:{line:51,column:78},end:{line:51,column:79}},loc:{start:{line:51,column:84},end:{line:58,column:5}},line:51},11:{name:"(anonymous_11)",decl:{start:{line:59,column:88},end:{line:59,column:89}},loc:{start:{line:59,column:94},end:{line:66,column:5}},line:59},12:{name:"(anonymous_12)",decl:{start:{line:67,column:92},end:{line:67,column:93}},loc:{start:{line:67,column:98},end:{line:81,column:5}},line:67},13:{name:"(anonymous_13)",decl:{start:{line:82,column:101},end:{line:82,column:102}},loc:{start:{line:82,column:107},end:{line:96,column:5}},line:82},14:{name:"(anonymous_14)",decl:{start:{line:97,column:103},end:{line:97,column:104}},loc:{start:{line:97,column:109},end:{line:111,column:5}},line:97},15:{name:"(anonymous_15)",decl:{start:{line:112,column:110},end:{line:112,column:111}},loc:{start:{line:112,column:116},end:{line:126,column:5}},line:112},16:{name:"(anonymous_16)",decl:{start:{line:127,column:108},end:{line:127,column:109}},loc:{start:{line:127,column:114},end:{line:141,column:5}},line:127},17:{name:"(anonymous_17)",decl:{start:{line:142,column:59},end:{line:142,column:60}},loc:{start:{line:142,column:65},end:{line:149,column:5}},line:142},18:{name:"(anonymous_18)",decl:{start:{line:150,column:75},end:{line:150,column:76}},loc:{start:{line:150,column:81},end:{line:153,column:5}},line:150},19:{name:"(anonymous_19)",decl:{start:{line:154,column:76},end:{line:154,column:77}},loc:{start:{line:154,column:82},end:{line:157,column:5}},line:154}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\model.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\model.test.ts"],names:[],mappings:"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",sourcesContent:["import { StepInfoFromModel, DataForValueScale } from './types';\r\nimport { Model } from './Model';\r\nimport { DataForAdjustPosition } from '../View/Handles/types';\r\n\r\ndescribe('Model', () => {\r\n  let model: Model;\r\n\r\n  beforeEach(() => {\r\n    model = new Model({\r\n      min: '0',\r\n      max: '10',\r\n      from: '3',\r\n      to: '7',\r\n    });\r\n  });\r\n\r\n  it('model can be create', () => {\r\n    expect(model).toBeTruthy();\r\n  });\r\n\r\n  it('calculateValuesByPosition() calculate correct for from', () => {\r\n    model.calculateValuesByPosition({ target: 'from', position: '50', sliderWidth: 100 });\r\n    expect(model.values.from).toEqual('5');\r\n  });\r\n\r\n  it('calculateValuesByPosition() calculate correct for to', () => {\r\n    model.calculateValuesByPosition({ target: 'to', position: '50', sliderWidth: 100 });\r\n    expect(model.values.to).toEqual('5');\r\n  });\r\n\r\n  it('calculateDataForValueScale() return correct value scale', () => {\r\n    const result:DataForValueScale = model.calculateDataForValueScale();\r\n    expect(result).toEqual({\r\n      min: '0', max: '10', 20: '2', 40: '4', 60: '6', 80: '8',\r\n    });\r\n  });\r\n\r\n  it('assignValueFromScale() choose from handel and record result to Model', () => {\r\n    model.assignValueFromScale('2', true);\r\n    expect(model.values.from).toEqual('2');\r\n  });\r\n\r\n  it('assignValueFromScale() choose from handel and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.assignValueFromScale('2', true);\r\n    expect(result).toEqual({\r\n      target: 'from', value: '2', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('assignValueFromScale() choose to handel and record result to Model', () => {\r\n    model.assignValueFromScale('8', true);\r\n    expect(model.values.to).toEqual('8');\r\n  });\r\n\r\n  it('assignValueFromScale() choose to handel and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.assignValueFromScale('8', true);\r\n    expect(result).toEqual({\r\n      target: 'to', value: '8', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('calculateStepWidth() calculate correct step width with correct step', () => {\r\n    const result: StepInfoFromModel = model.calculateStepWidth({\r\n      step: 2,\r\n      sliderWidth: 120,\r\n      handleWidth: 20,\r\n    });\r\n    expect(result).toEqual({ stepWidth: '20', step: 2, minStep: 0.01 });\r\n  });\r\n\r\n  it('calculateStepWidth() calculate correct step width with step less that minimum', () => {\r\n    const result: StepInfoFromModel = model.calculateStepWidth({\r\n      step: -1,\r\n      sliderWidth: 120,\r\n      handleWidth: 20,\r\n    });\r\n    expect(result).toEqual({ stepWidth: '0.1', step: 0.01, minStep: 0.01 });\r\n  });\r\n\r\n  it('prepareInputValueForRecord() allow correct from value and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.prepareInputValueForRecord({\r\n      name: 'from',\r\n      value: '2',\r\n      isDouble: false,\r\n      positions: { from: 30, to: 70 },\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n      step: false,\r\n    });\r\n\r\n    expect(model.values.from).toEqual('2');\r\n    expect(result).toEqual({\r\n      target: 'from', value: '2', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('prepareInputValueForRecord() corrects from value less than min and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.prepareInputValueForRecord({\r\n      name: 'from',\r\n      value: '-5',\r\n      isDouble: false,\r\n      positions: { from: 30, to: 70 },\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n      step: false,\r\n    });\r\n\r\n    expect(model.values.from).toEqual('0');\r\n    expect(result).toEqual({\r\n      target: 'from', value: '0', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('prepareInputValueForRecord() corrects from value bigger than max and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.prepareInputValueForRecord({\r\n      name: 'from',\r\n      value: '15',\r\n      isDouble: false,\r\n      positions: { from: 30, to: 70 },\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n      step: false,\r\n    });\r\n\r\n    expect(model.values.from).toEqual('10');\r\n    expect(result).toEqual({\r\n      target: 'from', value: '10', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('prepareInputValueForRecord() corrects from value when it bigger than to and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.prepareInputValueForRecord({\r\n      name: 'from',\r\n      value: '15',\r\n      isDouble: true,\r\n      positions: { from: 30, to: 70 },\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n      step: false,\r\n    });\r\n\r\n    expect(model.values.from).toEqual('7');\r\n    expect(result).toEqual({\r\n      target: 'from', value: '7', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('prepareInputValueForRecord() corrects to value when it less than from and return correct settings', () => {\r\n    const result: DataForAdjustPosition = model.prepareInputValueForRecord({\r\n      name: 'to',\r\n      value: '0',\r\n      isDouble: true,\r\n      positions: { from: 30, to: 70 },\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n      step: false,\r\n    });\r\n\r\n    expect(model.values.to).toEqual('3');\r\n    expect(result).toEqual({\r\n      target: 'to', value: '3', totalValues: 10, minValue: '0',\r\n    });\r\n  });\r\n\r\n  it('truncatesNumbersAfterDot() cut numbers correctly', () => {\r\n    let result: string = Model.truncatesNumbersAfterDot(2.1222222);\r\n    expect(result).toEqual('2.12');\r\n\r\n    result = Model.truncatesNumbersAfterDot(2.1011111);\r\n    expect(result).toEqual('2.1');\r\n\r\n    result = Model.truncatesNumbersAfterDot(2.0000001);\r\n    expect(result).toEqual('2');\r\n  });\r\n\r\n  it('changeSliderValuesRange() record value bigger then max correctly', () => {\r\n    model.changeSliderValuesRange({ value: '11', name: 'min' });\r\n    expect(model.values.min).toEqual('9');\r\n  });\r\n\r\n  it('changeSliderValuesRange() record value smaller then min correctly', () => {\r\n    model.changeSliderValuesRange({ value: '-1', name: 'max' });\r\n    expect(model.values.max).toEqual('1');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/Model/Model.ts"));C.s[2]++,describe("Model",(()=>{let A;C.f[0]++,C.s[3]++,beforeEach((()=>{C.f[1]++,C.s[4]++,A=new a.Model({min:"0",max:"10",from:"3",to:"7"})})),C.s[5]++,it("model can be create",(()=>{C.f[2]++,C.s[6]++,expect(A).toBeTruthy()})),C.s[7]++,it("calculateValuesByPosition() calculate correct for from",(()=>{C.f[3]++,C.s[8]++,A.calculateValuesByPosition({target:"from",position:"50",sliderWidth:100}),C.s[9]++,expect(A.values.from).toEqual("5")})),C.s[10]++,it("calculateValuesByPosition() calculate correct for to",(()=>{C.f[4]++,C.s[11]++,A.calculateValuesByPosition({target:"to",position:"50",sliderWidth:100}),C.s[12]++,expect(A.values.to).toEqual("5")})),C.s[13]++,it("calculateDataForValueScale() return correct value scale",(()=>{C.f[5]++;const e=(C.s[14]++,A.calculateDataForValueScale());C.s[15]++,expect(e).toEqual({min:"0",max:"10",20:"2",40:"4",60:"6",80:"8"})})),C.s[16]++,it("assignValueFromScale() choose from handel and record result to Model",(()=>{C.f[6]++,C.s[17]++,A.assignValueFromScale("2",!0),C.s[18]++,expect(A.values.from).toEqual("2")})),C.s[19]++,it("assignValueFromScale() choose from handel and return correct settings",(()=>{C.f[7]++;const e=(C.s[20]++,A.assignValueFromScale("2",!0));C.s[21]++,expect(e).toEqual({target:"from",value:"2",totalValues:10,minValue:"0"})})),C.s[22]++,it("assignValueFromScale() choose to handel and record result to Model",(()=>{C.f[8]++,C.s[23]++,A.assignValueFromScale("8",!0),C.s[24]++,expect(A.values.to).toEqual("8")})),C.s[25]++,it("assignValueFromScale() choose to handel and return correct settings",(()=>{C.f[9]++;const e=(C.s[26]++,A.assignValueFromScale("8",!0));C.s[27]++,expect(e).toEqual({target:"to",value:"8",totalValues:10,minValue:"0"})})),C.s[28]++,it("calculateStepWidth() calculate correct step width with correct step",(()=>{C.f[10]++;const e=(C.s[29]++,A.calculateStepWidth({step:2,sliderWidth:120,handleWidth:20}));C.s[30]++,expect(e).toEqual({stepWidth:"20",step:2,minStep:.01})})),C.s[31]++,it("calculateStepWidth() calculate correct step width with step less that minimum",(()=>{C.f[11]++;const e=(C.s[32]++,A.calculateStepWidth({step:-1,sliderWidth:120,handleWidth:20}));C.s[33]++,expect(e).toEqual({stepWidth:"0.1",step:.01,minStep:.01})})),C.s[34]++,it("prepareInputValueForRecord() allow correct from value and return correct settings",(()=>{C.f[12]++;const e=(C.s[35]++,A.prepareInputValueForRecord({name:"from",value:"2",isDouble:!1,positions:{from:30,to:70},handleWidth:20,sliderWidth:120,step:!1}));C.s[36]++,expect(A.values.from).toEqual("2"),C.s[37]++,expect(e).toEqual({target:"from",value:"2",totalValues:10,minValue:"0"})})),C.s[38]++,it("prepareInputValueForRecord() corrects from value less than min and return correct settings",(()=>{C.f[13]++;const e=(C.s[39]++,A.prepareInputValueForRecord({name:"from",value:"-5",isDouble:!1,positions:{from:30,to:70},handleWidth:20,sliderWidth:120,step:!1}));C.s[40]++,expect(A.values.from).toEqual("0"),C.s[41]++,expect(e).toEqual({target:"from",value:"0",totalValues:10,minValue:"0"})})),C.s[42]++,it("prepareInputValueForRecord() corrects from value bigger than max and return correct settings",(()=>{C.f[14]++;const e=(C.s[43]++,A.prepareInputValueForRecord({name:"from",value:"15",isDouble:!1,positions:{from:30,to:70},handleWidth:20,sliderWidth:120,step:!1}));C.s[44]++,expect(A.values.from).toEqual("10"),C.s[45]++,expect(e).toEqual({target:"from",value:"10",totalValues:10,minValue:"0"})})),C.s[46]++,it("prepareInputValueForRecord() corrects from value when it bigger than to and return correct settings",(()=>{C.f[15]++;const e=(C.s[47]++,A.prepareInputValueForRecord({name:"from",value:"15",isDouble:!0,positions:{from:30,to:70},handleWidth:20,sliderWidth:120,step:!1}));C.s[48]++,expect(A.values.from).toEqual("7"),C.s[49]++,expect(e).toEqual({target:"from",value:"7",totalValues:10,minValue:"0"})})),C.s[50]++,it("prepareInputValueForRecord() corrects to value when it less than from and return correct settings",(()=>{C.f[16]++;const e=(C.s[51]++,A.prepareInputValueForRecord({name:"to",value:"0",isDouble:!0,positions:{from:30,to:70},handleWidth:20,sliderWidth:120,step:!1}));C.s[52]++,expect(A.values.to).toEqual("3"),C.s[53]++,expect(e).toEqual({target:"to",value:"3",totalValues:10,minValue:"0"})})),C.s[54]++,it("truncatesNumbersAfterDot() cut numbers correctly",(()=>{C.f[17]++;let A=(C.s[55]++,a.Model.truncatesNumbersAfterDot(2.1222222));C.s[56]++,expect(A).toEqual("2.12"),C.s[57]++,A=a.Model.truncatesNumbersAfterDot(2.1011111),C.s[58]++,expect(A).toEqual("2.1"),C.s[59]++,A=a.Model.truncatesNumbersAfterDot(2.0000001),C.s[60]++,expect(A).toEqual("2")})),C.s[61]++,it("changeSliderValuesRange() record value bigger then max correctly",(()=>{C.f[18]++,C.s[62]++,A.changeSliderValuesRange({value:"11",name:"min"}),C.s[63]++,expect(A.values.min).toEqual("9")})),C.s[64]++,it("changeSliderValuesRange() record value smaller then min correctly",(()=>{C.f[19]++,C.s[65]++,A.changeSliderValuesRange({value:"-1",name:"max"}),C.s[66]++,expect(A.values.max).toEqual("1")}))}))},"./src/plugin/Model/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\types.ts",t="b6b7455bb6e26e3b62696f9f491f7eade6bb5f7e",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Model\\types.ts"],names:[],mappings:"",sourcesContent:["type CalculationData = {\r\n  target: 'from' | 'to' | 'min' | 'max';\r\n  position: string;\r\n  sliderWidth: number;\r\n};\r\n\r\ntype DataForPrepareValue = {\r\n  name: 'from' | 'to';\r\n  value: string;\r\n  isDouble: boolean;\r\n  positions: {\r\n    from: number;\r\n    to: number;\r\n  };\r\n  handleWidth: number;\r\n  sliderWidth: number;\r\n  step: boolean | number;\r\n};\r\n\r\ntype DataForRefreshingModel = {\r\n  target: 'from' | 'to' | 'min' | 'max';\r\n  value: string;\r\n};\r\n\r\ntype DataForValueScale = {\r\n  min: string;\r\n  max: string;\r\n  20: string;\r\n  40: string;\r\n  60: string;\r\n  80: string;\r\n};\r\n\r\ntype BasicModelSettings = {\r\n  min: string,\r\n  max: string,\r\n  from: string,\r\n  to: string\r\n};\r\n\r\ntype StepInfoFromModel = {\r\n  minStep: number;\r\n  stepWidth: string;\r\n  step: number;\r\n};\r\n\r\ntype StepCalculateData = {\r\n  step: number,\r\n  sliderWidth: number,\r\n  handleWidth: number,\r\n};\r\n\r\ntype ValuesRangeData = {\r\n  name: string,\r\n  value: string,\r\n};\r\n\r\nexport {\r\n  CalculationData,\r\n  DataForPrepareValue,\r\n  DataForRefreshingModel,\r\n  DataForValueScale,\r\n  BasicModelSettings,\r\n  StepInfoFromModel,\r\n  StepCalculateData,\r\n  ValuesRangeData,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/Presenter/Presenter.ts":function(A,e,n){"use strict";var t,l,s,i,r,o,C,a=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\Presenter.ts",l="e04003a9bcfe4953d6587d2b371adc4cccdc2207",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\Presenter.ts",statementMap:{0:{start:{line:2,column:17},end:{line:7,column:1}},1:{start:{line:3,column:12},end:{line:3,column:28}},2:{start:{line:3,column:34},end:{line:3,column:125}},3:{start:{line:4,column:4},end:{line:5,column:150}},4:{start:{line:4,column:79},end:{line:4,column:131}},5:{start:{line:5,column:9},end:{line:5,column:150}},6:{start:{line:5,column:58},end:{line:5,column:150}},7:{start:{line:5,column:81},end:{line:5,column:150}},8:{start:{line:6,column:4},end:{line:6,column:66}},9:{start:{line:9,column:0},end:{line:9,column:62}},10:{start:{line:10,column:0},end:{line:10,column:27}},11:{start:{line:11,column:29},end:{line:11,column:58}},12:{start:{line:12,column:16},end:{line:196,column:1}},13:{start:{line:14,column:8},end:{line:14,column:29}},14:{start:{line:15,column:8},end:{line:15,column:31}},15:{start:{line:18,column:8},end:{line:34,column:11}},16:{start:{line:20,column:37},end:{line:20,column:126}},17:{start:{line:21,column:33},end:{line:25,column:17}},18:{start:{line:26,column:16},end:{line:29,column:17}},19:{start:{line:27,column:20},end:{line:27,column:55}},20:{start:{line:28,column:20},end:{line:28,column:56}},21:{start:{line:30,column:16},end:{line:30,column:35}},22:{start:{line:31,column:16},end:{line:31,column:58}},23:{start:{line:32,column:16},end:{line:32,column:28}},24:{start:{line:37,column:23},end:{line:37,column:62}},25:{start:{line:38,column:8},end:{line:38,column:56}},26:{start:{line:39,column:8},end:{line:39,column:166}},27:{start:{line:42,column:8},end:{line:47,column:10}},28:{start:{line:50,column:8},end:{line:50,column:98}},29:{start:{line:53,column:28},end:{line:53,column:93}},30:{start:{line:54,column:26},end:{line:54,column:87}},31:{start:{line:55,column:26},end:{line:55,column:74}},32:{start:{line:56,column:24},end:{line:56,column:70}},33:{start:{line:57,column:32},end:{line:57,column:78}},34:{start:{line:58,column:8},end:{line:58,column:35}},35:{start:{line:59,column:8},end:{line:59,column:33}},36:{start:{line:60,column:8},end:{line:60,column:71}},37:{start:{line:61,column:8},end:{line:61,column:67}},38:{start:{line:62,column:8},end:{line:66,column:11}},39:{start:{line:67,column:8},end:{line:71,column:11}},40:{start:{line:74,column:35},end:{line:86,column:9}},41:{start:{line:75,column:40},end:{line:79,column:14}},42:{start:{line:80,column:12},end:{line:80,column:53}},43:{start:{line:81,column:12},end:{line:81,column:69}},44:{start:{line:82,column:12},end:{line:85,column:13}},45:{start:{line:83,column:16},end:{line:83,column:83}},46:{start:{line:84,column:16},end:{line:84,column:99}},47:{start:{line:87,column:8},end:{line:88,column:33}},48:{start:{line:88,column:12},end:{line:88,column:33}},49:{start:{line:91,column:26},end:{line:91,column:31}},50:{start:{line:92,column:8},end:{line:97,column:9}},51:{start:{line:93,column:12},end:{line:93,column:33}},52:{start:{line:95,column:13},end:{line:97,column:9}},53:{start:{line:96,column:12},end:{line:96,column:31}},54:{start:{line:98,column:8},end:{line:98,column:27}},55:{start:{line:101,column:28},end:{line:101,column:64}},56:{start:{line:102,column:8},end:{line:103,column:19}},57:{start:{line:103,column:12},end:{line:103,column:19}},58:{start:{line:104,column:23},end:{line:115,column:10}},59:{start:{line:116,column:28},end:{line:116,column:106}},60:{start:{line:117,column:8},end:{line:117,column:48}},61:{start:{line:118,column:8},end:{line:118,column:49}},62:{start:{line:119,column:8},end:{line:119,column:68}},63:{start:{line:120,column:8},end:{line:120,column:88}},64:{start:{line:123,column:23},end:{line:123,column:93}},65:{start:{line:124,column:28},end:{line:124,column:106}},66:{start:{line:125,column:8},end:{line:125,column:48}},67:{start:{line:126,column:8},end:{line:126,column:49}},68:{start:{line:127,column:8},end:{line:127,column:68}},69:{start:{line:128,column:8},end:{line:129,column:77}},70:{start:{line:129,column:12},end:{line:129,column:77}},71:{start:{line:130,column:8},end:{line:131,column:75}},72:{start:{line:131,column:12},end:{line:131,column:75}},73:{start:{line:134,column:8},end:{line:137,column:11}},74:{start:{line:138,column:8},end:{line:138,column:92}},75:{start:{line:139,column:8},end:{line:139,column:84}},76:{start:{line:140,column:8},end:{line:140,column:81}},77:{start:{line:143,column:8},end:{line:164,column:9}},78:{start:{line:145,column:16},end:{line:145,column:47}},79:{start:{line:146,column:16},end:{line:146,column:22}},80:{start:{line:148,column:16},end:{line:148,column:54}},81:{start:{line:149,column:16},end:{line:149,column:22}},82:{start:{line:151,column:16},end:{line:151,column:43}},83:{start:{line:152,column:16},end:{line:152,column:22}},84:{start:{line:154,column:16},end:{line:154,column:74}},85:{start:{line:155,column:16},end:{line:155,column:22}},86:{start:{line:157,column:16},end:{line:157,column:66}},87:{start:{line:158,column:16},end:{line:158,column:22}},88:{start:{line:160,column:16},end:{line:160,column:63}},89:{start:{line:161,column:16},end:{line:161,column:22}},90:{start:{line:163,column:16},end:{line:163,column:22}},91:{start:{line:167,column:21},end:{line:167,column:25}},92:{start:{line:168,column:8},end:{line:175,column:11}},93:{start:{line:170,column:16},end:{line:171,column:33}},94:{start:{line:171,column:20},end:{line:171,column:33}},95:{start:{line:172,column:16},end:{line:172,column:62}},96:{start:{line:173,column:16},end:{line:173,column:28}},97:{start:{line:178,column:8},end:{line:188,column:11}},98:{start:{line:180,column:16},end:{line:180,column:41}},99:{start:{line:181,column:16},end:{line:185,column:19}},100:{start:{line:186,column:16},end:{line:186,column:28}},101:{start:{line:191,column:32},end:{line:191,column:36}},102:{start:{line:192,column:8},end:{line:192,column:79}},103:{start:{line:193,column:8},end:{line:193,column:65}},104:{start:{line:194,column:8},end:{line:194,column:51}},105:{start:{line:197,column:0},end:{line:199,column:14}},106:{start:{line:200,column:0},end:{line:200,column:30}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:2,column:46},end:{line:2,column:47}},loc:{start:{line:2,column:87},end:{line:7,column:1}},line:2},1:{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:37},end:{line:16,column:5}},line:13},2:{name:"(anonymous_2)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:44},end:{line:35,column:5}},line:17},3:{name:"(anonymous_3)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:30},end:{line:40,column:5}},line:36},4:{name:"(anonymous_4)",decl:{start:{line:41,column:4},end:{line:41,column:5}},loc:{start:{line:41,column:48},end:{line:48,column:5}},line:41},5:{name:"(anonymous_5)",decl:{start:{line:49,column:4},end:{line:49,column:5}},loc:{start:{line:49,column:47},end:{line:51,column:5}},line:49},6:{name:"(anonymous_6)",decl:{start:{line:52,column:4},end:{line:52,column:5}},loc:{start:{line:52,column:37},end:{line:72,column:5}},line:52},7:{name:"(anonymous_7)",decl:{start:{line:73,column:4},end:{line:73,column:5}},loc:{start:{line:73,column:26},end:{line:89,column:5}},line:73},8:{name:"(anonymous_8)",decl:{start:{line:74,column:35},end:{line:74,column:36}},loc:{start:{line:74,column:41},end:{line:86,column:9}},line:74},9:{name:"(anonymous_9)",decl:{start:{line:90,column:4},end:{line:90,column:5}},loc:{start:{line:90,column:36},end:{line:99,column:5}},line:90},10:{name:"(anonymous_10)",decl:{start:{line:100,column:4},end:{line:100,column:5}},loc:{start:{line:100,column:45},end:{line:121,column:5}},line:100},11:{name:"(anonymous_11)",decl:{start:{line:122,column:4},end:{line:122,column:5}},loc:{start:{line:122,column:43},end:{line:132,column:5}},line:122},12:{name:"(anonymous_12)",decl:{start:{line:133,column:4},end:{line:133,column:5}},loc:{start:{line:133,column:46},end:{line:141,column:5}},line:133},13:{name:"(anonymous_13)",decl:{start:{line:142,column:4},end:{line:142,column:5}},loc:{start:{line:142,column:45},end:{line:165,column:5}},line:142},14:{name:"(anonymous_14)",decl:{start:{line:166,column:4},end:{line:166,column:5}},loc:{start:{line:166,column:30},end:{line:176,column:5}},line:166},15:{name:"(anonymous_15)",decl:{start:{line:177,column:4},end:{line:177,column:5}},loc:{start:{line:177,column:27},end:{line:189,column:5}},line:177},16:{name:"(anonymous_16)",decl:{start:{line:190,column:4},end:{line:190,column:5}},loc:{start:{line:190,column:17},end:{line:195,column:5}},line:190}},branchMap:{0:{loc:{start:{line:2,column:17},end:{line:7,column:1}},type:"binary-expr",locations:[{start:{line:2,column:18},end:{line:2,column:22}},{start:{line:2,column:26},end:{line:2,column:41}},{start:{line:2,column:46},end:{line:7,column:1}}],line:2},1:{loc:{start:{line:3,column:34},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:42},end:{line:3,column:48}},{start:{line:3,column:51},end:{line:3,column:125}}],line:3},2:{loc:{start:{line:3,column:51},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:67},end:{line:3,column:118}},{start:{line:3,column:121},end:{line:3,column:125}}],line:3},3:{loc:{start:{line:4,column:4},end:{line:5,column:150}},type:"if",locations:[{start:{line:4,column:4},end:{line:5,column:150}},{start:{line:4,column:4},end:{line:5,column:150}}],line:4},4:{loc:{start:{line:4,column:8},end:{line:4,column:77}},type:"binary-expr",locations:[{start:{line:4,column:8},end:{line:4,column:35}},{start:{line:4,column:39},end:{line:4,column:77}}],line:4},5:{loc:{start:{line:5,column:58},end:{line:5,column:150}},type:"if",locations:[{start:{line:5,column:58},end:{line:5,column:150}},{start:{line:5,column:58},end:{line:5,column:150}}],line:5},6:{loc:{start:{line:5,column:85},end:{line:5,column:149}},type:"binary-expr",locations:[{start:{line:5,column:86},end:{line:5,column:143}},{start:{line:5,column:148},end:{line:5,column:149}}],line:5},7:{loc:{start:{line:5,column:86},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:94},end:{line:5,column:98}},{start:{line:5,column:101},end:{line:5,column:143}}],line:5},8:{loc:{start:{line:5,column:101},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:109},end:{line:5,column:126}},{start:{line:5,column:129},end:{line:5,column:143}}],line:5},9:{loc:{start:{line:6,column:11},end:{line:6,column:62}},type:"binary-expr",locations:[{start:{line:6,column:11},end:{line:6,column:16}},{start:{line:6,column:20},end:{line:6,column:21}},{start:{line:6,column:25},end:{line:6,column:62}}],line:6},10:{loc:{start:{line:20,column:37},end:{line:20,column:126}},type:"binary-expr",locations:[{start:{line:20,column:37},end:{line:20,column:46}},{start:{line:20,column:50},end:{line:20,column:126}}],line:20},11:{loc:{start:{line:26,column:16},end:{line:29,column:17}},type:"if",locations:[{start:{line:26,column:16},end:{line:29,column:17}},{start:{line:26,column:16},end:{line:29,column:17}}],line:26},12:{loc:{start:{line:82,column:12},end:{line:85,column:13}},type:"if",locations:[{start:{line:82,column:12},end:{line:85,column:13}},{start:{line:82,column:12},end:{line:85,column:13}}],line:82},13:{loc:{start:{line:87,column:8},end:{line:88,column:33}},type:"if",locations:[{start:{line:87,column:8},end:{line:88,column:33}},{start:{line:87,column:8},end:{line:88,column:33}}],line:87},14:{loc:{start:{line:92,column:8},end:{line:97,column:9}},type:"if",locations:[{start:{line:92,column:8},end:{line:97,column:9}},{start:{line:92,column:8},end:{line:97,column:9}}],line:92},15:{loc:{start:{line:95,column:13},end:{line:97,column:9}},type:"if",locations:[{start:{line:95,column:13},end:{line:97,column:9}},{start:{line:95,column:13},end:{line:97,column:9}}],line:95},16:{loc:{start:{line:102,column:8},end:{line:103,column:19}},type:"if",locations:[{start:{line:102,column:8},end:{line:103,column:19}},{start:{line:102,column:8},end:{line:103,column:19}}],line:102},17:{loc:{start:{line:128,column:8},end:{line:129,column:77}},type:"if",locations:[{start:{line:128,column:8},end:{line:129,column:77}},{start:{line:128,column:8},end:{line:129,column:77}}],line:128},18:{loc:{start:{line:130,column:8},end:{line:131,column:75}},type:"if",locations:[{start:{line:130,column:8},end:{line:131,column:75}},{start:{line:130,column:8},end:{line:131,column:75}}],line:130},19:{loc:{start:{line:135,column:18},end:{line:135,column:74}},type:"cond-expr",locations:[{start:{line:135,column:55},end:{line:135,column:61}},{start:{line:135,column:64},end:{line:135,column:74}}],line:135},20:{loc:{start:{line:135,column:18},end:{line:135,column:52}},type:"binary-expr",locations:[{start:{line:135,column:18},end:{line:135,column:32}},{start:{line:135,column:36},end:{line:135,column:52}}],line:135},21:{loc:{start:{line:143,column:8},end:{line:164,column:9}},type:"switch",locations:[{start:{line:144,column:12},end:{line:146,column:22}},{start:{line:147,column:12},end:{line:149,column:22}},{start:{line:150,column:12},end:{line:152,column:22}},{start:{line:153,column:12},end:{line:155,column:22}},{start:{line:156,column:12},end:{line:158,column:22}},{start:{line:159,column:12},end:{line:161,column:22}},{start:{line:162,column:12},end:{line:163,column:22}}],line:143},22:{loc:{start:{line:170,column:16},end:{line:171,column:33}},type:"if",locations:[{start:{line:170,column:16},end:{line:171,column:33}},{start:{line:170,column:16},end:{line:171,column:33}}],line:170}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0},b:{0:[0,0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0,0,0,0,0,0],22:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\Presenter.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\Presenter.ts"],names:[],mappings:"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",sourcesContent:["import autobind from 'autobind-decorator';\r\nimport { BasicModelSettings, CalculationData, DataForValueScale } from '../Model/types';\r\nimport { Model } from '../Model/Model';\r\nimport { DataForAdjustPosition } from '../View/Handles/types';\r\nimport { RefreshIntervalPositions } from '../View/SelectedInterval/types';\r\nimport { View } from '../View/View';\r\nimport { HandlesPosition } from '../View/Movement/types';\r\nimport { DataRequestToModel, DataRequestValue } from '../View/types';\r\n\r\n@autobind\r\nexport class Presenter {\r\n  private readonly view: View;\r\n\r\n  private readonly model: Model;\r\n\r\n  constructor(viewLink: View, modelLink: Model) {\r\n    this.view = viewLink;\r\n    this.model = modelLink;\r\n  }\r\n\r\n  private bindProxyToHandlesMovement(view: View, model: Model): HandlesPosition {\r\n    return new Proxy(this.view.movement.positions, {\r\n      set(target, prop: 'from' | 'to', val) {\r\n        const isExtraRange = val === 0 || val === view.slider.slider.offsetWidth - view.handles.fromHandle.offsetWidth;\r\n        const settings: CalculationData = {\r\n          position: String(val),\r\n          target: prop,\r\n          sliderWidth: view.slider.slider.offsetWidth - view.handles.fromHandle.offsetWidth,\r\n        };\r\n\r\n        if (isExtraRange) {\r\n          view.handles.isInputChanges = true;\r\n          view.sideMenu.isInputChanges = true;\r\n        }\r\n\r\n        target[prop] = val;\r\n        model.calculateValuesByPosition(settings);\r\n\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  private distributesDataForScale(): void {\r\n    const values: DataForValueScale = this.model.calculateDataForValueScale();\r\n    this.view.valuesScale.refreshValueScale(values);\r\n    this.view.valuesScale.centersValues(\r\n      this.view.slider.slider.offsetWidth - this.view.handles.fromHandle.offsetWidth,\r\n      this.view.handles.fromHandle.offsetWidth,\r\n    );\r\n  }\r\n\r\n  private prepareDataForAdjustPosition(target: 'from' | 'to', value: string): DataForAdjustPosition {\r\n    return {\r\n      target,\r\n      value,\r\n      totalValues: Number(this.model.values.max) - Number(this.model.values.min),\r\n      minValue: this.model.values.min,\r\n    };\r\n  }\r\n\r\n  private prepareNewHandlesPositionsData(handleData: DataForAdjustPosition): RefreshIntervalPositions {\r\n    return this.view.handles.adjustPositions(\r\n      handleData,\r\n      this.view.slider.slider.offsetWidth,\r\n    );\r\n  }\r\n\r\n  private distributeDataForStartPosition(): void {\r\n    const dataForFrom: DataForAdjustPosition = this.prepareDataForAdjustPosition('from', this.model.values.from);\r\n    const dataForTo: DataForAdjustPosition = this.prepareDataForAdjustPosition('to', this.model.values.to);\r\n    const startFrom: RefreshIntervalPositions = this.prepareNewHandlesPositionsData(dataForFrom);\r\n    const startTo: RefreshIntervalPositions = this.prepareNewHandlesPositionsData(dataForTo);\r\n    const adjustPositions = this.view.interval.adjustPositionRelativeValue;\r\n    adjustPositions(startFrom);\r\n    adjustPositions(startTo);\r\n    this.view.movement.positions.from = Number(startFrom.position);\r\n    this.view.movement.positions.to = Number(startTo.position);\r\n    this.view.refreshAllComponents({\r\n      value: this.model.values.min,\r\n      target: 'min',\r\n      isToFixed: this.view.basicSettings.integer,\r\n    });\r\n    this.view.refreshAllComponents({\r\n      value: this.model.values.max,\r\n      target: 'max',\r\n      isToFixed: this.view.basicSettings.integer,\r\n    });\r\n  }\r\n\r\n  private distributeStepWidth(): void {\r\n    const writesNewStepWidth = (): void => {\r\n      const { stepWidth, step } = this.model.calculateStepWidth({\r\n        step: Number(this.view.basicSettings.step),\r\n        sliderWidth: this.view.slider.slider.offsetWidth,\r\n        handleWidth: this.view.handles.fromHandle.offsetWidth,\r\n      });\r\n      this.view.movement.stepWidth = stepWidth;\r\n\r\n      this.view.basicSettings.integer = Number.isInteger(step);\r\n\r\n      if (this.view.basicSettings.sideMenu) {\r\n        this.view.sideMenu.sideMenuElements.stepInput!.value = String(step);\r\n        this.view.sideMenu.sideMenuElements.integerToggle!.checked = Number.isInteger(step);\r\n      }\r\n    };\r\n\r\n    if (typeof this.view.basicSettings.step === 'number') writesNewStepWidth();\r\n  }\r\n\r\n  private static checkCorrectTarget(name: string): 'from' | 'to' | false {\r\n    let correctName: 'from' | 'to' | false = false;\r\n    if (name === 'from') {\r\n      correctName = 'from';\r\n    } else if (name === 'to') {\r\n      correctName = 'to';\r\n    }\r\n    return correctName;\r\n  }\r\n\r\n  private distributeNewValuesForApply(name: string, value: string): void {\r\n    const correctName: 'from' | 'to' | false = Presenter.checkCorrectTarget(name);\r\n    if (!correctName) return;\r\n\r\n    const result: DataForAdjustPosition = this.model.prepareInputValueForRecord({\r\n      name: correctName,\r\n      value,\r\n      step: this.view.basicSettings.step,\r\n      isDouble: this.view.basicSettings.double,\r\n      positions: {\r\n        from: this.view.movement.positions.from,\r\n        to: this.view.movement.positions.to,\r\n      },\r\n      handleWidth: this.view.handles.toHandle.offsetWidth,\r\n      sliderWidth: this.view.slider.slider.offsetWidth,\r\n    });\r\n    const newPosition: RefreshIntervalPositions = this.view.handles.adjustPositions(\r\n      result,\r\n      this.view.slider.slider.offsetWidth,\r\n    );\r\n\r\n    this.view.handles.isInputChanges = true;\r\n    this.view.sideMenu.isInputChanges = true;\r\n    this.view.interval.adjustPositionRelativeValue(newPosition);\r\n    this.view.movement.positions[newPosition.target] = Number(newPosition.position);\r\n  }\r\n\r\n  private distributeValueFromScaleToApply(value: string): void {\r\n    const result: DataForAdjustPosition = this.model.assignValueFromScale(value, this.view.basicSettings.double);\r\n    const newPosition: RefreshIntervalPositions = this.view.handles.adjustPositions(\r\n      result,\r\n      this.view.slider.slider.offsetWidth,\r\n    );\r\n    this.view.handles.isInputChanges = true;\r\n    this.view.sideMenu.isInputChanges = true;\r\n    this.view.interval.adjustPositionRelativeValue(newPosition);\r\n    if (newPosition.target === 'from') this.view.movement.positions.from = Number(newPosition.position);\r\n    if (newPosition.target === 'to') this.view.movement.positions.to = Number(newPosition.position);\r\n  }\r\n\r\n  private distributeSliderValuesRangeToApply(value: DataRequestValue): void {\r\n    this.model.changeSliderValuesRange({\r\n      name: value?.name,\r\n      value: value.value,\r\n    });\r\n    this.view.dataRequestToModel.needDataForStartPosition = { name: '', value: 'true' };\r\n    this.view.dataRequestToModel.needDataForScale = { name: '', value: 'true' };\r\n    this.view.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n  }\r\n\r\n  private handlesRequestsFromView(property: string, value: DataRequestValue): void {\r\n    switch (property) {\r\n      case 'needDataForScale':\r\n        this.distributesDataForScale();\r\n        break;\r\n      case 'needDataForStartPosition':\r\n        this.distributeDataForStartPosition();\r\n        break;\r\n      case 'needStepWidth':\r\n        this.distributeStepWidth();\r\n        break;\r\n      case 'needApplyNewValue':\r\n        this.distributeNewValuesForApply(value.name, value.value);\r\n        break;\r\n      case 'needApplyValueFromScale':\r\n        this.distributeValueFromScaleToApply(value.value);\r\n        break;\r\n      case 'needChangeSliderValuesRange':\r\n        this.distributeSliderValuesRangeToApply(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private bindProxyToViewRequests(): DataRequestToModel {\r\n    const that: this = this;\r\n    return new Proxy(this.view.dataRequestToModel, {\r\n      set(target: DataRequestToModel, property: string, value: DataRequestValue) {\r\n        if (!value) return false;\r\n        that.handlesRequestsFromView(property, value);\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  private bindProxyToModel(view: View): BasicModelSettings {\r\n    return new Proxy(this.model.values, {\r\n      set(target: BasicModelSettings, property: 'min' | 'max' | 'from' | 'to', value: string) {\r\n        target[property] = value;\r\n\r\n        view.refreshAllComponents({\r\n          value,\r\n          target: property,\r\n          isToFixed: view.basicSettings.integer,\r\n        });\r\n\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  public initialize(): void {\r\n    const { view, model } = this;\r\n\r\n    view.movement.positions = this.bindProxyToHandlesMovement(view, model);\r\n    view.dataRequestToModel = this.bindProxyToViewRequests();\r\n    model.values = this.bindProxyToModel(view);\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r)),u=(a.s[0]++,a.b[0][0]++,this&&(a.b[0][1]++,this.__decorate)||(a.b[0][2]++,function(A,e,n,t){a.f[0]++;var l,s=(a.s[1]++,arguments.length),i=(a.s[2]++,s<3?(a.b[1][0]++,e):(a.b[1][1]++,null===t?(a.b[2][0]++,t=Object.getOwnPropertyDescriptor(e,n)):(a.b[2][1]++,t)));if(a.s[3]++,a.b[4][0]++,"object"==typeof Reflect&&(a.b[4][1]++,"function"==typeof Reflect.decorate))a.b[3][0]++,a.s[4]++,i=Reflect.decorate(A,e,n,t);else{a.b[3][1]++,a.s[5]++;for(var r=A.length-1;r>=0;r--)a.s[6]++,(l=A[r])?(a.b[5][0]++,a.s[7]++,a.b[6][0]++,i=(s<3?(a.b[7][0]++,l(i)):(a.b[7][1]++,s>3?(a.b[8][0]++,l(e,n,i)):(a.b[8][1]++,l(e,n))))||(a.b[6][1]++,i)):a.b[5][1]++}return a.s[8]++,a.b[9][0]++,s>3&&(a.b[9][1]++,i)&&(a.b[9][2]++,Object.defineProperty(e,n,i)),i}));a.s[9]++,Object.defineProperty(e,"__esModule",{value:!0}),a.s[10]++,e.Presenter=void 0;const c=(a.s[11]++,n("./node_modules/autobind-decorator/lib/esm/index.js"));let m=(a.s[12]++,C=class{constructor(A,e){a.f[1]++,a.s[13]++,this.view=A,a.s[14]++,this.model=e}bindProxyToHandlesMovement(A,e){return a.f[2]++,a.s[15]++,new Proxy(this.view.movement.positions,{set(n,t,l){const s=(a.s[16]++,a.b[10][0]++,0===l||(a.b[10][1]++,l===A.slider.slider.offsetWidth-A.handles.fromHandle.offsetWidth)),i=(a.s[17]++,{position:String(l),target:t,sliderWidth:A.slider.slider.offsetWidth-A.handles.fromHandle.offsetWidth});return a.s[18]++,s?(a.b[11][0]++,a.s[19]++,A.handles.isInputChanges=!0,a.s[20]++,A.sideMenu.isInputChanges=!0):a.b[11][1]++,a.s[21]++,n[t]=l,a.s[22]++,e.calculateValuesByPosition(i),a.s[23]++,!0}})}distributesDataForScale(){a.f[3]++;const A=(a.s[24]++,this.model.calculateDataForValueScale());a.s[25]++,this.view.valuesScale.refreshValueScale(A),a.s[26]++,this.view.valuesScale.centersValues(this.view.slider.slider.offsetWidth-this.view.handles.fromHandle.offsetWidth,this.view.handles.fromHandle.offsetWidth)}prepareDataForAdjustPosition(A,e){return a.f[4]++,a.s[27]++,{target:A,value:e,totalValues:Number(this.model.values.max)-Number(this.model.values.min),minValue:this.model.values.min}}prepareNewHandlesPositionsData(A){return a.f[5]++,a.s[28]++,this.view.handles.adjustPositions(A,this.view.slider.slider.offsetWidth)}distributeDataForStartPosition(){a.f[6]++;const A=(a.s[29]++,this.prepareDataForAdjustPosition("from",this.model.values.from)),e=(a.s[30]++,this.prepareDataForAdjustPosition("to",this.model.values.to)),n=(a.s[31]++,this.prepareNewHandlesPositionsData(A)),t=(a.s[32]++,this.prepareNewHandlesPositionsData(e)),l=(a.s[33]++,this.view.interval.adjustPositionRelativeValue);a.s[34]++,l(n),a.s[35]++,l(t),a.s[36]++,this.view.movement.positions.from=Number(n.position),a.s[37]++,this.view.movement.positions.to=Number(t.position),a.s[38]++,this.view.refreshAllComponents({value:this.model.values.min,target:"min",isToFixed:this.view.basicSettings.integer}),a.s[39]++,this.view.refreshAllComponents({value:this.model.values.max,target:"max",isToFixed:this.view.basicSettings.integer})}distributeStepWidth(){a.f[7]++,a.s[40]++;const A=()=>{a.f[8]++;const{stepWidth:A,step:e}=(a.s[41]++,this.model.calculateStepWidth({step:Number(this.view.basicSettings.step),sliderWidth:this.view.slider.slider.offsetWidth,handleWidth:this.view.handles.fromHandle.offsetWidth}));a.s[42]++,this.view.movement.stepWidth=A,a.s[43]++,this.view.basicSettings.integer=Number.isInteger(e),a.s[44]++,this.view.basicSettings.sideMenu?(a.b[12][0]++,a.s[45]++,this.view.sideMenu.sideMenuElements.stepInput.value=String(e),a.s[46]++,this.view.sideMenu.sideMenuElements.integerToggle.checked=Number.isInteger(e)):a.b[12][1]++};a.s[47]++,"number"==typeof this.view.basicSettings.step?(a.b[13][0]++,a.s[48]++,A()):a.b[13][1]++}static checkCorrectTarget(A){a.f[9]++;let e=(a.s[49]++,!1);return a.s[50]++,"from"===A?(a.b[14][0]++,a.s[51]++,e="from"):(a.b[14][1]++,a.s[52]++,"to"===A?(a.b[15][0]++,a.s[53]++,e="to"):a.b[15][1]++),a.s[54]++,e}distributeNewValuesForApply(A,e){a.f[10]++;const n=(a.s[55]++,C.checkCorrectTarget(A));if(a.s[56]++,!n)return a.b[16][0]++,void a.s[57]++;a.b[16][1]++;const t=(a.s[58]++,this.model.prepareInputValueForRecord({name:n,value:e,step:this.view.basicSettings.step,isDouble:this.view.basicSettings.double,positions:{from:this.view.movement.positions.from,to:this.view.movement.positions.to},handleWidth:this.view.handles.toHandle.offsetWidth,sliderWidth:this.view.slider.slider.offsetWidth})),l=(a.s[59]++,this.view.handles.adjustPositions(t,this.view.slider.slider.offsetWidth));a.s[60]++,this.view.handles.isInputChanges=!0,a.s[61]++,this.view.sideMenu.isInputChanges=!0,a.s[62]++,this.view.interval.adjustPositionRelativeValue(l),a.s[63]++,this.view.movement.positions[l.target]=Number(l.position)}distributeValueFromScaleToApply(A){a.f[11]++;const e=(a.s[64]++,this.model.assignValueFromScale(A,this.view.basicSettings.double)),n=(a.s[65]++,this.view.handles.adjustPositions(e,this.view.slider.slider.offsetWidth));a.s[66]++,this.view.handles.isInputChanges=!0,a.s[67]++,this.view.sideMenu.isInputChanges=!0,a.s[68]++,this.view.interval.adjustPositionRelativeValue(n),a.s[69]++,"from"===n.target?(a.b[17][0]++,a.s[70]++,this.view.movement.positions.from=Number(n.position)):a.b[17][1]++,a.s[71]++,"to"===n.target?(a.b[18][0]++,a.s[72]++,this.view.movement.positions.to=Number(n.position)):a.b[18][1]++}distributeSliderValuesRangeToApply(A){a.f[12]++,a.s[73]++,this.model.changeSliderValuesRange({name:(a.b[20][0]++,null===A||(a.b[20][1]++,void 0===A)?void a.b[19][0]++:(a.b[19][1]++,A.name)),value:A.value}),a.s[74]++,this.view.dataRequestToModel.needDataForStartPosition={name:"",value:"true"},a.s[75]++,this.view.dataRequestToModel.needDataForScale={name:"",value:"true"},a.s[76]++,this.view.dataRequestToModel.needStepWidth={name:"",value:"true"}}handlesRequestsFromView(A,e){switch(a.f[13]++,a.s[77]++,A){case"needDataForScale":a.b[21][0]++,a.s[78]++,this.distributesDataForScale(),a.s[79]++;break;case"needDataForStartPosition":a.b[21][1]++,a.s[80]++,this.distributeDataForStartPosition(),a.s[81]++;break;case"needStepWidth":a.b[21][2]++,a.s[82]++,this.distributeStepWidth(),a.s[83]++;break;case"needApplyNewValue":a.b[21][3]++,a.s[84]++,this.distributeNewValuesForApply(e.name,e.value),a.s[85]++;break;case"needApplyValueFromScale":a.b[21][4]++,a.s[86]++,this.distributeValueFromScaleToApply(e.value),a.s[87]++;break;case"needChangeSliderValuesRange":a.b[21][5]++,a.s[88]++,this.distributeSliderValuesRangeToApply(e),a.s[89]++;break;default:a.b[21][6]++,a.s[90]++}}bindProxyToViewRequests(){a.f[14]++;const A=(a.s[91]++,this);return a.s[92]++,new Proxy(this.view.dataRequestToModel,{set:(e,n,t)=>(a.s[93]++,t?(a.b[22][1]++,a.s[95]++,A.handlesRequestsFromView(n,t),a.s[96]++,!0):(a.b[22][0]++,a.s[94]++,!1))})}bindProxyToModel(A){return a.f[15]++,a.s[97]++,new Proxy(this.model.values,{set:(e,n,t)=>(a.s[98]++,e[n]=t,a.s[99]++,A.refreshAllComponents({value:t,target:n,isToFixed:A.basicSettings.integer}),a.s[100]++,!0)})}initialize(){a.f[16]++;const{view:A,model:e}=(a.s[101]++,this);a.s[102]++,A.movement.positions=this.bindProxyToHandlesMovement(A,e),a.s[103]++,A.dataRequestToModel=this.bindProxyToViewRequests(),a.s[104]++,e.values=this.bindProxyToModel(A)}});a.s[105]++,m=C=u([c.default],m),a.s[106]++,e.Presenter=m},"./src/plugin/Presenter/presenter.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\presenter.test.ts",l="cb5a45778e5637e04dc8dea1c6c1acd0dbc3fdff",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\presenter.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:16},end:{line:3,column:41}},2:{start:{line:4,column:20},end:{line:4,column:42}},3:{start:{line:5,column:15},end:{line:5,column:38}},4:{start:{line:6,column:0},end:{line:91,column:3}},5:{start:{line:10,column:25},end:{line:18,column:5}},6:{start:{line:19,column:23},end:{line:19,column:52}},7:{start:{line:20,column:26},end:{line:25,column:5}},8:{start:{line:26,column:4},end:{line:38,column:7}},9:{start:{line:28,column:8},end:{line:28,column:49}},10:{start:{line:29,column:8},end:{line:29,column:57}},11:{start:{line:30,column:8},end:{line:30,column:59}},12:{start:{line:31,column:8},end:{line:31,column:161}},13:{start:{line:32,column:8},end:{line:32,column:49}},14:{start:{line:33,column:8},end:{line:33,column:53}},15:{start:{line:34,column:8},end:{line:34,column:51}},16:{start:{line:35,column:8},end:{line:35,column:31}},17:{start:{line:36,column:8},end:{line:36,column:35}},18:{start:{line:37,column:8},end:{line:37,column:34}},19:{start:{line:39,column:4},end:{line:41,column:7}},20:{start:{line:40,column:8},end:{line:40,column:39}},21:{start:{line:42,column:4},end:{line:46,column:7}},22:{start:{line:43,column:8},end:{line:43,column:41}},23:{start:{line:44,column:8},end:{line:44,column:63}},24:{start:{line:45,column:8},end:{line:45,column:48}},25:{start:{line:47,column:4},end:{line:51,column:7}},26:{start:{line:48,column:8},end:{line:48,column:41}},27:{start:{line:49,column:8},end:{line:49,column:63}},28:{start:{line:50,column:8},end:{line:50,column:46}},29:{start:{line:52,column:4},end:{line:60,column:7}},30:{start:{line:53,column:8},end:{line:53,column:79}},31:{start:{line:54,column:8},end:{line:54,column:65}},32:{start:{line:55,column:8},end:{line:55,column:61}},33:{start:{line:56,column:8},end:{line:56,column:61}},34:{start:{line:57,column:8},end:{line:57,column:61}},35:{start:{line:58,column:8},end:{line:58,column:61}},36:{start:{line:59,column:8},end:{line:59,column:67}},37:{start:{line:61,column:4},end:{line:65,column:7}},38:{start:{line:62,column:8},end:{line:62,column:87}},39:{start:{line:63,column:8},end:{line:63,column:57}},40:{start:{line:64,column:8},end:{line:64,column:55}},41:{start:{line:66,column:4},end:{line:70,column:7}},42:{start:{line:67,column:8},end:{line:67,column:37}},43:{start:{line:68,column:8},end:{line:68,column:76}},44:{start:{line:69,column:8},end:{line:69,column:54}},45:{start:{line:71,column:4},end:{line:75,column:7}},46:{start:{line:72,column:8},end:{line:72,column:82}},47:{start:{line:73,column:8},end:{line:73,column:57}},48:{start:{line:74,column:8},end:{line:74,column:48}},49:{start:{line:76,column:4},end:{line:80,column:7}},50:{start:{line:77,column:8},end:{line:77,column:80}},51:{start:{line:78,column:8},end:{line:78,column:55}},52:{start:{line:79,column:8},end:{line:79,column:46}},53:{start:{line:81,column:4},end:{line:90,column:7}},54:{start:{line:82,column:8},end:{line:82,column:84}},55:{start:{line:83,column:8},end:{line:83,column:48}},56:{start:{line:84,column:8},end:{line:84,column:84}},57:{start:{line:85,column:8},end:{line:85,column:48}},58:{start:{line:86,column:8},end:{line:86,column:84}},59:{start:{line:87,column:8},end:{line:87,column:46}},60:{start:{line:88,column:8},end:{line:88,column:84}},61:{start:{line:89,column:8},end:{line:89,column:46}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:6,column:22},end:{line:6,column:23}},loc:{start:{line:6,column:28},end:{line:91,column:1}},line:6},1:{name:"(anonymous_1)",decl:{start:{line:26,column:15},end:{line:26,column:16}},loc:{start:{line:26,column:21},end:{line:38,column:5}},line:26},2:{name:"(anonymous_2)",decl:{start:{line:39,column:34},end:{line:39,column:35}},loc:{start:{line:39,column:40},end:{line:41,column:5}},line:39},3:{name:"(anonymous_3)",decl:{start:{line:42,column:54},end:{line:42,column:55}},loc:{start:{line:42,column:60},end:{line:46,column:5}},line:42},4:{name:"(anonymous_4)",decl:{start:{line:47,column:52},end:{line:47,column:53}},loc:{start:{line:47,column:58},end:{line:51,column:5}},line:47},5:{name:"(anonymous_5)",decl:{start:{line:52,column:66},end:{line:52,column:67}},loc:{start:{line:52,column:72},end:{line:60,column:5}},line:52},6:{name:"(anonymous_6)",decl:{start:{line:61,column:59},end:{line:61,column:60}},loc:{start:{line:61,column:65},end:{line:65,column:5}},line:61},7:{name:"(anonymous_7)",decl:{start:{line:66,column:48},end:{line:66,column:49}},loc:{start:{line:66,column:54},end:{line:70,column:5}},line:66},8:{name:"(anonymous_8)",decl:{start:{line:71,column:65},end:{line:71,column:66}},loc:{start:{line:71,column:71},end:{line:75,column:5}},line:71},9:{name:"(anonymous_9)",decl:{start:{line:76,column:63},end:{line:76,column:64}},loc:{start:{line:76,column:69},end:{line:80,column:5}},line:76},10:{name:"(anonymous_10)",decl:{start:{line:81,column:69},end:{line:81,column:70}},loc:{start:{line:81,column:75},end:{line:90,column:5}},line:81}},branchMap:{0:{loc:{start:{line:31,column:8},end:{line:31,column:160}},type:"cond-expr",locations:[{start:{line:31,column:74},end:{line:31,column:80}},{start:{line:31,column:83},end:{line:31,column:160}}],line:31},1:{loc:{start:{line:31,column:8},end:{line:31,column:71}},type:"binary-expr",locations:[{start:{line:31,column:8},end:{line:31,column:54}},{start:{line:31,column:58},end:{line:31,column:71}}],line:31}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},b:{0:[0,0],1:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\presenter.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\Presenter\\presenter.test.ts"],names:[],mappings:"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",sourcesContent:["import { BasicModelSettings } from '../Model/types';\r\nimport { Model } from '../Model/Model';\r\nimport { Presenter } from './Presenter';\r\nimport { BasicViewSettings } from '../View/types';\r\nimport { View } from '../View/View';\r\n\r\ndescribe('Presenter', () => {\r\n  let presenter: Presenter;\r\n  let view: View;\r\n  let model: Model;\r\n  const viewSettings: BasicViewSettings = {\r\n    sideMenu: true,\r\n    double: true,\r\n    handlesValues: true,\r\n    step: 10,\r\n    valueScale: true,\r\n    vertical: true,\r\n    integer: true,\r\n  };\r\n  const viewTarget: HTMLDivElement = document.createElement('div');\r\n  const modelSettings: BasicModelSettings = {\r\n    min: '0',\r\n    max: '100',\r\n    from: '30',\r\n    to: '70',\r\n  };\r\n  beforeEach(() => {\r\n    model = new Model(modelSettings);\r\n    view = new View(viewSettings, viewTarget);\r\n    presenter = new Presenter(view, model);\r\n\r\n    document.querySelector('body')?.append(view.slider.slider, view.handles.fromHandle, view.handles.toHandle);\r\n    view.slider.slider.style.width = '120px';\r\n    view.handles.fromHandle.style.width = '20px';\r\n    view.handles.toHandle.style.width = '20px';\r\n\r\n    presenter.initialize();\r\n    view.prepareSliderForUse();\r\n    view.bindEventListeners();\r\n  });\r\n\r\n  it('Presenter can be create', () => {\r\n    expect(presenter).toBeTruthy();\r\n  });\r\n\r\n  it('needApplyValueFromScale() choose from value', () => {\r\n    view.basicSettings.double = true;\r\n    view.valuesScale[20].dispatchEvent(new Event('click'));\r\n    expect(model.values.from).toEqual('20');\r\n  });\r\n\r\n  it('needApplyValueFromScale() choose to value', () => {\r\n    view.basicSettings.double = true;\r\n    view.valuesScale[80].dispatchEvent(new Event('click'));\r\n    expect(model.values.to).toEqual('80');\r\n  });\r\n\r\n  it('needDataForScale() fill value scale with correct values', () => {\r\n    view.dataRequestToModel.needDataForScale = { name: '', value: 'true' };\r\n    expect(view.valuesScale.minValue.innerText).toEqual('0');\r\n    expect(view.valuesScale[20].innerText).toEqual('20');\r\n    expect(view.valuesScale[40].innerText).toEqual('40');\r\n    expect(view.valuesScale[60].innerText).toEqual('60');\r\n    expect(view.valuesScale[80].innerText).toEqual('80');\r\n    expect(view.valuesScale.maxValue.innerText).toEqual('100');\r\n  });\r\n\r\n  it('needDataForStartPosition() set correct positions', () => {\r\n    view.dataRequestToModel.needDataForStartPosition = { name: '', value: 'true' };\r\n    expect(view.movement.positions.from).toEqual(30);\r\n    expect(view.movement.positions.to).toEqual(70);\r\n  });\r\n\r\n  it('needStepWidth() set correct stepWidth', () => {\r\n    view.basicSettings.step = 10;\r\n    view.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n    expect(view.movement.stepWidth).toEqual('10');\r\n  });\r\n\r\n  it('needApplyNewValue() apply new value for from correctly', () => {\r\n    view.dataRequestToModel.needApplyNewValue = { name: 'from', value: '40' };\r\n    expect(view.movement.positions.from).toEqual(60);\r\n    expect(model.values.from).toEqual('60');\r\n  });\r\n\r\n  it('needApplyNewValue() apply new value for to correctly', () => {\r\n    view.dataRequestToModel.needApplyNewValue = { name: 'to', value: '60' };\r\n    expect(view.movement.positions.to).toEqual(40);\r\n    expect(model.values.to).toEqual('40');\r\n  });\r\n\r\n  it('needApplyValueFromScale() apply value from scale correctly', () => {\r\n    view.dataRequestToModel.needApplyValueFromScale = { name: '', value: '20' };\r\n    expect(model.values.from).toEqual('20');\r\n    view.dataRequestToModel.needApplyValueFromScale = { name: '', value: '40' };\r\n    expect(model.values.from).toEqual('40');\r\n    view.dataRequestToModel.needApplyValueFromScale = { name: '', value: '80' };\r\n    expect(model.values.to).toEqual('80');\r\n    view.dataRequestToModel.needApplyValueFromScale = { name: '', value: '60' };\r\n    expect(model.values.to).toEqual('60');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/Model/Model.ts")),u=(C.s[2]++,n("./src/plugin/Presenter/Presenter.ts")),c=(C.s[3]++,n("./src/plugin/View/View.ts"));C.s[4]++,describe("Presenter",(()=>{let A,e,n;C.f[0]++;const t=(C.s[5]++,{sideMenu:!0,double:!0,handlesValues:!0,step:10,valueScale:!0,vertical:!0,integer:!0}),l=(C.s[6]++,document.createElement("div")),s=(C.s[7]++,{min:"0",max:"100",from:"30",to:"70"});C.s[8]++,beforeEach((()=>{var i;C.f[1]++,C.s[9]++,n=new a.Model(s),C.s[10]++,e=new c.View(t,l),C.s[11]++,A=new u.Presenter(e,n),C.s[12]++,C.b[1][0]++,null===(i=document.querySelector("body"))||(C.b[1][1]++,void 0===i)?C.b[0][0]++:(C.b[0][1]++,i.append(e.slider.slider,e.handles.fromHandle,e.handles.toHandle)),C.s[13]++,e.slider.slider.style.width="120px",C.s[14]++,e.handles.fromHandle.style.width="20px",C.s[15]++,e.handles.toHandle.style.width="20px",C.s[16]++,A.initialize(),C.s[17]++,e.prepareSliderForUse(),C.s[18]++,e.bindEventListeners()})),C.s[19]++,it("Presenter can be create",(()=>{C.f[2]++,C.s[20]++,expect(A).toBeTruthy()})),C.s[21]++,it("needApplyValueFromScale() choose from value",(()=>{C.f[3]++,C.s[22]++,e.basicSettings.double=!0,C.s[23]++,e.valuesScale[20].dispatchEvent(new Event("click")),C.s[24]++,expect(n.values.from).toEqual("20")})),C.s[25]++,it("needApplyValueFromScale() choose to value",(()=>{C.f[4]++,C.s[26]++,e.basicSettings.double=!0,C.s[27]++,e.valuesScale[80].dispatchEvent(new Event("click")),C.s[28]++,expect(n.values.to).toEqual("80")})),C.s[29]++,it("needDataForScale() fill value scale with correct values",(()=>{C.f[5]++,C.s[30]++,e.dataRequestToModel.needDataForScale={name:"",value:"true"},C.s[31]++,expect(e.valuesScale.minValue.innerText).toEqual("0"),C.s[32]++,expect(e.valuesScale[20].innerText).toEqual("20"),C.s[33]++,expect(e.valuesScale[40].innerText).toEqual("40"),C.s[34]++,expect(e.valuesScale[60].innerText).toEqual("60"),C.s[35]++,expect(e.valuesScale[80].innerText).toEqual("80"),C.s[36]++,expect(e.valuesScale.maxValue.innerText).toEqual("100")})),C.s[37]++,it("needDataForStartPosition() set correct positions",(()=>{C.f[6]++,C.s[38]++,e.dataRequestToModel.needDataForStartPosition={name:"",value:"true"},C.s[39]++,expect(e.movement.positions.from).toEqual(30),C.s[40]++,expect(e.movement.positions.to).toEqual(70)})),C.s[41]++,it("needStepWidth() set correct stepWidth",(()=>{C.f[7]++,C.s[42]++,e.basicSettings.step=10,C.s[43]++,e.dataRequestToModel.needStepWidth={name:"",value:"true"},C.s[44]++,expect(e.movement.stepWidth).toEqual("10")})),C.s[45]++,it("needApplyNewValue() apply new value for from correctly",(()=>{C.f[8]++,C.s[46]++,e.dataRequestToModel.needApplyNewValue={name:"from",value:"40"},C.s[47]++,expect(e.movement.positions.from).toEqual(60),C.s[48]++,expect(n.values.from).toEqual("60")})),C.s[49]++,it("needApplyNewValue() apply new value for to correctly",(()=>{C.f[9]++,C.s[50]++,e.dataRequestToModel.needApplyNewValue={name:"to",value:"60"},C.s[51]++,expect(e.movement.positions.to).toEqual(40),C.s[52]++,expect(n.values.to).toEqual("40")})),C.s[53]++,it("needApplyValueFromScale() apply value from scale correctly",(()=>{C.f[10]++,C.s[54]++,e.dataRequestToModel.needApplyValueFromScale={name:"",value:"20"},C.s[55]++,expect(n.values.from).toEqual("20"),C.s[56]++,e.dataRequestToModel.needApplyValueFromScale={name:"",value:"40"},C.s[57]++,expect(n.values.from).toEqual("40"),C.s[58]++,e.dataRequestToModel.needApplyValueFromScale={name:"",value:"80"},C.s[59]++,expect(n.values.to).toEqual("80"),C.s[60]++,e.dataRequestToModel.needApplyValueFromScale={name:"",value:"60"},C.s[61]++,expect(n.values.to).toEqual("60")}))}))},"./src/plugin/View/Handles/Handles.ts":(A,e)=>{"use strict";var n,t,l,s,i,r,o=(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\Handles.ts",t="4127fec052b567a8e05b009cd2846f386342fc7f",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\Handles.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:0},end:{line:3,column:25}},2:{start:{line:6,column:8},end:{line:6,column:36}},3:{start:{line:7,column:8},end:{line:28,column:10}},4:{start:{line:29,column:8},end:{line:29,column:83}},5:{start:{line:30,column:8},end:{line:30,column:81}},6:{start:{line:31,column:8},end:{line:31,column:82}},7:{start:{line:32,column:8},end:{line:32,column:80}},8:{start:{line:33,column:8},end:{line:33,column:47}},9:{start:{line:34,column:8},end:{line:34,column:43}},10:{start:{line:35,column:8},end:{line:35,column:36}},11:{start:{line:38,column:8},end:{line:38,column:47}},12:{start:{line:39,column:8},end:{line:39,column:43}},13:{start:{line:45,column:58},end:{line:45,column:66}},14:{start:{line:46,column:24},end:{line:46,column:54}},15:{start:{line:47,column:8},end:{line:49,column:11}},16:{start:{line:48,column:12},end:{line:48,column:44}},17:{start:{line:50,column:35},end:{line:50,column:48}},18:{start:{line:51,column:8},end:{line:52,column:46}},19:{start:{line:52,column:12},end:{line:52,column:46}},20:{start:{line:53,column:8},end:{line:53,column:23}},21:{start:{line:56,column:43},end:{line:56,column:51}},22:{start:{line:57,column:31},end:{line:57,column:85}},23:{start:{line:58,column:8},end:{line:65,column:9}},24:{start:{line:59,column:12},end:{line:59,column:91}},25:{start:{line:60,column:12},end:{line:60,column:72}},26:{start:{line:63,column:12},end:{line:63,column:91}},27:{start:{line:64,column:12},end:{line:64,column:72}},28:{start:{line:68,column:28},end:{line:68,column:32}},29:{start:{line:69,column:23},end:{line:69,column:51}},30:{start:{line:70,column:30},end:{line:70,column:68}},31:{start:{line:71,column:43},end:{line:71,column:92}},32:{start:{line:72,column:32},end:{line:73,column:93}},33:{start:{line:74,column:34},end:{line:75,column:71}},34:{start:{line:76,column:21},end:{line:76,column:25}},35:{start:{line:77,column:8},end:{line:85,column:9}},36:{start:{line:78,column:12},end:{line:78,column:52}},37:{start:{line:79,column:12},end:{line:79,column:27}},38:{start:{line:82,column:12},end:{line:82,column:102}},39:{start:{line:83,column:12},end:{line:84,column:44}},40:{start:{line:84,column:16},end:{line:84,column:44}},41:{start:{line:86,column:8},end:{line:86,column:22}},42:{start:{line:89,column:27},end:{line:89,column:58}},43:{start:{line:90,column:23},end:{line:90,column:39}},44:{start:{line:92,column:12},end:{line:93,column:82}},45:{start:{line:95,column:28},end:{line:95,column:50}},46:{start:{line:96,column:8},end:{line:96,column:47}},47:{start:{line:97,column:8},end:{line:102,column:10}},48:{start:{line:105,column:8},end:{line:106,column:110}},49:{start:{line:109,column:8},end:{line:110,column:110}},50:{start:{line:113,column:8},end:{line:113,column:79}},51:{start:{line:116,column:8},end:{line:116,column:70}},52:{start:{line:120,column:12},end:{line:120,column:78}},53:{start:{line:121,column:12},end:{line:121,column:76}},54:{start:{line:123,column:8},end:{line:132,column:9}},55:{start:{line:125,column:16},end:{line:125,column:66}},56:{start:{line:126,column:16},end:{line:126,column:22}},57:{start:{line:128,column:16},end:{line:128,column:66}},58:{start:{line:129,column:16},end:{line:129,column:22}},59:{start:{line:131,column:16},end:{line:131,column:22}},60:{start:{line:135,column:43},end:{line:135,column:51}},61:{start:{line:136,column:28},end:{line:136,column:67}},62:{start:{line:137,column:8},end:{line:137,column:54}},63:{start:{line:138,column:8},end:{line:138,column:35}},64:{start:{line:139,column:36},end:{line:139,column:122}},65:{start:{line:140,column:8},end:{line:144,column:9}},66:{start:{line:141,column:40},end:{line:141,column:117}},67:{start:{line:142,column:12},end:{line:142,column:68}},68:{start:{line:143,column:12},end:{line:143,column:57}},69:{start:{line:147,column:29},end:{line:147,column:37}},70:{start:{line:148,column:8},end:{line:154,column:9}},71:{start:{line:149,column:12},end:{line:149,column:49}},72:{start:{line:151,column:13},end:{line:154,column:9}},73:{start:{line:152,column:12},end:{line:152,column:57}},74:{start:{line:153,column:12},end:{line:153,column:50}},75:{start:{line:157,column:8},end:{line:164,column:9}},76:{start:{line:158,column:12},end:{line:158,column:48}},77:{start:{line:159,column:12},end:{line:159,column:50}},78:{start:{line:162,column:12},end:{line:162,column:56}},79:{start:{line:163,column:12},end:{line:163,column:58}},80:{start:{line:167,column:56},end:{line:167,column:64}},81:{start:{line:168,column:31},end:{line:168,column:88}},82:{start:{line:169,column:29},end:{line:169,column:84}},83:{start:{line:170,column:37},end:{line:170,column:79}},84:{start:{line:171,column:8},end:{line:172,column:35}},85:{start:{line:172,column:12},end:{line:172,column:35}},86:{start:{line:173,column:8},end:{line:173,column:29}},87:{start:{line:176,column:45},end:{line:176,column:53}},88:{start:{line:177,column:8},end:{line:184,column:9}},89:{start:{line:178,column:12},end:{line:178,column:54}},90:{start:{line:179,column:12},end:{line:179,column:35}},91:{start:{line:182,column:12},end:{line:182,column:52}},92:{start:{line:183,column:12},end:{line:183,column:33}},93:{start:{line:187,column:0},end:{line:187,column:26}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:18},end:{line:36,column:5}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:27},end:{line:40,column:5}},line:37},2:{name:"(anonymous_2)",decl:{start:{line:41,column:4},end:{line:41,column:5}},loc:{start:{line:41,column:35},end:{line:54,column:5}},line:41},3:{name:"(anonymous_3)",decl:{start:{line:47,column:27},end:{line:47,column:28}},loc:{start:{line:47,column:41},end:{line:49,column:9}},line:47},4:{name:"(anonymous_4)",decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:38},end:{line:66,column:5}},line:55},5:{name:"(anonymous_5)",decl:{start:{line:67,column:4},end:{line:67,column:5}},loc:{start:{line:67,column:35},end:{line:87,column:5}},line:67},6:{name:"(anonymous_6)",decl:{start:{line:88,column:4},end:{line:88,column:5}},loc:{start:{line:88,column:48},end:{line:103,column:5}},line:88},7:{name:"calculateNewPosition",decl:{start:{line:91,column:17},end:{line:91,column:37}},loc:{start:{line:91,column:40},end:{line:94,column:9}},line:91},8:{name:"(anonymous_8)",decl:{start:{line:104,column:4},end:{line:104,column:5}},loc:{start:{line:104,column:42},end:{line:107,column:5}},line:104},9:{name:"(anonymous_9)",decl:{start:{line:108,column:4},end:{line:108,column:5}},loc:{start:{line:108,column:46},end:{line:111,column:5}},line:108},10:{name:"(anonymous_10)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:32},end:{line:114,column:5}},line:112},11:{name:"(anonymous_11)",decl:{start:{line:115,column:4},end:{line:115,column:5}},loc:{start:{line:115,column:32},end:{line:117,column:5}},line:115},12:{name:"(anonymous_12)",decl:{start:{line:118,column:4},end:{line:118,column:5}},loc:{start:{line:118,column:28},end:{line:133,column:5}},line:118},13:{name:"changeVerticalClass",decl:{start:{line:119,column:17},end:{line:119,column:36}},loc:{start:{line:119,column:47},end:{line:122,column:9}},line:119},14:{name:"(anonymous_14)",decl:{start:{line:134,column:4},end:{line:134,column:5}},loc:{start:{line:134,column:37},end:{line:145,column:5}},line:134},15:{name:"(anonymous_15)",decl:{start:{line:146,column:4},end:{line:146,column:5}},loc:{start:{line:146,column:36},end:{line:155,column:5}},line:146},16:{name:"(anonymous_16)",decl:{start:{line:156,column:4},end:{line:156,column:5}},loc:{start:{line:156,column:37},end:{line:165,column:5}},line:156},17:{name:"(anonymous_17)",decl:{start:{line:166,column:4},end:{line:166,column:5}},loc:{start:{line:166,column:34},end:{line:174,column:5}},line:166},18:{name:"(anonymous_18)",decl:{start:{line:175,column:4},end:{line:175,column:5}},loc:{start:{line:175,column:32},end:{line:185,column:5}},line:175}},branchMap:{0:{loc:{start:{line:42,column:16},end:{line:45,column:9}},type:"default-arg",locations:[{start:{line:42,column:29},end:{line:45,column:9}}],line:42},1:{loc:{start:{line:45,column:11},end:{line:45,column:30}},type:"default-arg",locations:[{start:{line:45,column:18},end:{line:45,column:30}}],line:45},2:{loc:{start:{line:45,column:32},end:{line:45,column:52}},type:"default-arg",locations:[{start:{line:45,column:40},end:{line:45,column:52}}],line:45},3:{loc:{start:{line:50,column:35},end:{line:50,column:48}},type:"binary-expr",locations:[{start:{line:50,column:35},end:{line:50,column:39}},{start:{line:50,column:43},end:{line:50,column:48}}],line:50},4:{loc:{start:{line:51,column:8},end:{line:52,column:46}},type:"if",locations:[{start:{line:51,column:8},end:{line:52,column:46}},{start:{line:51,column:8},end:{line:52,column:46}}],line:51},5:{loc:{start:{line:58,column:8},end:{line:65,column:9}},type:"if",locations:[{start:{line:58,column:8},end:{line:65,column:9}},{start:{line:58,column:8},end:{line:65,column:9}}],line:58},6:{loc:{start:{line:70,column:30},end:{line:70,column:68}},type:"binary-expr",locations:[{start:{line:70,column:30},end:{line:70,column:44}},{start:{line:70,column:48},end:{line:70,column:68}}],line:70},7:{loc:{start:{line:72,column:32},end:{line:73,column:93}},type:"binary-expr",locations:[{start:{line:72,column:32},end:{line:72,column:62}},{start:{line:73,column:15},end:{line:73,column:93}}],line:72},8:{loc:{start:{line:74,column:34},end:{line:75,column:71}},type:"binary-expr",locations:[{start:{line:74,column:34},end:{line:74,column:49}},{start:{line:74,column:53},end:{line:74,column:71}},{start:{line:75,column:15},end:{line:75,column:71}}],line:74},9:{loc:{start:{line:77,column:8},end:{line:85,column:9}},type:"if",locations:[{start:{line:77,column:8},end:{line:85,column:9}},{start:{line:77,column:8},end:{line:85,column:9}}],line:77},10:{loc:{start:{line:82,column:37},end:{line:82,column:101}},type:"cond-expr",locations:[{start:{line:82,column:53},end:{line:82,column:88}},{start:{line:82,column:91},end:{line:82,column:101}}],line:82},11:{loc:{start:{line:83,column:12},end:{line:84,column:44}},type:"if",locations:[{start:{line:83,column:12},end:{line:84,column:44}},{start:{line:83,column:12},end:{line:84,column:44}}],line:83},12:{loc:{start:{line:105,column:15},end:{line:106,column:109}},type:"binary-expr",locations:[{start:{line:105,column:16},end:{line:105,column:94}},{start:{line:106,column:16},end:{line:106,column:92}},{start:{line:106,column:98},end:{line:106,column:108}}],line:105},13:{loc:{start:{line:109,column:15},end:{line:110,column:109}},type:"binary-expr",locations:[{start:{line:109,column:16},end:{line:109,column:93}},{start:{line:110,column:16},end:{line:110,column:91}},{start:{line:110,column:97},end:{line:110,column:108}}],line:109},14:{loc:{start:{line:113,column:15},end:{line:113,column:78}},type:"binary-expr",locations:[{start:{line:113,column:16},end:{line:113,column:25}},{start:{line:113,column:31},end:{line:113,column:77}}],line:113},15:{loc:{start:{line:116,column:15},end:{line:116,column:69}},type:"binary-expr",locations:[{start:{line:116,column:16},end:{line:116,column:24}},{start:{line:116,column:30},end:{line:116,column:68}}],line:116},16:{loc:{start:{line:123,column:8},end:{line:132,column:9}},type:"switch",locations:[{start:{line:124,column:12},end:{line:126,column:22}},{start:{line:127,column:12},end:{line:129,column:22}},{start:{line:130,column:12},end:{line:131,column:22}}],line:123},17:{loc:{start:{line:140,column:8},end:{line:144,column:9}},type:"if",locations:[{start:{line:140,column:8},end:{line:144,column:9}},{start:{line:140,column:8},end:{line:144,column:9}}],line:140},18:{loc:{start:{line:148,column:8},end:{line:154,column:9}},type:"if",locations:[{start:{line:148,column:8},end:{line:154,column:9}},{start:{line:148,column:8},end:{line:154,column:9}}],line:148},19:{loc:{start:{line:151,column:13},end:{line:154,column:9}},type:"if",locations:[{start:{line:151,column:13},end:{line:154,column:9}},{start:{line:151,column:13},end:{line:154,column:9}}],line:151},20:{loc:{start:{line:157,column:8},end:{line:164,column:9}},type:"if",locations:[{start:{line:157,column:8},end:{line:164,column:9}},{start:{line:157,column:8},end:{line:164,column:9}}],line:157},21:{loc:{start:{line:170,column:37},end:{line:170,column:79}},type:"binary-expr",locations:[{start:{line:170,column:37},end:{line:170,column:66}},{start:{line:170,column:70},end:{line:170,column:79}}],line:170},22:{loc:{start:{line:171,column:8},end:{line:172,column:35}},type:"if",locations:[{start:{line:171,column:8},end:{line:172,column:35}},{start:{line:171,column:8},end:{line:172,column:35}}],line:171},23:{loc:{start:{line:177,column:8},end:{line:184,column:9}},type:"if",locations:[{start:{line:177,column:8},end:{line:184,column:9}},{start:{line:177,column:8},end:{line:184,column:9}}],line:177}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0},b:{0:[0],1:[0],2:[0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0,0],13:[0,0,0],14:[0,0],15:[0,0],16:[0,0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\Handles.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\Handles.ts"],names:[],mappings:"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",sourcesContent:["import { RefreshIntervalPositions } from '../SelectedInterval/types';\r\nimport {\r\n  DataForAdjustPosition,\r\n  HandlesElementsInfo,\r\n  StaticElementsDescription,\r\n  HandleHideData,\r\n  RefreshHandlesData,\r\n  HandlesOverlaps,\r\n} from './types';\r\nimport { RefreshData } from '../types';\r\nimport { HandlesPosition } from '../Movement/types';\r\n\r\nexport class Handles {\r\n  readonly fromHandle: HTMLSpanElement;\r\n\r\n  readonly toHandle: HTMLSpanElement;\r\n\r\n  readonly fromValue: HTMLSpanElement;\r\n\r\n  readonly toValue: HTMLSpanElement;\r\n\r\n  public isInputChanges = false;\r\n\r\n  readonly staticElementsDescription: StaticElementsDescription = [\r\n    {\r\n      cssClasses: ['goby-slider__handle', 'goby-slider__handle_type_from'],\r\n      name: 'style',\r\n      value: 'display: inline-block',\r\n    },\r\n    {\r\n      cssClasses: ['goby-slider__handle', 'goby-slider__handle_type_to'],\r\n      name: 'style',\r\n      value: 'display: inline-block',\r\n    },\r\n    {\r\n      cssClasses: ['goby-slider__handle-value', 'goby-slider__handle-value_type_from'],\r\n      name: 'style',\r\n      value: 'display: inline-block',\r\n    },\r\n    {\r\n      cssClasses: ['goby-slider__handle-value', 'goby-slider__handle-value_type_to'],\r\n      name: 'style',\r\n      value: 'display: inline-block',\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n    this.fromHandle = Handles.createElement(this.staticElementsDescription[0]);\r\n    this.toHandle = Handles.createElement(this.staticElementsDescription[1]);\r\n    this.fromValue = Handles.createElement(this.staticElementsDescription[2]);\r\n    this.toValue = Handles.createElement(this.staticElementsDescription[3]);\r\n    this.fromHandle.append(this.fromValue);\r\n    this.toHandle.append(this.toValue);\r\n    this.prepareClassElements();\r\n  }\r\n\r\n  private prepareClassElements(): void {\r\n    this.fromHandle.append(this.fromValue);\r\n    this.toHandle.append(this.toValue);\r\n  }\r\n\r\n  static createElement(settings: HandlesElementsInfo): HTMLSpanElement {\r\n    const {\r\n      cssClasses = [\r\n        'for-change',\r\n        'for-change',\r\n      ],\r\n      name = 'for-change',\r\n      value = 'for-change',\r\n    } = settings;\r\n    const element: HTMLSpanElement = document.createElement('span');\r\n\r\n    cssClasses.forEach((cssClass: string) => {\r\n      element.classList.add(cssClass);\r\n    });\r\n\r\n    const isAssignValuesNeed = name && value;\r\n    if (isAssignValuesNeed) element.setAttribute(name, value);\r\n\r\n    return element;\r\n  }\r\n\r\n  private correctsHandlesOverlaps(settings: HandlesOverlaps) {\r\n    const { positions, sliderWidth } = settings;\r\n    const isToNotInExtra: boolean = positions.to < sliderWidth - this.toHandle.offsetWidth;\r\n\r\n    if (isToNotInExtra) {\r\n      this.toHandle.style.left = `${positions.from + this.fromHandle.offsetWidth}px`;\r\n      positions.to = positions.from + this.fromHandle.offsetWidth;\r\n    } else {\r\n      this.fromHandle.style.left = `${positions.to - this.fromHandle.offsetWidth}px`;\r\n      positions.from = positions.to - this.fromHandle.offsetWidth;\r\n    }\r\n  }\r\n\r\n  public refreshValues(data: RefreshData, positions: HandlesOverlaps): boolean {\r\n    const handlesData: RefreshHandlesData = data as RefreshHandlesData;\r\n    const target: 'fromValue' | 'toValue' = `${handlesData.target}Value`;\r\n    const isRoundUpNeed: boolean = data.isToFixed && !this.isInputChanges;\r\n    const differenceBetweenPositions: number = positions.positions.to - positions.positions.from;\r\n    const isExtraPosition = positions.positions.from === 0\r\n      || positions.positions.to === positions.sliderWidth - this.fromHandle.offsetWidth;\r\n    const isHandlesOverlaps: boolean = isExtraPosition && positions.isDouble\r\n      && differenceBetweenPositions < this.fromHandle.offsetWidth;\r\n\r\n    let result: boolean = true;\r\n    if (isHandlesOverlaps) {\r\n      this.correctsHandlesOverlaps(positions);\r\n      result = false;\r\n    } else {\r\n      this[target].innerText = isRoundUpNeed ? `${Math.round(Number(data.value))}` : data.value;\r\n      if (this.isInputChanges) this.isInputChanges = false;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public adjustPositions(dataToRefresh: DataForAdjustPosition, sliderWidth: number): RefreshIntervalPositions {\r\n    const handleLink: 'fromHandle' | 'toHandle' = `${dataToRefresh.target}Handle`;\r\n    const target = this[handleLink];\r\n\r\n    function calculateNewPosition(): string {\r\n      return String(((sliderWidth - target.offsetWidth) / dataToRefresh.totalValues)\r\n        * (Number(dataToRefresh.value) - Number(dataToRefresh.minValue)));\r\n    }\r\n\r\n    const newPosition: string = calculateNewPosition();\r\n    target.style.left = `${newPosition}px`;\r\n\r\n    return {\r\n      target: dataToRefresh.target,\r\n      position: newPosition,\r\n      sliderWidth: sliderWidth - target.offsetWidth,\r\n      handleWidth: target.offsetWidth,\r\n    };\r\n  }\r\n\r\n  private checkIsNeedToMakeVertical(isVertical: boolean): boolean {\r\n    return (!this.fromValue.classList.contains('goby-slider__handle-value_state_vertical'))\r\n      && (!this.toValue.classList.contains('goby-slider__handle-value_state_vertical')) && (isVertical);\r\n  }\r\n\r\n  private checkIsNeedToMakeHorizontally(isVertical: boolean): boolean {\r\n    return (this.fromValue.classList.contains('goby-slider__handle-value_state_vertical'))\r\n      && (this.toValue.classList.contains('goby-slider__handle-value_state_vertical')) && (!isVertical);\r\n  }\r\n\r\n  private checkIsToNeedHide(isDouble: boolean): boolean {\r\n    return (!isDouble) && (this.toHandle.style.display === 'inline-block');\r\n  }\r\n\r\n  private checkIsToNeedShow(isDouble: boolean): boolean {\r\n    return (isDouble) && (this.toHandle.style.display === 'none');\r\n  }\r\n\r\n  public changePlane(isVertical: boolean): void {\r\n    function changeVerticalClass(from: HTMLSpanElement, to: HTMLSpanElement) {\r\n      from.classList.toggle('goby-slider__handle-value_state_vertical');\r\n      to.classList.toggle('goby-slider__handle-value_state_vertical');\r\n    }\r\n\r\n    switch (true) {\r\n      case this.checkIsNeedToMakeVertical(isVertical):\r\n        changeVerticalClass(this.fromValue, this.toValue);\r\n        break;\r\n      case this.checkIsNeedToMakeHorizontally(isVertical):\r\n        changeVerticalClass(this.fromValue, this.toValue);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private controlHandlesPosition(settings: HandleHideData) {\r\n    const { sliderWidth, positions } = settings;\r\n\r\n    const newPosition: number = sliderWidth - this.toHandle.offsetWidth;\r\n    this.toHandle.style.left = `${newPosition}px`;\r\n    positions.to = newPosition;\r\n    const isWrongFromPosition = positions.from > sliderWidth - this.toHandle.offsetWidth - this.fromHandle.offsetWidth;\r\n\r\n    if (isWrongFromPosition) {\r\n      const extremeFromPosition = String(sliderWidth - this.toHandle.offsetWidth - this.fromHandle.offsetWidth);\r\n      this.fromHandle.style.left = `${extremeFromPosition}px`;\r\n      positions.from = Number(extremeFromPosition);\r\n    }\r\n  }\r\n\r\n  public controlHandlesDisplay(settings: HandleHideData): void {\r\n    const { isDouble } = settings;\r\n\r\n    if (this.checkIsToNeedHide(isDouble)) {\r\n      this.toHandle.style.display = 'none';\r\n    } else if (this.checkIsToNeedShow(isDouble)) {\r\n      this.toHandle.style.display = 'inline-block';\r\n      this.controlHandlesPosition(settings);\r\n    }\r\n  }\r\n\r\n  public hideHandleValues(isHandleValues: boolean): void {\r\n    if (!isHandleValues) {\r\n      this.toValue.style.display = 'none';\r\n      this.fromValue.style.display = 'none';\r\n    } else {\r\n      this.toValue.style.display = 'inline-block';\r\n      this.fromValue.style.display = 'inline-block';\r\n    }\r\n  }\r\n\r\n  public selectsHandleToMove(settings: {\r\n    targetPosition: number,\r\n    positions: HandlesPosition,\r\n    isDouble: boolean,\r\n  }): HTMLSpanElement {\r\n    const { targetPosition, positions, isDouble } = settings;\r\n    const fromDifference = Math.abs(Number(positions.from) - Number(targetPosition));\r\n    const toDifference = Math.abs(Number(positions.to) - Number(targetPosition));\r\n    const isFromDifferenceLess = fromDifference < toDifference || !isDouble;\r\n\r\n    if (isFromDifferenceLess) return this.fromHandle;\r\n    return this.toHandle;\r\n  }\r\n\r\n  public acceptNewPosition(settings: {\r\n    target: HTMLSpanElement,\r\n    value: number,\r\n    positions: HandlesPosition,\r\n  }): void {\r\n    const { target, value, positions } = settings;\r\n\r\n    if (target === this.fromHandle) {\r\n      this.fromHandle.style.left = `${value}px`;\r\n      positions.from = value;\r\n    } else {\r\n      this.toHandle.style.left = `${value}px`;\r\n      positions.to = value;\r\n    }\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i));o.s[0]++,Object.defineProperty(e,"__esModule",{value:!0}),o.s[1]++,e.Handles=void 0;class C{constructor(){o.f[0]++,o.s[2]++,this.isInputChanges=!1,o.s[3]++,this.staticElementsDescription=[{cssClasses:["goby-slider__handle","goby-slider__handle_type_from"],name:"style",value:"display: inline-block"},{cssClasses:["goby-slider__handle","goby-slider__handle_type_to"],name:"style",value:"display: inline-block"},{cssClasses:["goby-slider__handle-value","goby-slider__handle-value_type_from"],name:"style",value:"display: inline-block"},{cssClasses:["goby-slider__handle-value","goby-slider__handle-value_type_to"],name:"style",value:"display: inline-block"}],o.s[4]++,this.fromHandle=C.createElement(this.staticElementsDescription[0]),o.s[5]++,this.toHandle=C.createElement(this.staticElementsDescription[1]),o.s[6]++,this.fromValue=C.createElement(this.staticElementsDescription[2]),o.s[7]++,this.toValue=C.createElement(this.staticElementsDescription[3]),o.s[8]++,this.fromHandle.append(this.fromValue),o.s[9]++,this.toHandle.append(this.toValue),o.s[10]++,this.prepareClassElements()}prepareClassElements(){o.f[1]++,o.s[11]++,this.fromHandle.append(this.fromValue),o.s[12]++,this.toHandle.append(this.toValue)}static createElement(A){o.f[2]++;const{cssClasses:e=(o.b[0][0]++,["for-change","for-change"]),name:n=(o.b[1][0]++,"for-change"),value:t=(o.b[2][0]++,"for-change")}=(o.s[13]++,A),l=(o.s[14]++,document.createElement("span"));o.s[15]++,e.forEach((A=>{o.f[3]++,o.s[16]++,l.classList.add(A)}));const s=(o.s[17]++,o.b[3][0]++,n&&(o.b[3][1]++,t));return o.s[18]++,s?(o.b[4][0]++,o.s[19]++,l.setAttribute(n,t)):o.b[4][1]++,o.s[20]++,l}correctsHandlesOverlaps(A){o.f[4]++;const{positions:e,sliderWidth:n}=(o.s[21]++,A),t=(o.s[22]++,e.to<n-this.toHandle.offsetWidth);o.s[23]++,t?(o.b[5][0]++,o.s[24]++,this.toHandle.style.left=`${e.from+this.fromHandle.offsetWidth}px`,o.s[25]++,e.to=e.from+this.fromHandle.offsetWidth):(o.b[5][1]++,o.s[26]++,this.fromHandle.style.left=e.to-this.fromHandle.offsetWidth+"px",o.s[27]++,e.from=e.to-this.fromHandle.offsetWidth)}refreshValues(A,e){o.f[5]++;const n=(o.s[28]++,A),t=(o.s[29]++,`${n.target}Value`),l=(o.s[30]++,o.b[6][0]++,A.isToFixed&&(o.b[6][1]++,!this.isInputChanges)),s=(o.s[31]++,e.positions.to-e.positions.from),i=(o.s[32]++,o.b[7][0]++,0===e.positions.from||(o.b[7][1]++,e.positions.to===e.sliderWidth-this.fromHandle.offsetWidth)),r=(o.s[33]++,o.b[8][0]++,i&&(o.b[8][1]++,e.isDouble)&&(o.b[8][2]++,s<this.fromHandle.offsetWidth));let C=(o.s[34]++,!0);return o.s[35]++,r?(o.b[9][0]++,o.s[36]++,this.correctsHandlesOverlaps(e),o.s[37]++,C=!1):(o.b[9][1]++,o.s[38]++,this[t].innerText=l?(o.b[10][0]++,`${Math.round(Number(A.value))}`):(o.b[10][1]++,A.value),o.s[39]++,this.isInputChanges?(o.b[11][0]++,o.s[40]++,this.isInputChanges=!1):o.b[11][1]++),o.s[41]++,C}adjustPositions(A,e){o.f[6]++;const n=(o.s[42]++,`${A.target}Handle`),t=(o.s[43]++,this[n]);const l=(o.s[45]++,o.f[7]++,o.s[44]++,String((e-t.offsetWidth)/A.totalValues*(Number(A.value)-Number(A.minValue))));return o.s[46]++,t.style.left=`${l}px`,o.s[47]++,{target:A.target,position:l,sliderWidth:e-t.offsetWidth,handleWidth:t.offsetWidth}}checkIsNeedToMakeVertical(A){return o.f[8]++,o.s[48]++,o.b[12][0]++,!this.fromValue.classList.contains("goby-slider__handle-value_state_vertical")&&(o.b[12][1]++,!this.toValue.classList.contains("goby-slider__handle-value_state_vertical"))&&(o.b[12][2]++,A)}checkIsNeedToMakeHorizontally(A){return o.f[9]++,o.s[49]++,o.b[13][0]++,this.fromValue.classList.contains("goby-slider__handle-value_state_vertical")&&(o.b[13][1]++,this.toValue.classList.contains("goby-slider__handle-value_state_vertical"))&&(o.b[13][2]++,!A)}checkIsToNeedHide(A){return o.f[10]++,o.s[50]++,o.b[14][0]++,!A&&(o.b[14][1]++,"inline-block"===this.toHandle.style.display)}checkIsToNeedShow(A){return o.f[11]++,o.s[51]++,o.b[15][0]++,A&&(o.b[15][1]++,"none"===this.toHandle.style.display)}changePlane(A){function e(A,e){o.f[13]++,o.s[52]++,A.classList.toggle("goby-slider__handle-value_state_vertical"),o.s[53]++,e.classList.toggle("goby-slider__handle-value_state_vertical")}switch(o.f[12]++,o.s[54]++,!0){case this.checkIsNeedToMakeVertical(A):o.b[16][0]++,o.s[55]++,e(this.fromValue,this.toValue),o.s[56]++;break;case this.checkIsNeedToMakeHorizontally(A):o.b[16][1]++,o.s[57]++,e(this.fromValue,this.toValue),o.s[58]++;break;default:o.b[16][2]++,o.s[59]++}}controlHandlesPosition(A){o.f[14]++;const{sliderWidth:e,positions:n}=(o.s[60]++,A),t=(o.s[61]++,e-this.toHandle.offsetWidth);o.s[62]++,this.toHandle.style.left=`${t}px`,o.s[63]++,n.to=t;const l=(o.s[64]++,n.from>e-this.toHandle.offsetWidth-this.fromHandle.offsetWidth);if(o.s[65]++,l){o.b[17][0]++;const A=(o.s[66]++,String(e-this.toHandle.offsetWidth-this.fromHandle.offsetWidth));o.s[67]++,this.fromHandle.style.left=`${A}px`,o.s[68]++,n.from=Number(A)}else o.b[17][1]++}controlHandlesDisplay(A){o.f[15]++;const{isDouble:e}=(o.s[69]++,A);o.s[70]++,this.checkIsToNeedHide(e)?(o.b[18][0]++,o.s[71]++,this.toHandle.style.display="none"):(o.b[18][1]++,o.s[72]++,this.checkIsToNeedShow(e)?(o.b[19][0]++,o.s[73]++,this.toHandle.style.display="inline-block",o.s[74]++,this.controlHandlesPosition(A)):o.b[19][1]++)}hideHandleValues(A){o.f[16]++,o.s[75]++,A?(o.b[20][1]++,o.s[78]++,this.toValue.style.display="inline-block",o.s[79]++,this.fromValue.style.display="inline-block"):(o.b[20][0]++,o.s[76]++,this.toValue.style.display="none",o.s[77]++,this.fromValue.style.display="none")}selectsHandleToMove(A){o.f[17]++;const{targetPosition:e,positions:n,isDouble:t}=(o.s[80]++,A),l=(o.s[81]++,Math.abs(Number(n.from)-Number(e))),s=(o.s[82]++,Math.abs(Number(n.to)-Number(e))),i=(o.s[83]++,o.b[21][0]++,l<s||(o.b[21][1]++,!t));return o.s[84]++,i?(o.b[22][0]++,o.s[85]++,this.fromHandle):(o.b[22][1]++,o.s[86]++,this.toHandle)}acceptNewPosition(A){o.f[18]++;const{target:e,value:n,positions:t}=(o.s[87]++,A);o.s[88]++,e===this.fromHandle?(o.b[23][0]++,o.s[89]++,this.fromHandle.style.left=`${n}px`,o.s[90]++,t.from=n):(o.b[23][1]++,o.s[91]++,this.toHandle.style.left=`${n}px`,o.s[92]++,t.to=n)}}o.s[93]++,e.Handles=C},"./src/plugin/View/Handles/handles.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\handles.test.ts",l="e8349fa6705f1a3406c542e5f8bfc025f93ee83d",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\handles.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:18},end:{line:3,column:38}},2:{start:{line:4,column:0},end:{line:151,column:3}},3:{start:{line:6,column:4},end:{line:8,column:7}},4:{start:{line:7,column:8},end:{line:7,column:42}},5:{start:{line:9,column:4},end:{line:11,column:7}},6:{start:{line:10,column:8},end:{line:10,column:37}},7:{start:{line:12,column:4},end:{line:23,column:7}},8:{start:{line:13,column:8},end:{line:21,column:11}},9:{start:{line:22,column:8},end:{line:22,column:57}},10:{start:{line:24,column:4},end:{line:35,column:7}},11:{start:{line:25,column:8},end:{line:33,column:11}},12:{start:{line:34,column:8},end:{line:34,column:56}},13:{start:{line:36,column:4},end:{line:44,column:7}},14:{start:{line:37,column:23},end:{line:39,column:15}},15:{start:{line:40,column:8},end:{line:40,column:62}},16:{start:{line:41,column:8},end:{line:43,column:11}},17:{start:{line:45,column:4},end:{line:53,column:7}},18:{start:{line:46,column:23},end:{line:48,column:15}},19:{start:{line:49,column:8},end:{line:49,column:60}},20:{start:{line:50,column:8},end:{line:52,column:11}},21:{start:{line:54,column:4},end:{line:61,column:7}},22:{start:{line:55,column:8},end:{line:55,column:34}},23:{start:{line:56,column:8},end:{line:56,column:90}},24:{start:{line:57,column:8},end:{line:57,column:88}},25:{start:{line:58,column:8},end:{line:58,column:35}},26:{start:{line:59,column:8},end:{line:59,column:94}},27:{start:{line:60,column:8},end:{line:60,column:92}},28:{start:{line:62,column:4},end:{line:69,column:7}},29:{start:{line:63,column:8},end:{line:63,column:40}},30:{start:{line:64,column:8},end:{line:64,column:64}},31:{start:{line:65,column:8},end:{line:65,column:62}},32:{start:{line:66,column:8},end:{line:66,column:39}},33:{start:{line:67,column:8},end:{line:67,column:72}},34:{start:{line:68,column:8},end:{line:68,column:70}},35:{start:{line:70,column:4},end:{line:73,column:7}},36:{start:{line:71,column:8},end:{line:71,column:110}},37:{start:{line:72,column:8},end:{line:72,column:63}},38:{start:{line:74,column:4},end:{line:79,column:7}},39:{start:{line:75,column:8},end:{line:75,column:48}},40:{start:{line:76,column:8},end:{line:76,column:109}},41:{start:{line:77,column:8},end:{line:77,column:71}},42:{start:{line:78,column:8},end:{line:78,column:61}},43:{start:{line:80,column:4},end:{line:86,column:7}},44:{start:{line:81,column:8},end:{line:81,column:48}},45:{start:{line:82,column:8},end:{line:82,column:110}},46:{start:{line:83,column:8},end:{line:83,column:71}},47:{start:{line:84,column:8},end:{line:84,column:61}},48:{start:{line:85,column:8},end:{line:85,column:63}},49:{start:{line:87,column:4},end:{line:102,column:7}},50:{start:{line:88,column:33},end:{line:88,column:52}},51:{start:{line:89,column:8},end:{line:89,column:49}},52:{start:{line:90,column:8},end:{line:90,column:48}},53:{start:{line:91,column:23},end:{line:99,column:10}},54:{start:{line:100,column:8},end:{line:100,column:35}},55:{start:{line:101,column:8},end:{line:101,column:48}},56:{start:{line:103,column:4},end:{line:119,column:7}},57:{start:{line:104,column:33},end:{line:104,column:53}},58:{start:{line:105,column:8},end:{line:105,column:67}},59:{start:{line:106,column:8},end:{line:106,column:48}},60:{start:{line:107,column:8},end:{line:107,column:46}},61:{start:{line:108,column:23},end:{line:116,column:10}},62:{start:{line:117,column:8},end:{line:117,column:35}},63:{start:{line:118,column:8},end:{line:118,column:50}},64:{start:{line:120,column:4},end:{line:127,column:7}},65:{start:{line:121,column:23},end:{line:125,column:10}},66:{start:{line:126,column:8},end:{line:126,column:51}},67:{start:{line:128,column:4},end:{line:135,column:7}},68:{start:{line:129,column:23},end:{line:133,column:10}},69:{start:{line:134,column:8},end:{line:134,column:49}},70:{start:{line:136,column:4},end:{line:150,column:7}},71:{start:{line:137,column:33},end:{line:137,column:53}},72:{start:{line:138,column:8},end:{line:142,column:11}},73:{start:{line:143,column:8},end:{line:143,column:50}},74:{start:{line:144,column:8},end:{line:148,column:11}},75:{start:{line:149,column:8},end:{line:149,column:48}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:20},end:{line:4,column:21}},loc:{start:{line:4,column:26},end:{line:151,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:21},end:{line:8,column:5}},line:6},2:{name:"(anonymous_2)",decl:{start:{line:9,column:32},end:{line:9,column:33}},loc:{start:{line:9,column:38},end:{line:11,column:5}},line:9},3:{name:"(anonymous_3)",decl:{start:{line:12,column:49},end:{line:12,column:50}},loc:{start:{line:12,column:55},end:{line:23,column:5}},line:12},4:{name:"(anonymous_4)",decl:{start:{line:24,column:47},end:{line:24,column:48}},loc:{start:{line:24,column:53},end:{line:35,column:5}},line:24},5:{name:"(anonymous_5)",decl:{start:{line:36,column:99},end:{line:36,column:100}},loc:{start:{line:36,column:105},end:{line:44,column:5}},line:36},6:{name:"(anonymous_6)",decl:{start:{line:45,column:97},end:{line:45,column:98}},loc:{start:{line:45,column:103},end:{line:53,column:5}},line:45},7:{name:"(anonymous_7)",decl:{start:{line:54,column:49},end:{line:54,column:50}},loc:{start:{line:54,column:55},end:{line:61,column:5}},line:54},8:{name:"(anonymous_8)",decl:{start:{line:62,column:54},end:{line:62,column:55}},loc:{start:{line:62,column:60},end:{line:69,column:5}},line:62},9:{name:"(anonymous_9)",decl:{start:{line:70,column:41},end:{line:70,column:42}},loc:{start:{line:70,column:47},end:{line:73,column:5}},line:70},10:{name:"(anonymous_10)",decl:{start:{line:74,column:41},end:{line:74,column:42}},loc:{start:{line:74,column:47},end:{line:79,column:5}},line:74},11:{name:"(anonymous_11)",decl:{start:{line:80,column:65},end:{line:80,column:66}},loc:{start:{line:80,column:71},end:{line:86,column:5}},line:80},12:{name:"(anonymous_12)",decl:{start:{line:87,column:70},end:{line:87,column:71}},loc:{start:{line:87,column:76},end:{line:102,column:5}},line:87},13:{name:"(anonymous_13)",decl:{start:{line:103,column:68},end:{line:103,column:69}},loc:{start:{line:103,column:74},end:{line:119,column:5}},line:103},14:{name:"(anonymous_14)",decl:{start:{line:120,column:51},end:{line:120,column:52}},loc:{start:{line:120,column:57},end:{line:127,column:5}},line:120},15:{name:"(anonymous_15)",decl:{start:{line:128,column:49},end:{line:128,column:50}},loc:{start:{line:128,column:55},end:{line:135,column:5}},line:128},16:{name:"(anonymous_16)",decl:{start:{line:136,column:52},end:{line:136,column:53}},loc:{start:{line:136,column:58},end:{line:150,column:5}},line:136}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\handles.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\handles.test.ts"],names:[],mappings:"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",sourcesContent:["import { Handles } from './Handles';\r\nimport { RefreshIntervalPositions } from '../SelectedInterval/types';\r\nimport { HandlesPosition } from '../Movement/types';\r\n\r\ndescribe('Handles', () => {\r\n  let handles: Handles;\r\n\r\n  beforeEach(() => {\r\n    handles = new Handles();\r\n  });\r\n\r\n  it('Handles can be create', () => {\r\n    expect(handles).toBeTruthy();\r\n  });\r\n\r\n  it('refreshValues() refresh value for from', () => {\r\n    handles.refreshValues({\r\n      target: 'from',\r\n      value: '5',\r\n      isToFixed: false,\r\n    }, {\r\n      positions: { from: 0, to: 0 },\r\n      sliderWidth: 0,\r\n      isDouble: false,\r\n    });\r\n    expect(handles.fromValue.innerText).toEqual('5');\r\n  });\r\n\r\n  it('refreshValues() refresh value for to', () => {\r\n    handles.refreshValues({\r\n      target: 'to',\r\n      value: '5',\r\n      isToFixed: false,\r\n    }, {\r\n      positions: { from: 0, to: 0 },\r\n      sliderWidth: 0,\r\n      isDouble: false,\r\n    });\r\n    expect(handles.toHandle.innerText).toEqual('5');\r\n  });\r\n\r\n  it('adjustPositionRelativeValue() adjust from position correctly and return correct settings', () => {\r\n    const result: RefreshIntervalPositions = handles.adjustPositions({\r\n      target: 'from', minValue: '0', totalValues: 10, value: '5',\r\n    }, 100);\r\n    expect(handles.fromHandle.style.left).toEqual('50px');\r\n    expect(result).toEqual({\r\n      target: 'from', position: '50', sliderWidth: 100, handleWidth: 0,\r\n    });\r\n  });\r\n\r\n  it('adjustPositionRelativeValue() adjust to position correctly and return correct settings', () => {\r\n    const result: RefreshIntervalPositions = handles.adjustPositions({\r\n      target: 'to', minValue: '0', totalValues: 10, value: '5',\r\n    }, 100);\r\n    expect(handles.toHandle.style.left).toEqual('50px');\r\n    expect(result).toEqual({\r\n      target: 'to', position: '50', sliderWidth: 100, handleWidth: 0,\r\n    });\r\n  });\r\n\r\n  it('changePlane() change classes correctly', () => {\r\n    handles.changePlane(true);\r\n    expect(handles.fromValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(handles.toValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    handles.changePlane(false);\r\n    expect(handles.fromValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(handles.toValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n  });\r\n\r\n  it('hideHandleValues() manage display correctly', () => {\r\n    handles.hideHandleValues(false);\r\n    expect(handles.fromValue.style.display).toEqual('none');\r\n    expect(handles.toValue.style.display).toEqual('none');\r\n    handles.hideHandleValues(true);\r\n    expect(handles.fromValue.style.display).toEqual('inline-block');\r\n    expect(handles.toValue.style.display).toEqual('inline-block');\r\n  });\r\n\r\n  it('hideToHandel() if need to hide', () => {\r\n    handles.controlHandlesDisplay({ isDouble: false, positions: { from: 30, to: 70 }, sliderWidth: 100 });\r\n    expect(handles.toHandle.style.display).toEqual('none');\r\n  });\r\n\r\n  it('hideToHandel() if need to show', () => {\r\n    handles.toHandle.style.display = 'none';\r\n    handles.controlHandlesDisplay({ isDouble: true, positions: { from: 30, to: 70 }, sliderWidth: 100 });\r\n    expect(handles.toHandle.style.display).toEqual('inline-block');\r\n    expect(handles.toHandle.style.left).toEqual('100px');\r\n  });\r\n\r\n  it('hideToHandel() if need to show ane from bigger than to', () => {\r\n    handles.toHandle.style.display = 'none';\r\n    handles.controlHandlesDisplay({ isDouble: true, positions: { from: 101, to: 70 }, sliderWidth: 100 });\r\n    expect(handles.toHandle.style.display).toEqual('inline-block');\r\n    expect(handles.toHandle.style.left).toEqual('100px');\r\n    expect(handles.fromHandle.style.left).toEqual('100px');\r\n  });\r\n\r\n  it('correctsHandlesOverlaps() fix from extra position correctly', () => {\r\n    const positionImitator: HandlesPosition = { from: 0, to: 10 };\r\n    document.body.append(handles.fromHandle);\r\n    handles.fromHandle.style.width = '20px';\r\n\r\n    const result: boolean = handles.refreshValues({\r\n      isToFixed: true,\r\n      target: 'from',\r\n      value: '4',\r\n    }, {\r\n      sliderWidth: 100,\r\n      positions: positionImitator,\r\n      isDouble: true,\r\n    });\r\n\r\n    expect(result).toBeFalse();\r\n    expect(positionImitator.to).toEqual(20);\r\n  });\r\n\r\n  it('correctsHandlesOverlaps() fix to extra position correctly', () => {\r\n    const positionImitator: HandlesPosition = { from: 70, to: 80 };\r\n    document.body.append(handles.fromHandle, handles.toHandle);\r\n    handles.fromHandle.style.width = '20px';\r\n    handles.toHandle.style.width = '20px';\r\n\r\n    const result: boolean = handles.refreshValues({\r\n      isToFixed: true,\r\n      target: 'from',\r\n      value: '4',\r\n    }, {\r\n      sliderWidth: 100,\r\n      positions: positionImitator,\r\n      isDouble: true,\r\n    });\r\n\r\n    expect(result).toBeFalse();\r\n    expect(positionImitator.from).toEqual(60);\r\n  });\r\n\r\n  it('selectsHandleToMove() choose from handle', () => {\r\n    const result: HTMLSpanElement = handles.selectsHandleToMove({\r\n      positions: { from: 70, to: 80 },\r\n      isDouble: true,\r\n      targetPosition: 74,\r\n    });\r\n\r\n    expect(result).toEqual(handles.fromHandle);\r\n  });\r\n\r\n  it('selectsHandleToMove() choose to handle', () => {\r\n    const result: HTMLSpanElement = handles.selectsHandleToMove({\r\n      positions: { from: 70, to: 80 },\r\n      isDouble: true,\r\n      targetPosition: 76,\r\n    });\r\n\r\n    expect(result).toEqual(handles.toHandle);\r\n  });\r\n\r\n  it('acceptNewPosition() record data correctly', () => {\r\n    const positionImitator: HandlesPosition = { from: 70, to: 80 };\r\n\r\n    handles.acceptNewPosition({\r\n      positions: positionImitator,\r\n      value: 40,\r\n      target: handles.fromHandle,\r\n    });\r\n\r\n    expect(positionImitator.from).toEqual(40);\r\n\r\n    handles.acceptNewPosition({\r\n      positions: positionImitator,\r\n      value: 50,\r\n      target: handles.toHandle,\r\n    });\r\n\r\n    expect(positionImitator.to).toEqual(50);\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/Handles/Handles.ts"));C.s[2]++,describe("Handles",(()=>{let A;C.f[0]++,C.s[3]++,beforeEach((()=>{C.f[1]++,C.s[4]++,A=new a.Handles})),C.s[5]++,it("Handles can be create",(()=>{C.f[2]++,C.s[6]++,expect(A).toBeTruthy()})),C.s[7]++,it("refreshValues() refresh value for from",(()=>{C.f[3]++,C.s[8]++,A.refreshValues({target:"from",value:"5",isToFixed:!1},{positions:{from:0,to:0},sliderWidth:0,isDouble:!1}),C.s[9]++,expect(A.fromValue.innerText).toEqual("5")})),C.s[10]++,it("refreshValues() refresh value for to",(()=>{C.f[4]++,C.s[11]++,A.refreshValues({target:"to",value:"5",isToFixed:!1},{positions:{from:0,to:0},sliderWidth:0,isDouble:!1}),C.s[12]++,expect(A.toHandle.innerText).toEqual("5")})),C.s[13]++,it("adjustPositionRelativeValue() adjust from position correctly and return correct settings",(()=>{C.f[5]++;const e=(C.s[14]++,A.adjustPositions({target:"from",minValue:"0",totalValues:10,value:"5"},100));C.s[15]++,expect(A.fromHandle.style.left).toEqual("50px"),C.s[16]++,expect(e).toEqual({target:"from",position:"50",sliderWidth:100,handleWidth:0})})),C.s[17]++,it("adjustPositionRelativeValue() adjust to position correctly and return correct settings",(()=>{C.f[6]++;const e=(C.s[18]++,A.adjustPositions({target:"to",minValue:"0",totalValues:10,value:"5"},100));C.s[19]++,expect(A.toHandle.style.left).toEqual("50px"),C.s[20]++,expect(e).toEqual({target:"to",position:"50",sliderWidth:100,handleWidth:0})})),C.s[21]++,it("changePlane() change classes correctly",(()=>{C.f[7]++,C.s[22]++,A.changePlane(!0),C.s[23]++,expect(A.fromValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[24]++,expect(A.toValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[25]++,A.changePlane(!1),C.s[26]++,expect(A.fromValue).not.toHaveClass("goby-slider__handle-value_state_vertical"),C.s[27]++,expect(A.toValue).not.toHaveClass("goby-slider__handle-value_state_vertical")})),C.s[28]++,it("hideHandleValues() manage display correctly",(()=>{C.f[8]++,C.s[29]++,A.hideHandleValues(!1),C.s[30]++,expect(A.fromValue.style.display).toEqual("none"),C.s[31]++,expect(A.toValue.style.display).toEqual("none"),C.s[32]++,A.hideHandleValues(!0),C.s[33]++,expect(A.fromValue.style.display).toEqual("inline-block"),C.s[34]++,expect(A.toValue.style.display).toEqual("inline-block")})),C.s[35]++,it("hideToHandel() if need to hide",(()=>{C.f[9]++,C.s[36]++,A.controlHandlesDisplay({isDouble:!1,positions:{from:30,to:70},sliderWidth:100}),C.s[37]++,expect(A.toHandle.style.display).toEqual("none")})),C.s[38]++,it("hideToHandel() if need to show",(()=>{C.f[10]++,C.s[39]++,A.toHandle.style.display="none",C.s[40]++,A.controlHandlesDisplay({isDouble:!0,positions:{from:30,to:70},sliderWidth:100}),C.s[41]++,expect(A.toHandle.style.display).toEqual("inline-block"),C.s[42]++,expect(A.toHandle.style.left).toEqual("100px")})),C.s[43]++,it("hideToHandel() if need to show ane from bigger than to",(()=>{C.f[11]++,C.s[44]++,A.toHandle.style.display="none",C.s[45]++,A.controlHandlesDisplay({isDouble:!0,positions:{from:101,to:70},sliderWidth:100}),C.s[46]++,expect(A.toHandle.style.display).toEqual("inline-block"),C.s[47]++,expect(A.toHandle.style.left).toEqual("100px"),C.s[48]++,expect(A.fromHandle.style.left).toEqual("100px")})),C.s[49]++,it("correctsHandlesOverlaps() fix from extra position correctly",(()=>{C.f[12]++;const e=(C.s[50]++,{from:0,to:10});C.s[51]++,document.body.append(A.fromHandle),C.s[52]++,A.fromHandle.style.width="20px";const n=(C.s[53]++,A.refreshValues({isToFixed:!0,target:"from",value:"4"},{sliderWidth:100,positions:e,isDouble:!0}));C.s[54]++,expect(n).toBeFalse(),C.s[55]++,expect(e.to).toEqual(20)})),C.s[56]++,it("correctsHandlesOverlaps() fix to extra position correctly",(()=>{C.f[13]++;const e=(C.s[57]++,{from:70,to:80});C.s[58]++,document.body.append(A.fromHandle,A.toHandle),C.s[59]++,A.fromHandle.style.width="20px",C.s[60]++,A.toHandle.style.width="20px";const n=(C.s[61]++,A.refreshValues({isToFixed:!0,target:"from",value:"4"},{sliderWidth:100,positions:e,isDouble:!0}));C.s[62]++,expect(n).toBeFalse(),C.s[63]++,expect(e.from).toEqual(60)})),C.s[64]++,it("selectsHandleToMove() choose from handle",(()=>{C.f[14]++;const e=(C.s[65]++,A.selectsHandleToMove({positions:{from:70,to:80},isDouble:!0,targetPosition:74}));C.s[66]++,expect(e).toEqual(A.fromHandle)})),C.s[67]++,it("selectsHandleToMove() choose to handle",(()=>{C.f[15]++;const e=(C.s[68]++,A.selectsHandleToMove({positions:{from:70,to:80},isDouble:!0,targetPosition:76}));C.s[69]++,expect(e).toEqual(A.toHandle)})),C.s[70]++,it("acceptNewPosition() record data correctly",(()=>{C.f[16]++;const e=(C.s[71]++,{from:70,to:80});C.s[72]++,A.acceptNewPosition({positions:e,value:40,target:A.fromHandle}),C.s[73]++,expect(e.from).toEqual(40),C.s[74]++,A.acceptNewPosition({positions:e,value:50,target:A.toHandle}),C.s[75]++,expect(e.to).toEqual(50)}))}))},"./src/plugin/View/Handles/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\types.ts",t="0819531f1e97fb5240fde0fbdedbbfa7501f1bc1",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Handles\\types.ts"],names:[],mappings:"",sourcesContent:["import { HandlesPosition } from '../Movement/types';\r\n\r\ntype DataForAdjustPositionBasic = {\r\n  target: 'from' | 'to';\r\n  value: string;\r\n};\r\n\r\ntype DataForAdjustPosition = DataForAdjustPositionBasic & {\r\n  totalValues: number;\r\n  minValue: string;\r\n};\r\n\r\ntype HandlesElementsInfo = {\r\n  cssClasses: Array<string>,\r\n  name: string,\r\n  value: string\r\n};\r\n\r\ntype HandleHideData = {\r\n  isDouble: boolean,\r\n  positions: HandlesPosition,\r\n  sliderWidth: number\r\n};\r\n\r\ntype RefreshHandlesData = {\r\n  value: string;\r\n  target: 'from' | 'to';\r\n};\r\n\r\ntype HandlesOverlaps = {\r\n  positions: HandlesPosition,\r\n  isDouble: boolean,\r\n  sliderWidth: number,\r\n};\r\n\r\ntype StaticElementsDescription = Array<HandlesElementsInfo>;\r\n\r\nexport {\r\n  DataForAdjustPosition,\r\n  HandlesElementsInfo,\r\n  StaticElementsDescription,\r\n  HandleHideData,\r\n  DataForAdjustPositionBasic,\r\n  RefreshHandlesData,\r\n  HandlesOverlaps,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/Movement/Movement.ts":function(A,e,n){"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\Movement.ts",l="656c4587eb28ee9d864172244771ac35e04b71ce",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\Movement.ts",statementMap:{0:{start:{line:2,column:17},end:{line:7,column:1}},1:{start:{line:3,column:12},end:{line:3,column:28}},2:{start:{line:3,column:34},end:{line:3,column:125}},3:{start:{line:4,column:4},end:{line:5,column:150}},4:{start:{line:4,column:79},end:{line:4,column:131}},5:{start:{line:5,column:9},end:{line:5,column:150}},6:{start:{line:5,column:58},end:{line:5,column:150}},7:{start:{line:5,column:81},end:{line:5,column:150}},8:{start:{line:6,column:4},end:{line:6,column:66}},9:{start:{line:8,column:0},end:{line:8,column:62}},10:{start:{line:9,column:0},end:{line:9,column:26}},11:{start:{line:10,column:29},end:{line:10,column:58}},12:{start:{line:11,column:15},end:{line:181,column:1}},13:{start:{line:13,column:8},end:{line:13,column:38}},14:{start:{line:14,column:8},end:{line:14,column:40}},15:{start:{line:15,column:8},end:{line:15,column:36}},16:{start:{line:16,column:8},end:{line:16,column:47}},17:{start:{line:17,column:8},end:{line:17,column:42}},18:{start:{line:18,column:8},end:{line:18,column:46}},19:{start:{line:19,column:8},end:{line:24,column:9}},20:{start:{line:20,column:12},end:{line:20,column:35}},21:{start:{line:23,column:12},end:{line:23,column:32}},22:{start:{line:25,column:8},end:{line:28,column:10}},23:{start:{line:31,column:8},end:{line:31,column:88}},24:{start:{line:34,column:8},end:{line:34,column:90}},25:{start:{line:37,column:8},end:{line:37,column:36}},26:{start:{line:40,column:8},end:{line:41,column:91}},27:{start:{line:44,column:8},end:{line:45,column:93}},28:{start:{line:48,column:8},end:{line:48,column:122}},29:{start:{line:51,column:34},end:{line:51,column:102}},30:{start:{line:52,column:25},end:{line:52,column:65}},31:{start:{line:53,column:33},end:{line:53,column:60}},32:{start:{line:54,column:35},end:{line:55,column:76}},33:{start:{line:56,column:8},end:{line:56,column:77}},34:{start:{line:59,column:20},end:{line:59,column:31}},35:{start:{line:60,column:39},end:{line:68,column:9}},36:{start:{line:61,column:12},end:{line:62,column:84}},37:{start:{line:62,column:16},end:{line:62,column:84}},38:{start:{line:63,column:12},end:{line:65,column:13}},39:{start:{line:64,column:16},end:{line:64,column:86}},40:{start:{line:66,column:12},end:{line:67,column:40}},41:{start:{line:67,column:16},end:{line:67,column:40}},42:{start:{line:69,column:8},end:{line:70,column:22}},43:{start:{line:70,column:12},end:{line:70,column:22}},44:{start:{line:71,column:8},end:{line:72,column:36}},45:{start:{line:72,column:12},end:{line:72,column:36}},46:{start:{line:73,column:8},end:{line:75,column:9}},47:{start:{line:74,column:12},end:{line:74,column:37}},48:{start:{line:76,column:8},end:{line:76,column:21}},49:{start:{line:79,column:8},end:{line:79,column:112}},50:{start:{line:80,column:8},end:{line:81,column:64}},51:{start:{line:84,column:27},end:{line:84,column:47}},52:{start:{line:85,column:8},end:{line:85,column:47}},53:{start:{line:86,column:8},end:{line:91,column:9}},54:{start:{line:87,column:12},end:{line:87,column:46}},55:{start:{line:90,column:12},end:{line:90,column:44}},56:{start:{line:92,column:8},end:{line:92,column:40}},57:{start:{line:95,column:8},end:{line:95,column:122}},58:{start:{line:98,column:27},end:{line:98,column:55}},59:{start:{line:99,column:34},end:{line:100,column:63}},60:{start:{line:101,column:8},end:{line:110,column:9}},61:{start:{line:103,column:16},end:{line:103,column:51}},62:{start:{line:104,column:16},end:{line:104,column:22}},63:{start:{line:106,column:16},end:{line:106,column:119}},64:{start:{line:107,column:16},end:{line:107,column:22}},65:{start:{line:109,column:16},end:{line:109,column:22}},66:{start:{line:113,column:18},end:{line:113,column:31}},67:{start:{line:114,column:18},end:{line:114,column:31}},68:{start:{line:115,column:32},end:{line:115,column:97}},69:{start:{line:117,column:8},end:{line:122,column:9}},70:{start:{line:118,column:12},end:{line:118,column:49}},71:{start:{line:121,column:12},end:{line:121,column:47}},72:{start:{line:124,column:8},end:{line:129,column:9}},73:{start:{line:125,column:12},end:{line:125,column:138}},74:{start:{line:128,column:12},end:{line:128,column:111}},75:{start:{line:130,column:8},end:{line:130,column:84}},76:{start:{line:131,column:8},end:{line:136,column:9}},77:{start:{line:132,column:12},end:{line:132,column:66}},78:{start:{line:135,column:12},end:{line:135,column:47}},79:{start:{line:143,column:29},end:{line:143,column:36}},80:{start:{line:145,column:8},end:{line:150,column:9}},81:{start:{line:146,column:12},end:{line:146,column:31}},82:{start:{line:149,column:12},end:{line:149,column:29}},83:{start:{line:152,column:8},end:{line:157,column:9}},84:{start:{line:153,column:12},end:{line:153,column:103}},85:{start:{line:156,column:12},end:{line:156,column:81}},86:{start:{line:158,column:8},end:{line:163,column:9}},87:{start:{line:159,column:12},end:{line:162,column:15}},88:{start:{line:164,column:8},end:{line:167,column:10}},89:{start:{line:168,column:8},end:{line:168,column:34}},90:{start:{line:171,column:8},end:{line:171,column:80}},91:{start:{line:172,column:8},end:{line:172,column:76}},92:{start:{line:175,column:8},end:{line:175,column:36}},93:{start:{line:178,column:8},end:{line:178,column:77}},94:{start:{line:179,column:8},end:{line:179,column:73}},95:{start:{line:182,column:0},end:{line:184,column:13}},96:{start:{line:185,column:0},end:{line:185,column:28}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:2,column:46},end:{line:2,column:47}},loc:{start:{line:2,column:87},end:{line:7,column:1}},line:2},1:{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:26},end:{line:29,column:5}},line:12},2:{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:63},end:{line:32,column:5}},line:30},3:{name:"(anonymous_3)",decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:65},end:{line:35,column:5}},line:33},4:{name:"(anonymous_4)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:20},end:{line:38,column:5}},line:36},5:{name:"(anonymous_5)",decl:{start:{line:39,column:4},end:{line:39,column:5}},loc:{start:{line:39,column:41},end:{line:42,column:5}},line:39},6:{name:"(anonymous_6)",decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:42},end:{line:46,column:5}},line:43},7:{name:"(anonymous_7)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:30},end:{line:49,column:5}},line:47},8:{name:"(anonymous_8)",decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:60},end:{line:57,column:5}},line:50},9:{name:"(anonymous_9)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:61},end:{line:77,column:5}},line:58},10:{name:"(anonymous_10)",decl:{start:{line:60,column:39},end:{line:60,column:40}},loc:{start:{line:60,column:45},end:{line:68,column:9}},line:60},11:{name:"(anonymous_11)",decl:{start:{line:78,column:4},end:{line:78,column:5}},loc:{start:{line:78,column:31},end:{line:82,column:5}},line:78},12:{name:"(anonymous_12)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:34},end:{line:93,column:5}},line:83},13:{name:"(anonymous_13)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:37},end:{line:96,column:5}},line:94},14:{name:"(anonymous_14)",decl:{start:{line:97,column:4},end:{line:97,column:5}},loc:{start:{line:97,column:53},end:{line:111,column:5}},line:97},15:{name:"(anonymous_15)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:35},end:{line:137,column:5}},line:112},16:{name:"(anonymous_16)",decl:{start:{line:138,column:4},end:{line:138,column:5}},loc:{start:{line:138,column:28},end:{line:169,column:5}},line:138},17:{name:"(anonymous_17)",decl:{start:{line:170,column:4},end:{line:170,column:5}},loc:{start:{line:170,column:27},end:{line:173,column:5}},line:170},18:{name:"(anonymous_18)",decl:{start:{line:174,column:4},end:{line:174,column:5}},loc:{start:{line:174,column:28},end:{line:176,column:5}},line:174},19:{name:"(anonymous_19)",decl:{start:{line:177,column:4},end:{line:177,column:5}},loc:{start:{line:177,column:25},end:{line:180,column:5}},line:177}},branchMap:{0:{loc:{start:{line:2,column:17},end:{line:7,column:1}},type:"binary-expr",locations:[{start:{line:2,column:18},end:{line:2,column:22}},{start:{line:2,column:26},end:{line:2,column:41}},{start:{line:2,column:46},end:{line:7,column:1}}],line:2},1:{loc:{start:{line:3,column:34},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:42},end:{line:3,column:48}},{start:{line:3,column:51},end:{line:3,column:125}}],line:3},2:{loc:{start:{line:3,column:51},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:67},end:{line:3,column:118}},{start:{line:3,column:121},end:{line:3,column:125}}],line:3},3:{loc:{start:{line:4,column:4},end:{line:5,column:150}},type:"if",locations:[{start:{line:4,column:4},end:{line:5,column:150}},{start:{line:4,column:4},end:{line:5,column:150}}],line:4},4:{loc:{start:{line:4,column:8},end:{line:4,column:77}},type:"binary-expr",locations:[{start:{line:4,column:8},end:{line:4,column:35}},{start:{line:4,column:39},end:{line:4,column:77}}],line:4},5:{loc:{start:{line:5,column:58},end:{line:5,column:150}},type:"if",locations:[{start:{line:5,column:58},end:{line:5,column:150}},{start:{line:5,column:58},end:{line:5,column:150}}],line:5},6:{loc:{start:{line:5,column:85},end:{line:5,column:149}},type:"binary-expr",locations:[{start:{line:5,column:86},end:{line:5,column:143}},{start:{line:5,column:148},end:{line:5,column:149}}],line:5},7:{loc:{start:{line:5,column:86},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:94},end:{line:5,column:98}},{start:{line:5,column:101},end:{line:5,column:143}}],line:5},8:{loc:{start:{line:5,column:101},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:109},end:{line:5,column:126}},{start:{line:5,column:129},end:{line:5,column:143}}],line:5},9:{loc:{start:{line:6,column:11},end:{line:6,column:62}},type:"binary-expr",locations:[{start:{line:6,column:11},end:{line:6,column:16}},{start:{line:6,column:20},end:{line:6,column:21}},{start:{line:6,column:25},end:{line:6,column:62}}],line:6},10:{loc:{start:{line:19,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:19,column:8},end:{line:24,column:9}},{start:{line:19,column:8},end:{line:24,column:9}}],line:19},11:{loc:{start:{line:31,column:15},end:{line:31,column:87}},type:"binary-expr",locations:[{start:{line:31,column:15},end:{line:31,column:44}},{start:{line:31,column:48},end:{line:31,column:87}}],line:31},12:{loc:{start:{line:34,column:15},end:{line:34,column:89}},type:"binary-expr",locations:[{start:{line:34,column:15},end:{line:34,column:44}},{start:{line:34,column:48},end:{line:34,column:89}}],line:34},13:{loc:{start:{line:40,column:15},end:{line:41,column:90}},type:"binary-expr",locations:[{start:{line:40,column:16},end:{line:40,column:57}},{start:{line:41,column:16},end:{line:41,column:89}}],line:40},14:{loc:{start:{line:44,column:15},end:{line:45,column:92}},type:"binary-expr",locations:[{start:{line:44,column:16},end:{line:44,column:55}},{start:{line:45,column:16},end:{line:45,column:91}}],line:44},15:{loc:{start:{line:48,column:15},end:{line:48,column:121}},type:"binary-expr",locations:[{start:{line:48,column:16},end:{line:48,column:44}},{start:{line:48,column:50},end:{line:48,column:84}},{start:{line:48,column:90},end:{line:48,column:120}}],line:48},16:{loc:{start:{line:54,column:35},end:{line:55,column:76}},type:"binary-expr",locations:[{start:{line:54,column:35},end:{line:54,column:97}},{start:{line:55,column:15},end:{line:55,column:76}}],line:54},17:{loc:{start:{line:56,column:15},end:{line:56,column:76}},type:"binary-expr",locations:[{start:{line:56,column:15},end:{line:56,column:32}},{start:{line:56,column:37},end:{line:56,column:53}},{start:{line:56,column:57},end:{line:56,column:75}}],line:56},18:{loc:{start:{line:61,column:12},end:{line:62,column:84}},type:"if",locations:[{start:{line:61,column:12},end:{line:62,column:84}},{start:{line:61,column:12},end:{line:62,column:84}}],line:61},19:{loc:{start:{line:63,column:12},end:{line:65,column:13}},type:"if",locations:[{start:{line:63,column:12},end:{line:65,column:13}},{start:{line:63,column:12},end:{line:65,column:13}}],line:63},20:{loc:{start:{line:66,column:12},end:{line:67,column:40}},type:"if",locations:[{start:{line:66,column:12},end:{line:67,column:40}},{start:{line:66,column:12},end:{line:67,column:40}}],line:66},21:{loc:{start:{line:69,column:8},end:{line:70,column:22}},type:"if",locations:[{start:{line:69,column:8},end:{line:70,column:22}},{start:{line:69,column:8},end:{line:70,column:22}}],line:69},22:{loc:{start:{line:71,column:8},end:{line:72,column:36}},type:"if",locations:[{start:{line:71,column:8},end:{line:72,column:36}},{start:{line:71,column:8},end:{line:72,column:36}}],line:71},23:{loc:{start:{line:73,column:8},end:{line:75,column:9}},type:"if",locations:[{start:{line:73,column:8},end:{line:75,column:9}},{start:{line:73,column:8},end:{line:75,column:9}}],line:73},24:{loc:{start:{line:86,column:8},end:{line:91,column:9}},type:"if",locations:[{start:{line:86,column:8},end:{line:91,column:9}},{start:{line:86,column:8},end:{line:91,column:9}}],line:86},25:{loc:{start:{line:95,column:15},end:{line:95,column:121}},type:"binary-expr",locations:[{start:{line:95,column:16},end:{line:95,column:33}},{start:{line:95,column:39},end:{line:95,column:120}}],line:95},26:{loc:{start:{line:101,column:8},end:{line:110,column:9}},type:"switch",locations:[{start:{line:102,column:12},end:{line:104,column:22}},{start:{line:105,column:12},end:{line:107,column:22}},{start:{line:108,column:12},end:{line:109,column:22}}],line:101},27:{loc:{start:{line:117,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:117,column:8},end:{line:122,column:9}},{start:{line:117,column:8},end:{line:122,column:9}}],line:117},28:{loc:{start:{line:124,column:8},end:{line:129,column:9}},type:"if",locations:[{start:{line:124,column:8},end:{line:129,column:9}},{start:{line:124,column:8},end:{line:129,column:9}}],line:124},29:{loc:{start:{line:131,column:8},end:{line:136,column:9}},type:"if",locations:[{start:{line:131,column:8},end:{line:136,column:9}},{start:{line:131,column:8},end:{line:136,column:9}}],line:131},30:{loc:{start:{line:139,column:16},end:{line:143,column:9}},type:"default-arg",locations:[{start:{line:139,column:28},end:{line:143,column:9}}],line:139},31:{loc:{start:{line:143,column:11},end:{line:143,column:23}},type:"default-arg",locations:[{start:{line:143,column:18},end:{line:143,column:23}}],line:143},32:{loc:{start:{line:145,column:8},end:{line:150,column:9}},type:"if",locations:[{start:{line:145,column:8},end:{line:150,column:9}},{start:{line:145,column:8},end:{line:150,column:9}}],line:145},33:{loc:{start:{line:152,column:8},end:{line:157,column:9}},type:"if",locations:[{start:{line:152,column:8},end:{line:157,column:9}},{start:{line:152,column:8},end:{line:157,column:9}}],line:152},34:{loc:{start:{line:158,column:8},end:{line:163,column:9}},type:"if",locations:[{start:{line:158,column:8},end:{line:163,column:9}},{start:{line:158,column:8},end:{line:163,column:9}}],line:158}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0},b:{0:[0,0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0,0],16:[0,0],17:[0,0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0],26:[0,0,0],27:[0,0],28:[0,0],29:[0,0],30:[0],31:[0],32:[0,0],33:[0,0],34:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\Movement.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\Movement.ts"],names:[],mappings:"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",sourcesContent:["import autobind from 'autobind-decorator';\r\nimport { BasicViewSettings } from '../types';\r\nimport {\r\n  HandleClickData,\r\n  HandlesPosition,\r\n  MovementEvent,\r\n  MovementSettings,\r\n  TestMouseEvent,\r\n} from './types';\r\n\r\n@autobind\r\nexport class Movement {\r\n  readonly slider: HTMLDivElement;\r\n\r\n  readonly from: HTMLSpanElement;\r\n\r\n  readonly to: HTMLSpanElement;\r\n\r\n  readonly settings: BasicViewSettings;\r\n\r\n  readonly interval: HTMLDivElement;\r\n\r\n  public stepWidth: string | boolean;\r\n\r\n  public positions: HandlesPosition;\r\n\r\n  public dataForMovement: HandleClickData;\r\n\r\n  constructor(settings: MovementSettings) {\r\n    this.slider = settings.slider;\r\n    this.from = settings.fromHandle;\r\n    this.to = settings.toHandle;\r\n    this.settings = settings.basicSettings;\r\n    this.interval = settings.interval;\r\n    this.positions = { from: 0, to: 100 };\r\n    if (!this.settings.step) {\r\n      this.stepWidth = false;\r\n    } else {\r\n      this.stepWidth = '';\r\n    }\r\n    this.dataForMovement = {\r\n      distanceToCursor: 0,\r\n      target: this.from,\r\n    };\r\n  }\r\n\r\n  private checkIsToBiggerThanRightEdge(rightSliderEdge: number, newPosition: number): boolean {\r\n    return newPosition > rightSliderEdge && this.dataForMovement.target === this.to;\r\n  }\r\n\r\n  private checkIsFromBiggerThanRightEdge(rightSliderEdge: number, newPosition: number): boolean {\r\n    return newPosition > rightSliderEdge && this.dataForMovement.target === this.from;\r\n  }\r\n\r\n  private checkIsDouble(): boolean {\r\n    return this.settings.double;\r\n  }\r\n\r\n  private checkIsFromBiggerThanTo(newPosition: number): boolean {\r\n    return (this.dataForMovement.target === this.from)\r\n      && (newPosition > this.positions.to - this.dataForMovement.target.offsetWidth);\r\n  }\r\n\r\n  private checkIsToSmallerThanFrom(newPosition: number): boolean {\r\n    return (this.dataForMovement.target === this.to)\r\n      && (newPosition < this.positions.from + this.dataForMovement.target.offsetWidth);\r\n  }\r\n\r\n  private checkIsStepSetCorrectly(): boolean {\r\n    return (this.settings.step !== false) && (typeof this.stepWidth === 'string') && (Number(this.stepWidth) >= 0.01);\r\n  }\r\n\r\n  private checkIsStepWidthPassed(targetPosition: number, currentPosition: number): boolean {\r\n    const correctStepPassed = Math.abs(targetPosition - currentPosition) >= Number(this.stepWidth);\r\n    const stepRate: number = currentPosition / Number(this.stepWidth);\r\n    const isNotInStepRange: boolean = !Number.isInteger(stepRate);\r\n    const isRangeWherePassed: boolean = Math.floor(stepRate) * Number(this.stepWidth) > targetPosition\r\n      || Math.ceil(stepRate) * Number(this.stepWidth) < targetPosition;\r\n\r\n    return correctStepPassed || (isNotInStepRange && isRangeWherePassed);\r\n  }\r\n\r\n  public correctsImpossiblePosition(rightSliderEdge: number, newPosition: number): number {\r\n    let value: number = newPosition;\r\n\r\n    const correctDoublePositions = (): void => {\r\n      if (this.checkIsFromBiggerThanTo(newPosition)) value = this.positions.to - this.dataForMovement.target.offsetWidth;\r\n      if (this.checkIsToSmallerThanFrom(newPosition)) {\r\n        value = this.positions.from + this.dataForMovement.target.offsetWidth;\r\n      }\r\n      if (this.checkIsToBiggerThanRightEdge(rightSliderEdge, newPosition)) value = rightSliderEdge;\r\n    };\r\n\r\n    if (newPosition < 0) value = 0;\r\n    if (this.checkIsFromBiggerThanRightEdge(rightSliderEdge, newPosition)) value = rightSliderEdge;\r\n    if (this.checkIsDouble()) {\r\n      correctDoublePositions();\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  public correctsIntervalPosition(): void {\r\n    this.interval.style.left = `${(this.positions.from + (this.dataForMovement.target.offsetWidth / 2))}px`;\r\n    this.interval.style.right = `${(this.slider.offsetWidth - this.positions.to)\r\n    - (this.dataForMovement.target.offsetWidth / 2)}px`;\r\n  }\r\n\r\n  private applyNewPosition(newPosition: number): void {\r\n    const { target } = this.dataForMovement;\r\n    target.style.left = `${newPosition}px`;\r\n\r\n    if (this.dataForMovement.target === this.from) {\r\n      this.positions.from = newPosition;\r\n    } else {\r\n      this.positions.to = newPosition;\r\n    }\r\n\r\n    this.correctsIntervalPosition();\r\n  }\r\n\r\n  private checkIsEdgePosition(newPosition: number): boolean {\r\n    return (newPosition === 0) || (newPosition === this.slider.offsetWidth - this.dataForMovement.target.offsetWidth);\r\n  }\r\n\r\n  private controlStepMovement(newPosition: number, targetPosition: number): void {\r\n    const difference = newPosition - targetPosition;\r\n    const newTargetPosition: number = targetPosition + Number(this.stepWidth)\r\n      * (Math.trunc(difference / Number(this.stepWidth)));\r\n\r\n    switch (true) {\r\n      case this.checkIsEdgePosition(newPosition):\r\n        this.applyNewPosition(newPosition);\r\n        break;\r\n      case this.checkIsStepWidthPassed(newPosition, targetPosition):\r\n        this.applyNewPosition(\r\n          Math.round(newTargetPosition / Number(this.stepWidth)) * Number(this.stepWidth),\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private handleDocumentMouseMove(event: MouseEvent | TestMouseEvent): void {\r\n    const x: number = event.clientX;\r\n    const y: number = event.clientY;\r\n    const rightSliderEdge: number = this.slider.offsetWidth - this.dataForMovement.target.offsetWidth;\r\n    let targetPosition: number;\r\n\r\n    if (this.dataForMovement.target === this.from) {\r\n      targetPosition = this.positions.from;\r\n    } else {\r\n      targetPosition = this.positions.to;\r\n    }\r\n\r\n    let newPosition: number;\r\n\r\n    if (this.settings.vertical) {\r\n      newPosition = this.slider.offsetWidth - (\r\n        y - this.dataForMovement.distanceToCursor - this.slider.getBoundingClientRect().top\r\n      );\r\n    } else {\r\n      newPosition = x - this.dataForMovement.distanceToCursor - this.slider.getBoundingClientRect().left;\r\n    }\r\n\r\n    newPosition = this.correctsImpossiblePosition(rightSliderEdge, newPosition);\r\n\r\n    if (this.checkIsStepSetCorrectly()) {\r\n      this.controlStepMovement(newPosition, targetPosition);\r\n    } else {\r\n      this.applyNewPosition(newPosition);\r\n    }\r\n  }\r\n\r\n  public handleListener(setting: MovementEvent): void {\r\n    const {\r\n      eventInfo = {\r\n        x: 0,\r\n        y: 0,\r\n        target: false,\r\n      },\r\n      test = false,\r\n    } = setting;\r\n\r\n    let target: HTMLSpanElement;\r\n    if (eventInfo.target === this.from) {\r\n      target = this.from;\r\n    } else {\r\n      target = this.to;\r\n    }\r\n\r\n    let distanceToCursor: number;\r\n    if (this.settings.vertical) {\r\n      distanceToCursor = eventInfo.y - target.getBoundingClientRect().top - (target.offsetWidth);\r\n    } else {\r\n      distanceToCursor = eventInfo.x - target.getBoundingClientRect().left;\r\n    }\r\n\r\n    if (test) {\r\n      this.handleDocumentMouseMove({\r\n        clientX: test.x,\r\n        clientY: test.y,\r\n      });\r\n    }\r\n\r\n    this.dataForMovement = {\r\n      target,\r\n      distanceToCursor,\r\n    };\r\n\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  private removeEventListeners(): void {\r\n    document.removeEventListener('mousemove', this.handleDocumentMouseMove);\r\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp);\r\n  }\r\n\r\n  private handleDocumentMouseUp(): void {\r\n    this.removeEventListeners();\r\n  }\r\n\r\n  private bindEventListeners(): void {\r\n    document.addEventListener('mousemove', this.handleDocumentMouseMove);\r\n    document.addEventListener('mouseup', this.handleDocumentMouseUp);\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r)),a=(C.s[0]++,C.b[0][0]++,this&&(C.b[0][1]++,this.__decorate)||(C.b[0][2]++,function(A,e,n,t){C.f[0]++;var l,s=(C.s[1]++,arguments.length),i=(C.s[2]++,s<3?(C.b[1][0]++,e):(C.b[1][1]++,null===t?(C.b[2][0]++,t=Object.getOwnPropertyDescriptor(e,n)):(C.b[2][1]++,t)));if(C.s[3]++,C.b[4][0]++,"object"==typeof Reflect&&(C.b[4][1]++,"function"==typeof Reflect.decorate))C.b[3][0]++,C.s[4]++,i=Reflect.decorate(A,e,n,t);else{C.b[3][1]++,C.s[5]++;for(var r=A.length-1;r>=0;r--)C.s[6]++,(l=A[r])?(C.b[5][0]++,C.s[7]++,C.b[6][0]++,i=(s<3?(C.b[7][0]++,l(i)):(C.b[7][1]++,s>3?(C.b[8][0]++,l(e,n,i)):(C.b[8][1]++,l(e,n))))||(C.b[6][1]++,i)):C.b[5][1]++}return C.s[8]++,C.b[9][0]++,s>3&&(C.b[9][1]++,i)&&(C.b[9][2]++,Object.defineProperty(e,n,i)),i}));C.s[9]++,Object.defineProperty(e,"__esModule",{value:!0}),C.s[10]++,e.Movement=void 0;const u=(C.s[11]++,n("./node_modules/autobind-decorator/lib/esm/index.js"));C.s[12]++;let c=class{constructor(A){C.f[1]++,C.s[13]++,this.slider=A.slider,C.s[14]++,this.from=A.fromHandle,C.s[15]++,this.to=A.toHandle,C.s[16]++,this.settings=A.basicSettings,C.s[17]++,this.interval=A.interval,C.s[18]++,this.positions={from:0,to:100},C.s[19]++,this.settings.step?(C.b[10][1]++,C.s[21]++,this.stepWidth=""):(C.b[10][0]++,C.s[20]++,this.stepWidth=!1),C.s[22]++,this.dataForMovement={distanceToCursor:0,target:this.from}}checkIsToBiggerThanRightEdge(A,e){return C.f[2]++,C.s[23]++,C.b[11][0]++,e>A&&(C.b[11][1]++,this.dataForMovement.target===this.to)}checkIsFromBiggerThanRightEdge(A,e){return C.f[3]++,C.s[24]++,C.b[12][0]++,e>A&&(C.b[12][1]++,this.dataForMovement.target===this.from)}checkIsDouble(){return C.f[4]++,C.s[25]++,this.settings.double}checkIsFromBiggerThanTo(A){return C.f[5]++,C.s[26]++,C.b[13][0]++,this.dataForMovement.target===this.from&&(C.b[13][1]++,A>this.positions.to-this.dataForMovement.target.offsetWidth)}checkIsToSmallerThanFrom(A){return C.f[6]++,C.s[27]++,C.b[14][0]++,this.dataForMovement.target===this.to&&(C.b[14][1]++,A<this.positions.from+this.dataForMovement.target.offsetWidth)}checkIsStepSetCorrectly(){return C.f[7]++,C.s[28]++,C.b[15][0]++,!1!==this.settings.step&&(C.b[15][1]++,"string"==typeof this.stepWidth)&&(C.b[15][2]++,Number(this.stepWidth)>=.01)}checkIsStepWidthPassed(A,e){C.f[8]++;const n=(C.s[29]++,Math.abs(A-e)>=Number(this.stepWidth)),t=(C.s[30]++,e/Number(this.stepWidth)),l=(C.s[31]++,!Number.isInteger(t)),s=(C.s[32]++,C.b[16][0]++,Math.floor(t)*Number(this.stepWidth)>A||(C.b[16][1]++,Math.ceil(t)*Number(this.stepWidth)<A));return C.s[33]++,C.b[17][0]++,n||(C.b[17][1]++,l&&(C.b[17][2]++,s))}correctsImpossiblePosition(A,e){C.f[9]++;let n=(C.s[34]++,e);C.s[35]++;const t=()=>{C.f[10]++,C.s[36]++,this.checkIsFromBiggerThanTo(e)?(C.b[18][0]++,C.s[37]++,n=this.positions.to-this.dataForMovement.target.offsetWidth):C.b[18][1]++,C.s[38]++,this.checkIsToSmallerThanFrom(e)?(C.b[19][0]++,C.s[39]++,n=this.positions.from+this.dataForMovement.target.offsetWidth):C.b[19][1]++,C.s[40]++,this.checkIsToBiggerThanRightEdge(A,e)?(C.b[20][0]++,C.s[41]++,n=A):C.b[20][1]++};return C.s[42]++,e<0?(C.b[21][0]++,C.s[43]++,n=0):C.b[21][1]++,C.s[44]++,this.checkIsFromBiggerThanRightEdge(A,e)?(C.b[22][0]++,C.s[45]++,n=A):C.b[22][1]++,C.s[46]++,this.checkIsDouble()?(C.b[23][0]++,C.s[47]++,t()):C.b[23][1]++,C.s[48]++,n}correctsIntervalPosition(){C.f[11]++,C.s[49]++,this.interval.style.left=`${this.positions.from+this.dataForMovement.target.offsetWidth/2}px`,C.s[50]++,this.interval.style.right=this.slider.offsetWidth-this.positions.to-this.dataForMovement.target.offsetWidth/2+"px"}applyNewPosition(A){C.f[12]++;const{target:e}=(C.s[51]++,this.dataForMovement);C.s[52]++,e.style.left=`${A}px`,C.s[53]++,this.dataForMovement.target===this.from?(C.b[24][0]++,C.s[54]++,this.positions.from=A):(C.b[24][1]++,C.s[55]++,this.positions.to=A),C.s[56]++,this.correctsIntervalPosition()}checkIsEdgePosition(A){return C.f[13]++,C.s[57]++,C.b[25][0]++,0===A||(C.b[25][1]++,A===this.slider.offsetWidth-this.dataForMovement.target.offsetWidth)}controlStepMovement(A,e){C.f[14]++;const n=(C.s[58]++,A-e),t=(C.s[59]++,e+Number(this.stepWidth)*Math.trunc(n/Number(this.stepWidth)));switch(C.s[60]++,!0){case this.checkIsEdgePosition(A):C.b[26][0]++,C.s[61]++,this.applyNewPosition(A),C.s[62]++;break;case this.checkIsStepWidthPassed(A,e):C.b[26][1]++,C.s[63]++,this.applyNewPosition(Math.round(t/Number(this.stepWidth))*Number(this.stepWidth)),C.s[64]++;break;default:C.b[26][2]++,C.s[65]++}}handleDocumentMouseMove(A){C.f[15]++;const e=(C.s[66]++,A.clientX),n=(C.s[67]++,A.clientY),t=(C.s[68]++,this.slider.offsetWidth-this.dataForMovement.target.offsetWidth);let l,s;C.s[69]++,this.dataForMovement.target===this.from?(C.b[27][0]++,C.s[70]++,l=this.positions.from):(C.b[27][1]++,C.s[71]++,l=this.positions.to),C.s[72]++,this.settings.vertical?(C.b[28][0]++,C.s[73]++,s=this.slider.offsetWidth-(n-this.dataForMovement.distanceToCursor-this.slider.getBoundingClientRect().top)):(C.b[28][1]++,C.s[74]++,s=e-this.dataForMovement.distanceToCursor-this.slider.getBoundingClientRect().left),C.s[75]++,s=this.correctsImpossiblePosition(t,s),C.s[76]++,this.checkIsStepSetCorrectly()?(C.b[29][0]++,C.s[77]++,this.controlStepMovement(s,l)):(C.b[29][1]++,C.s[78]++,this.applyNewPosition(s))}handleListener(A){C.f[16]++;const{eventInfo:e=(C.b[30][0]++,{x:0,y:0,target:!1}),test:n=(C.b[31][0]++,!1)}=(C.s[79]++,A);let t,l;C.s[80]++,e.target===this.from?(C.b[32][0]++,C.s[81]++,t=this.from):(C.b[32][1]++,C.s[82]++,t=this.to),C.s[83]++,this.settings.vertical?(C.b[33][0]++,C.s[84]++,l=e.y-t.getBoundingClientRect().top-t.offsetWidth):(C.b[33][1]++,C.s[85]++,l=e.x-t.getBoundingClientRect().left),C.s[86]++,n?(C.b[34][0]++,C.s[87]++,this.handleDocumentMouseMove({clientX:n.x,clientY:n.y})):C.b[34][1]++,C.s[88]++,this.dataForMovement={target:t,distanceToCursor:l},C.s[89]++,this.bindEventListeners()}removeEventListeners(){C.f[17]++,C.s[90]++,document.removeEventListener("mousemove",this.handleDocumentMouseMove),C.s[91]++,document.removeEventListener("mouseup",this.handleDocumentMouseUp)}handleDocumentMouseUp(){C.f[18]++,C.s[92]++,this.removeEventListeners()}bindEventListeners(){C.f[19]++,C.s[93]++,document.addEventListener("mousemove",this.handleDocumentMouseMove),C.s[94]++,document.addEventListener("mouseup",this.handleDocumentMouseUp)}};C.s[95]++,c=a([u.default],c),C.s[96]++,e.Movement=c},"./src/plugin/View/Movement/movement.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\movement.test.ts",l="e94fb8850345da80cb6cda63d3d24983b809bd00",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\movement.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:18},end:{line:3,column:47}},2:{start:{line:4,column:19},end:{line:4,column:40}},3:{start:{line:5,column:27},end:{line:5,column:74}},4:{start:{line:6,column:17},end:{line:6,column:44}},5:{start:{line:7,column:0},end:{line:77,column:3}},6:{start:{line:9,column:4},end:{line:40,column:7}},7:{start:{line:11,column:8},end:{line:25,column:11}},8:{start:{line:26,column:8},end:{line:26,column:50}},9:{start:{line:27,column:8},end:{line:27,column:138}},10:{start:{line:28,column:8},end:{line:28,column:46}},11:{start:{line:29,column:8},end:{line:29,column:43}},12:{start:{line:30,column:8},end:{line:30,column:41}},13:{start:{line:31,column:8},end:{line:31,column:52}},14:{start:{line:32,column:8},end:{line:32,column:43}},15:{start:{line:33,column:8},end:{line:33,column:42}},16:{start:{line:34,column:8},end:{line:34,column:50}},17:{start:{line:35,column:8},end:{line:35,column:41}},18:{start:{line:36,column:8},end:{line:36,column:40}},19:{start:{line:37,column:8},end:{line:37,column:48}},20:{start:{line:38,column:8},end:{line:38,column:39}},21:{start:{line:39,column:8},end:{line:39,column:38}},22:{start:{line:41,column:4},end:{line:45,column:7}},23:{start:{line:42,column:8},end:{line:42,column:33}},24:{start:{line:43,column:8},end:{line:43,column:31}},25:{start:{line:44,column:8},end:{line:44,column:29}},26:{start:{line:46,column:4},end:{line:48,column:7}},27:{start:{line:47,column:8},end:{line:47,column:38}},28:{start:{line:49,column:4},end:{line:56,column:7}},29:{start:{line:51,column:8},end:{line:51,column:41}},30:{start:{line:52,column:8},end:{line:52,column:111}},31:{start:{line:53,column:8},end:{line:53,column:58}},32:{start:{line:54,column:8},end:{line:54,column:62}},33:{start:{line:55,column:8},end:{line:55,column:53}},34:{start:{line:57,column:4},end:{line:64,column:7}},35:{start:{line:59,column:8},end:{line:59,column:41}},36:{start:{line:60,column:8},end:{line:60,column:112}},37:{start:{line:61,column:8},end:{line:61,column:56}},38:{start:{line:62,column:8},end:{line:62,column:61}},39:{start:{line:63,column:8},end:{line:63,column:51}},40:{start:{line:65,column:4},end:{line:71,column:7}},41:{start:{line:67,column:8},end:{line:67,column:111}},42:{start:{line:68,column:8},end:{line:68,column:57}},43:{start:{line:69,column:8},end:{line:69,column:61}},44:{start:{line:70,column:8},end:{line:70,column:52}},45:{start:{line:72,column:4},end:{line:76,column:7}},46:{start:{line:73,column:8},end:{line:73,column:54}},47:{start:{line:74,column:23},end:{line:74,column:67}},48:{start:{line:75,column:8},end:{line:75,column:35}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:7,column:21},end:{line:7,column:22}},loc:{start:{line:7,column:27},end:{line:77,column:1}},line:7},1:{name:"(anonymous_1)",decl:{start:{line:9,column:15},end:{line:9,column:16}},loc:{start:{line:9,column:21},end:{line:40,column:5}},line:9},2:{name:"(anonymous_2)",decl:{start:{line:41,column:14},end:{line:41,column:15}},loc:{start:{line:41,column:20},end:{line:45,column:5}},line:41},3:{name:"(anonymous_3)",decl:{start:{line:46,column:33},end:{line:46,column:34}},loc:{start:{line:46,column:39},end:{line:48,column:5}},line:46},4:{name:"(anonymous_4)",decl:{start:{line:50,column:82},end:{line:50,column:83}},loc:{start:{line:50,column:88},end:{line:56,column:5}},line:50},5:{name:"(anonymous_5)",decl:{start:{line:58,column:51},end:{line:58,column:52}},loc:{start:{line:58,column:57},end:{line:64,column:5}},line:58},6:{name:"(anonymous_6)",decl:{start:{line:66,column:51},end:{line:66,column:52}},loc:{start:{line:66,column:57},end:{line:71,column:5}},line:66},7:{name:"(anonymous_7)",decl:{start:{line:72,column:77},end:{line:72,column:78}},loc:{start:{line:72,column:83},end:{line:76,column:5}},line:72}},branchMap:{0:{loc:{start:{line:27,column:8},end:{line:27,column:137}},type:"cond-expr",locations:[{start:{line:27,column:74},end:{line:27,column:80}},{start:{line:27,column:83},end:{line:27,column:137}}],line:27},1:{loc:{start:{line:27,column:8},end:{line:27,column:71}},type:"binary-expr",locations:[{start:{line:27,column:8},end:{line:27,column:54}},{start:{line:27,column:58},end:{line:27,column:71}}],line:27}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0},b:{0:[0,0],1:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\movement.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\movement.test.ts"],names:[],mappings:";;AAAA,gDAA6C;AAC7C,yCAAsC;AACtC,2EAAwE;AACxE,6CAA0C;AAE1C,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,QAAkB,CAAC;IAEvB,UAAU,CAAC,GAAG,EAAE;;QACd,QAAQ,GAAG,IAAI,mBAAQ,CAAC;YACtB,aAAa,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,IAAI,EAAE,KAAK;gBACX,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,IAAI;aACd;YACD,UAAU,EAAE,IAAI,iBAAO,EAAE,CAAC,UAAU;YACpC,QAAQ,EAAE,IAAI,iBAAO,EAAE,CAAC,QAAQ;YAChC,MAAM,EAAE,IAAI,eAAM,EAAE,CAAC,MAAM;YAC3B,QAAQ,EAAE,IAAI,mCAAgB,EAAE,CAAC,QAAQ;SAC1C,CAAC,CAAC;QACH,QAAQ,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC1C,MAAA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,0CAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpF,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QACnC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QACjC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QACnC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAClC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QACjC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAChC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QACxC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/B,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACzB,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C;UAC5C,sEAAsE,EAAE,GAAG,EAAE;QAC/E,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,QAAQ,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEvG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE;UACxE,uCAAuC,EAAE,GAAG,EAAE;QAChD,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QACjC,QAAQ,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAExG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6EAA6E;UAC5E,uCAAuC,EAAE,GAAG,EAAE;QAChD,QAAQ,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEvG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,QAAQ,CAAC,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC;QAC9C,MAAM,MAAM,GAAW,QAAQ,CAAC,0BAA0B,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { Handles } from '../Handles/Handles';\r\nimport { Movement } from './Movement';\r\nimport { SelectedInterval } from '../SelectedInterval/SelectedInterval';\r\nimport { Slider } from '../Slider/Slider';\r\n\r\ndescribe('Movement', () => {\r\n  let movement: Movement;\r\n\r\n  beforeEach(() => {\r\n    movement = new Movement({\r\n      basicSettings: {\r\n        sideMenu: true,\r\n        double: true,\r\n        handlesValues: true,\r\n        step: false,\r\n        valueScale: true,\r\n        vertical: false,\r\n        integer: true,\r\n      },\r\n      fromHandle: new Handles().fromHandle,\r\n      toHandle: new Handles().toHandle,\r\n      slider: new Slider().slider,\r\n      interval: new SelectedInterval().interval,\r\n    });\r\n    movement.positions = { from: 30, to: 70 };\r\n    document.querySelector('body')?.append(movement.slider, movement.from, movement.to);\r\n    movement.slider.style.width = '120px';\r\n    movement.from.style.width = '20px';\r\n    movement.to.style.width = '20px';\r\n    movement.slider.style.position = 'absolute';\r\n    movement.slider.style.left = '0px';\r\n    movement.slider.style.top = '0px';\r\n    movement.from.style.position = 'absolute';\r\n    movement.from.style.left = '0px';\r\n    movement.from.style.top = '0px';\r\n    movement.to.style.position = 'absolute';\r\n    movement.to.style.left = '0px';\r\n    movement.to.style.top = '0px';\r\n  });\r\n\r\n  afterEach(() => {\r\n    movement.slider.remove();\r\n    movement.from.remove();\r\n    movement.to.remove();\r\n  });\r\n\r\n  it('Movement can be create', () => {\r\n    expect(movement).toBeTruthy();\r\n  });\r\n\r\n  it('handelListener() move from and interval to '\r\n    + 'position bigger than right edge and record the position after fixing', () => {\r\n    movement.settings.double = false;\r\n    movement.handleListener({ eventInfo: { target: movement.from, x: 50, y: 0 }, test: { x: 200, y: 0 } });\r\n\r\n    expect(movement.from.style.left).toEqual('100px');\r\n    expect(movement.interval.style.left).toEqual('110px');\r\n    expect(movement.positions.from).toEqual(100);\r\n  });\r\n\r\n  it('handelListener() move from and interval to position less than left edge'\r\n    + ' and record the position after fixing', () => {\r\n    movement.settings.double = false;\r\n    movement.handleListener({ eventInfo: { target: movement.from, x: 50, y: 0 }, test: { x: -100, y: 0 } });\r\n\r\n    expect(movement.from.style.left).toEqual('0px');\r\n    expect(movement.interval.style.left).toEqual('10px');\r\n    expect(movement.positions.from).toEqual(0);\r\n  });\r\n\r\n  it('handelListener() move from and interval to position bigger than to position'\r\n    + ' and record the position after fixing', () => {\r\n    movement.handleListener({ eventInfo: { target: movement.from, x: 50, y: 0 }, test: { x: 200, y: 0 } });\r\n\r\n    expect(movement.from.style.left).toEqual('50px');\r\n    expect(movement.interval.style.left).toEqual('60px');\r\n    expect(movement.positions.from).toEqual(50);\r\n  });\r\n\r\n  it('correctsImpossiblePosition() fix value smaller then from correctly', () => {\r\n    movement.dataForMovement.target = movement.to;\r\n    const result: number = movement.correctsImpossiblePosition(100, 20);\r\n\r\n    expect(result).toEqual(50);\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/Handles/Handles.ts")),u=(C.s[2]++,n("./src/plugin/View/Movement/Movement.ts")),c=(C.s[3]++,n("./src/plugin/View/SelectedInterval/SelectedInterval.ts")),m=(C.s[4]++,n("./src/plugin/View/Slider/Slider.ts"));C.s[5]++,describe("Movement",(()=>{let A;C.f[0]++,C.s[6]++,beforeEach((()=>{var e;C.f[1]++,C.s[7]++,A=new u.Movement({basicSettings:{sideMenu:!0,double:!0,handlesValues:!0,step:!1,valueScale:!0,vertical:!1,integer:!0},fromHandle:(new a.Handles).fromHandle,toHandle:(new a.Handles).toHandle,slider:(new m.Slider).slider,interval:(new c.SelectedInterval).interval}),C.s[8]++,A.positions={from:30,to:70},C.s[9]++,C.b[1][0]++,null===(e=document.querySelector("body"))||(C.b[1][1]++,void 0===e)?C.b[0][0]++:(C.b[0][1]++,e.append(A.slider,A.from,A.to)),C.s[10]++,A.slider.style.width="120px",C.s[11]++,A.from.style.width="20px",C.s[12]++,A.to.style.width="20px",C.s[13]++,A.slider.style.position="absolute",C.s[14]++,A.slider.style.left="0px",C.s[15]++,A.slider.style.top="0px",C.s[16]++,A.from.style.position="absolute",C.s[17]++,A.from.style.left="0px",C.s[18]++,A.from.style.top="0px",C.s[19]++,A.to.style.position="absolute",C.s[20]++,A.to.style.left="0px",C.s[21]++,A.to.style.top="0px"})),C.s[22]++,afterEach((()=>{C.f[2]++,C.s[23]++,A.slider.remove(),C.s[24]++,A.from.remove(),C.s[25]++,A.to.remove()})),C.s[26]++,it("Movement can be create",(()=>{C.f[3]++,C.s[27]++,expect(A).toBeTruthy()})),C.s[28]++,it("handelListener() move from and interval to position bigger than right edge and record the position after fixing",(()=>{C.f[4]++,C.s[29]++,A.settings.double=!1,C.s[30]++,A.handleListener({eventInfo:{target:A.from,x:50,y:0},test:{x:200,y:0}}),C.s[31]++,expect(A.from.style.left).toEqual("100px"),C.s[32]++,expect(A.interval.style.left).toEqual("110px"),C.s[33]++,expect(A.positions.from).toEqual(100)})),C.s[34]++,it("handelListener() move from and interval to position less than left edge and record the position after fixing",(()=>{C.f[5]++,C.s[35]++,A.settings.double=!1,C.s[36]++,A.handleListener({eventInfo:{target:A.from,x:50,y:0},test:{x:-100,y:0}}),C.s[37]++,expect(A.from.style.left).toEqual("0px"),C.s[38]++,expect(A.interval.style.left).toEqual("10px"),C.s[39]++,expect(A.positions.from).toEqual(0)})),C.s[40]++,it("handelListener() move from and interval to position bigger than to position and record the position after fixing",(()=>{C.f[6]++,C.s[41]++,A.handleListener({eventInfo:{target:A.from,x:50,y:0},test:{x:200,y:0}}),C.s[42]++,expect(A.from.style.left).toEqual("50px"),C.s[43]++,expect(A.interval.style.left).toEqual("60px"),C.s[44]++,expect(A.positions.from).toEqual(50)})),C.s[45]++,it("correctsImpossiblePosition() fix value smaller then from correctly",(()=>{C.f[7]++,C.s[46]++,A.dataForMovement.target=A.to;const e=(C.s[47]++,A.correctsImpossiblePosition(100,20));C.s[48]++,expect(e).toEqual(50)}))}))},"./src/plugin/View/Movement/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\types.ts",t="96f8bf75a7298e2de66a16baa21a1003225380db",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Movement\\types.ts"],names:[],mappings:"",sourcesContent:["import { BasicViewSettings } from '../types';\r\n\r\ntype EventInfo = {\r\n  readonly target: EventTarget,\r\n  readonly x: number,\r\n  readonly y: number\r\n};\r\n\r\ntype HandlesPosition = {\r\n  from: number;\r\n  to: number;\r\n};\r\n\r\ntype MovementSettings = {\r\n  slider: HTMLDivElement;\r\n  fromHandle: HTMLSpanElement;\r\n  toHandle: HTMLSpanElement;\r\n  basicSettings: BasicViewSettings;\r\n  interval: HTMLDivElement;\r\n  positions?: HandlesPosition;\r\n  stepWidth?: string | boolean;\r\n};\r\n\r\ntype TestMouseEvent = {\r\n  clientX: number,\r\n  clientY: number,\r\n};\r\n\r\ntype MovementEvent = {\r\n  eventInfo: EventInfo,\r\n  test?: {\r\n    x: number,\r\n    y: number,\r\n  },\r\n};\r\n\r\ntype HandleClickData = {\r\n  target: HTMLSpanElement,\r\n  distanceToCursor: number,\r\n};\r\n\r\nexport {\r\n  EventInfo,\r\n  HandlesPosition,\r\n  MovementSettings,\r\n  TestMouseEvent,\r\n  MovementEvent,\r\n  HandleClickData,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/SelectedInterval/SelectedInterval.ts":function(A,e,n){"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\SelectedInterval.ts",l="7c1b2b26ad8a54631fe0f4f8b1d752be226b6518",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\SelectedInterval.ts",statementMap:{0:{start:{line:2,column:17},end:{line:7,column:1}},1:{start:{line:3,column:12},end:{line:3,column:28}},2:{start:{line:3,column:34},end:{line:3,column:125}},3:{start:{line:4,column:4},end:{line:5,column:150}},4:{start:{line:4,column:79},end:{line:4,column:131}},5:{start:{line:5,column:9},end:{line:5,column:150}},6:{start:{line:5,column:58},end:{line:5,column:150}},7:{start:{line:5,column:81},end:{line:5,column:150}},8:{start:{line:6,column:4},end:{line:6,column:66}},9:{start:{line:8,column:0},end:{line:8,column:62}},10:{start:{line:9,column:0},end:{line:9,column:34}},11:{start:{line:10,column:29},end:{line:10,column:58}},12:{start:{line:11,column:23},end:{line:46,column:1}},13:{start:{line:13,column:8},end:{line:13,column:54}},14:{start:{line:14,column:8},end:{line:14,column:61}},15:{start:{line:15,column:8},end:{line:15,column:62}},16:{start:{line:18,column:8},end:{line:24,column:9}},17:{start:{line:19,column:12},end:{line:19,column:111}},18:{start:{line:22,column:12},end:{line:23,column:54}},19:{start:{line:27,column:8},end:{line:27,column:72}},20:{start:{line:30,column:8},end:{line:30,column:70}},21:{start:{line:33,column:42},end:{line:33,column:50}},22:{start:{line:34,column:8},end:{line:44,column:9}},23:{start:{line:36,column:16},end:{line:36,column:53}},24:{start:{line:37,column:16},end:{line:37,column:22}},25:{start:{line:39,column:16},end:{line:39,column:54}},26:{start:{line:40,column:16},end:{line:40,column:67}},27:{start:{line:41,column:16},end:{line:41,column:22}},28:{start:{line:43,column:16},end:{line:43,column:22}},29:{start:{line:47,column:0},end:{line:49,column:21}},30:{start:{line:50,column:0},end:{line:50,column:44}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:2,column:46},end:{line:2,column:47}},loc:{start:{line:2,column:87},end:{line:7,column:1}},line:2},1:{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:18},end:{line:16,column:5}},line:12},2:{name:"(anonymous_2)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:47},end:{line:25,column:5}},line:17},3:{name:"(anonymous_3)",decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:38},end:{line:28,column:5}},line:26},4:{name:"(anonymous_4)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:38},end:{line:31,column:5}},line:29},5:{name:"(anonymous_5)",decl:{start:{line:32,column:4},end:{line:32,column:5}},loc:{start:{line:32,column:35},end:{line:45,column:5}},line:32}},branchMap:{0:{loc:{start:{line:2,column:17},end:{line:7,column:1}},type:"binary-expr",locations:[{start:{line:2,column:18},end:{line:2,column:22}},{start:{line:2,column:26},end:{line:2,column:41}},{start:{line:2,column:46},end:{line:7,column:1}}],line:2},1:{loc:{start:{line:3,column:34},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:42},end:{line:3,column:48}},{start:{line:3,column:51},end:{line:3,column:125}}],line:3},2:{loc:{start:{line:3,column:51},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:67},end:{line:3,column:118}},{start:{line:3,column:121},end:{line:3,column:125}}],line:3},3:{loc:{start:{line:4,column:4},end:{line:5,column:150}},type:"if",locations:[{start:{line:4,column:4},end:{line:5,column:150}},{start:{line:4,column:4},end:{line:5,column:150}}],line:4},4:{loc:{start:{line:4,column:8},end:{line:4,column:77}},type:"binary-expr",locations:[{start:{line:4,column:8},end:{line:4,column:35}},{start:{line:4,column:39},end:{line:4,column:77}}],line:4},5:{loc:{start:{line:5,column:58},end:{line:5,column:150}},type:"if",locations:[{start:{line:5,column:58},end:{line:5,column:150}},{start:{line:5,column:58},end:{line:5,column:150}}],line:5},6:{loc:{start:{line:5,column:85},end:{line:5,column:149}},type:"binary-expr",locations:[{start:{line:5,column:86},end:{line:5,column:143}},{start:{line:5,column:148},end:{line:5,column:149}}],line:5},7:{loc:{start:{line:5,column:86},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:94},end:{line:5,column:98}},{start:{line:5,column:101},end:{line:5,column:143}}],line:5},8:{loc:{start:{line:5,column:101},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:109},end:{line:5,column:126}},{start:{line:5,column:129},end:{line:5,column:143}}],line:5},9:{loc:{start:{line:6,column:11},end:{line:6,column:62}},type:"binary-expr",locations:[{start:{line:6,column:11},end:{line:6,column:16}},{start:{line:6,column:20},end:{line:6,column:21}},{start:{line:6,column:25},end:{line:6,column:62}}],line:6},10:{loc:{start:{line:18,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:24,column:9}},{start:{line:18,column:8},end:{line:24,column:9}}],line:18},11:{loc:{start:{line:27,column:15},end:{line:27,column:71}},type:"binary-expr",locations:[{start:{line:27,column:16},end:{line:27,column:25}},{start:{line:27,column:31},end:{line:27,column:70}}],line:27},12:{loc:{start:{line:30,column:15},end:{line:30,column:69}},type:"binary-expr",locations:[{start:{line:30,column:16},end:{line:30,column:24}},{start:{line:30,column:30},end:{line:30,column:68}}],line:30},13:{loc:{start:{line:34,column:8},end:{line:44,column:9}},type:"switch",locations:[{start:{line:35,column:12},end:{line:37,column:22}},{start:{line:38,column:12},end:{line:41,column:22}},{start:{line:42,column:12},end:{line:43,column:22}}],line:34}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0},f:{0:0,1:0,2:0,3:0,4:0,5:0},b:{0:[0,0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\SelectedInterval.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\SelectedInterval.ts"],names:[],mappings:";;;;;;;;;AAAA,2DAA0C;AAI1C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B;QACE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;IACxD,CAAC;IAEM,2BAA2B,CAAC,aAAuC;QACxE,IAAI,aAAa,CAAC,MAAM,KAAK,MAAM,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC;SACpG;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,aAAa,CAAC,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;kBACrF,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC;SACzC;IACH,CAAC;IAEO,uBAAuB,CAAC,QAAiB;QAC/C,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;IAClE,CAAC;IAEO,uBAAuB,CAAC,QAAiB;QAC/C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;IAChE,CAAC;IAEM,oBAAoB,CAAC,QAA6B;QACvD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,QAAQ,CAAC;QAE3C,QAAQ,IAAI,EAAE;YACZ,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACrC,MAAM;YACR,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,WAAW,GAAG,CAAC,IAAI,CAAC;gBACnD,MAAM;YACR;gBACE,MAAM;SACT;IACH,CAAC;CACF,CAAA;AAzCY,gBAAgB;IAD5B,4BAAQ;GACI,gBAAgB,CAyC5B;AAzCY,4CAAgB",sourcesContent:["import autobind from 'autobind-decorator';\r\nimport { IntervalDisplayData, RefreshIntervalPositions } from './types';\r\n\r\n@autobind\r\nexport class SelectedInterval {\r\n  readonly interval: HTMLDivElement;\r\n\r\n  constructor() {\r\n    this.interval = document.createElement('div');\r\n    this.interval.classList.add('goby-slider__interval');\r\n    this.interval.setAttribute('style', 'display: block');\r\n  }\r\n\r\n  public adjustPositionRelativeValue(dataToRefresh: RefreshIntervalPositions): void {\r\n    if (dataToRefresh.target === 'from') {\r\n      this.interval.style.left = `${Number(dataToRefresh.position) + (dataToRefresh.handleWidth / 2)}px`;\r\n    } else {\r\n      this.interval.style.right = `${dataToRefresh.sliderWidth - Number(dataToRefresh.position)\r\n        + (dataToRefresh.handleWidth / 2)}px`;\r\n    }\r\n  }\r\n\r\n  private checkIsIntervalNeedHide(isDouble: boolean): boolean {\r\n    return (!isDouble) && (this.interval.style.display === 'block');\r\n  }\r\n\r\n  private checkIsIntervalNeedShow(isDouble: boolean): boolean {\r\n    return (isDouble) && (this.interval.style.display === 'none');\r\n  }\r\n\r\n  public hideSelectedInterval(settings: IntervalDisplayData): void {\r\n    const { isDouble, handleWidth } = settings;\r\n\r\n    switch (true) {\r\n      case this.checkIsIntervalNeedHide(isDouble):\r\n        this.interval.style.display = 'none';\r\n        break;\r\n      case this.checkIsIntervalNeedShow(isDouble):\r\n        this.interval.style.display = 'block';\r\n        this.interval.style.right = `${handleWidth / 2}px`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r)),a=(C.s[0]++,C.b[0][0]++,this&&(C.b[0][1]++,this.__decorate)||(C.b[0][2]++,function(A,e,n,t){C.f[0]++;var l,s=(C.s[1]++,arguments.length),i=(C.s[2]++,s<3?(C.b[1][0]++,e):(C.b[1][1]++,null===t?(C.b[2][0]++,t=Object.getOwnPropertyDescriptor(e,n)):(C.b[2][1]++,t)));if(C.s[3]++,C.b[4][0]++,"object"==typeof Reflect&&(C.b[4][1]++,"function"==typeof Reflect.decorate))C.b[3][0]++,C.s[4]++,i=Reflect.decorate(A,e,n,t);else{C.b[3][1]++,C.s[5]++;for(var r=A.length-1;r>=0;r--)C.s[6]++,(l=A[r])?(C.b[5][0]++,C.s[7]++,C.b[6][0]++,i=(s<3?(C.b[7][0]++,l(i)):(C.b[7][1]++,s>3?(C.b[8][0]++,l(e,n,i)):(C.b[8][1]++,l(e,n))))||(C.b[6][1]++,i)):C.b[5][1]++}return C.s[8]++,C.b[9][0]++,s>3&&(C.b[9][1]++,i)&&(C.b[9][2]++,Object.defineProperty(e,n,i)),i}));C.s[9]++,Object.defineProperty(e,"__esModule",{value:!0}),C.s[10]++,e.SelectedInterval=void 0;const u=(C.s[11]++,n("./node_modules/autobind-decorator/lib/esm/index.js"));C.s[12]++;let c=class{constructor(){C.f[1]++,C.s[13]++,this.interval=document.createElement("div"),C.s[14]++,this.interval.classList.add("goby-slider__interval"),C.s[15]++,this.interval.setAttribute("style","display: block")}adjustPositionRelativeValue(A){C.f[2]++,C.s[16]++,"from"===A.target?(C.b[10][0]++,C.s[17]++,this.interval.style.left=`${Number(A.position)+A.handleWidth/2}px`):(C.b[10][1]++,C.s[18]++,this.interval.style.right=A.sliderWidth-Number(A.position)+A.handleWidth/2+"px")}checkIsIntervalNeedHide(A){return C.f[3]++,C.s[19]++,C.b[11][0]++,!A&&(C.b[11][1]++,"block"===this.interval.style.display)}checkIsIntervalNeedShow(A){return C.f[4]++,C.s[20]++,C.b[12][0]++,A&&(C.b[12][1]++,"none"===this.interval.style.display)}hideSelectedInterval(A){C.f[5]++;const{isDouble:e,handleWidth:n}=(C.s[21]++,A);switch(C.s[22]++,!0){case this.checkIsIntervalNeedHide(e):C.b[13][0]++,C.s[23]++,this.interval.style.display="none",C.s[24]++;break;case this.checkIsIntervalNeedShow(e):C.b[13][1]++,C.s[25]++,this.interval.style.display="block",C.s[26]++,this.interval.style.right=n/2+"px",C.s[27]++;break;default:C.b[13][2]++,C.s[28]++}}};C.s[29]++,c=a([u.default],c),C.s[30]++,e.SelectedInterval=c},"./src/plugin/View/SelectedInterval/selectedInterval.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\selectedInterval.test.ts",l="23e22459f0cb9090d2c2a6b4e7e4767e56dd7df7",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\selectedInterval.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:27},end:{line:3,column:56}},2:{start:{line:4,column:0},end:{line:37,column:3}},3:{start:{line:6,column:4},end:{line:8,column:7}},4:{start:{line:7,column:8},end:{line:7,column:61}},5:{start:{line:9,column:4},end:{line:11,column:7}},6:{start:{line:10,column:8},end:{line:10,column:38}},7:{start:{line:12,column:4},end:{line:20,column:7}},8:{start:{line:13,column:8},end:{line:18,column:11}},9:{start:{line:19,column:8},end:{line:19,column:61}},10:{start:{line:21,column:4},end:{line:29,column:7}},11:{start:{line:22,column:8},end:{line:27,column:11}},12:{start:{line:28,column:8},end:{line:28,column:62}},13:{start:{line:30,column:4},end:{line:36,column:7}},14:{start:{line:31,column:8},end:{line:31,column:76}},15:{start:{line:32,column:8},end:{line:32,column:64}},16:{start:{line:33,column:8},end:{line:33,column:75}},17:{start:{line:34,column:8},end:{line:34,column:65}},18:{start:{line:35,column:8},end:{line:35,column:62}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:29},end:{line:4,column:30}},loc:{start:{line:4,column:35},end:{line:37,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:21},end:{line:8,column:5}},line:6},2:{name:"(anonymous_2)",decl:{start:{line:9,column:34},end:{line:9,column:35}},loc:{start:{line:9,column:40},end:{line:11,column:5}},line:9},3:{name:"(anonymous_3)",decl:{start:{line:12,column:80},end:{line:12,column:81}},loc:{start:{line:12,column:86},end:{line:20,column:5}},line:12},4:{name:"(anonymous_4)",decl:{start:{line:21,column:81},end:{line:21,column:82}},loc:{start:{line:21,column:87},end:{line:29,column:5}},line:21},5:{name:"(anonymous_5)",decl:{start:{line:30,column:73},end:{line:30,column:74}},loc:{start:{line:30,column:79},end:{line:36,column:5}},line:30}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0},f:{0:0,1:0,2:0,3:0,4:0,5:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\selectedInterval.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\selectedInterval.test.ts"],names:[],mappings:";;AAAA,yDAAsD;AAEtD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,QAA0B,CAAC;IAE/B,UAAU,CAAC,GAAG,EAAE;QACd,QAAQ,GAAG,IAAI,mCAAgB,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;QAC/E,QAAQ,CAAC,2BAA2B,CAAC;YACnC,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,GAAG;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,GAAG,EAAE;QAChF,QAAQ,CAAC,2BAA2B,CAAC;YACnC,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,GAAG;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,QAAQ,CAAC,oBAAoB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxD,QAAQ,CAAC,oBAAoB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;QACnE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { SelectedInterval } from './SelectedInterval';\r\n\r\ndescribe('SelectedInterval', () => {\r\n  let interval: SelectedInterval;\r\n\r\n  beforeEach(() => {\r\n    interval = new SelectedInterval();\r\n  });\r\n\r\n  it('Interval cal be created', () => {\r\n    expect(interval).toBeTruthy();\r\n  });\r\n\r\n  it('adjustPositionRelativeValue() adjust position correctly for left side', () => {\r\n    interval.adjustPositionRelativeValue({\r\n      target: 'from',\r\n      position: '50',\r\n      handleWidth: 20,\r\n      sliderWidth: 120,\r\n    });\r\n    expect(interval.interval.style.left).toEqual('60px');\r\n  });\r\n\r\n  it('adjustPositionRelativeValue() adjust position correctly for right side', () => {\r\n    interval.adjustPositionRelativeValue({\r\n      target: 'to',\r\n      position: '50',\r\n      handleWidth: 20,\r\n      sliderWidth: 100,\r\n    });\r\n    expect(interval.interval.style.right).toEqual('60px');\r\n  });\r\n\r\n  it('hideSelectedInterval() operates the display function correctly', () => {\r\n    interval.hideSelectedInterval({ isDouble: false, handleWidth: 20 });\r\n    expect(interval.interval.style.display).toEqual('none');\r\n    interval.hideSelectedInterval({ isDouble: true, handleWidth: 20 });\r\n    expect(interval.interval.style.display).toEqual('block');\r\n    expect(interval.interval.style.right).toEqual('10px');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/SelectedInterval/SelectedInterval.ts"));C.s[2]++,describe("SelectedInterval",(()=>{let A;C.f[0]++,C.s[3]++,beforeEach((()=>{C.f[1]++,C.s[4]++,A=new a.SelectedInterval})),C.s[5]++,it("Interval cal be created",(()=>{C.f[2]++,C.s[6]++,expect(A).toBeTruthy()})),C.s[7]++,it("adjustPositionRelativeValue() adjust position correctly for left side",(()=>{C.f[3]++,C.s[8]++,A.adjustPositionRelativeValue({target:"from",position:"50",handleWidth:20,sliderWidth:120}),C.s[9]++,expect(A.interval.style.left).toEqual("60px")})),C.s[10]++,it("adjustPositionRelativeValue() adjust position correctly for right side",(()=>{C.f[4]++,C.s[11]++,A.adjustPositionRelativeValue({target:"to",position:"50",handleWidth:20,sliderWidth:100}),C.s[12]++,expect(A.interval.style.right).toEqual("60px")})),C.s[13]++,it("hideSelectedInterval() operates the display function correctly",(()=>{C.f[5]++,C.s[14]++,A.hideSelectedInterval({isDouble:!1,handleWidth:20}),C.s[15]++,expect(A.interval.style.display).toEqual("none"),C.s[16]++,A.hideSelectedInterval({isDouble:!0,handleWidth:20}),C.s[17]++,expect(A.interval.style.display).toEqual("block"),C.s[18]++,expect(A.interval.style.right).toEqual("10px")}))}))},"./src/plugin/View/SelectedInterval/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\types.ts",t="f39bc090921aa46e9d41caf071c43c3f0439567d",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SelectedInterval\\types.ts"],names:[],mappings:"",sourcesContent:["type RefreshIntervalPositions = {\r\n  target: 'from' | 'to';\r\n  position: string;\r\n  sliderWidth: number;\r\n  handleWidth: number;\r\n};\r\n\r\ntype IntervalDisplayData = {\r\n  isDouble: boolean,\r\n  handleWidth: number\r\n};\r\n\r\nexport {\r\n  RefreshIntervalPositions,\r\n  IntervalDisplayData,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/SideMenu/SideMenu.ts":(A,e)=>{"use strict";var n,t,l,s,i,r,o=(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\SideMenu.ts",t="3f2bf1a4e461da84cfae0036b5bd93a48e927dad",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\SideMenu.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:0},end:{line:3,column:26}},2:{start:{line:6,column:8},end:{line:6,column:36}},3:{start:{line:7,column:8},end:{line:7,column:35}},4:{start:{line:8,column:8},end:{line:8,column:34}},5:{start:{line:11,column:8},end:{line:14,column:11}},6:{start:{line:15,column:8},end:{line:19,column:11}},7:{start:{line:20,column:8},end:{line:23,column:11}},8:{start:{line:24,column:8},end:{line:28,column:11}},9:{start:{line:31,column:8},end:{line:34,column:11}},10:{start:{line:35,column:8},end:{line:38,column:11}},11:{start:{line:39,column:8},end:{line:42,column:11}},12:{start:{line:43,column:8},end:{line:47,column:11}},13:{start:{line:48,column:8},end:{line:52,column:11}},14:{start:{line:53,column:8},end:{line:57,column:11}},15:{start:{line:58,column:8},end:{line:62,column:11}},16:{start:{line:63,column:8},end:{line:68,column:11}},17:{start:{line:69,column:8},end:{line:72,column:11}},18:{start:{line:73,column:8},end:{line:76,column:11}},19:{start:{line:77,column:8},end:{line:80,column:11}},20:{start:{line:81,column:8},end:{line:84,column:11}},21:{start:{line:85,column:29},end:{line:85,column:78}},22:{start:{line:86,column:8},end:{line:86,column:83}},23:{start:{line:87,column:8},end:{line:87,column:81}},24:{start:{line:88,column:8},end:{line:88,column:76}},25:{start:{line:89,column:8},end:{line:89,column:78}},26:{start:{line:92,column:8},end:{line:96,column:11}},27:{start:{line:97,column:8},end:{line:101,column:11}},28:{start:{line:102,column:8},end:{line:106,column:11}},29:{start:{line:107,column:8},end:{line:111,column:11}},30:{start:{line:112,column:8},end:{line:116,column:11}},31:{start:{line:117,column:8},end:{line:121,column:11}},32:{start:{line:124,column:8},end:{line:128,column:11}},33:{start:{line:129,column:8},end:{line:133,column:11}},34:{start:{line:134,column:29},end:{line:134,column:71}},35:{start:{line:135,column:8},end:{line:135,column:76}},36:{start:{line:136,column:8},end:{line:136,column:74}},37:{start:{line:137,column:8},end:{line:137,column:71}},38:{start:{line:138,column:8},end:{line:141,column:11}},39:{start:{line:142,column:8},end:{line:145,column:11}},40:{start:{line:146,column:8},end:{line:149,column:11}},41:{start:{line:150,column:8},end:{line:153,column:11}},42:{start:{line:154,column:8},end:{line:158,column:11}},43:{start:{line:159,column:8},end:{line:162,column:11}},44:{start:{line:165,column:8},end:{line:169,column:11}},45:{start:{line:170,column:8},end:{line:174,column:11}},46:{start:{line:175,column:8},end:{line:179,column:11}},47:{start:{line:180,column:8},end:{line:184,column:11}},48:{start:{line:187,column:8},end:{line:187,column:29}},49:{start:{line:188,column:8},end:{line:188,column:30}},50:{start:{line:189,column:8},end:{line:189,column:28}},51:{start:{line:190,column:8},end:{line:190,column:29}},52:{start:{line:191,column:8},end:{line:191,column:32}},53:{start:{line:192,column:8},end:{line:195,column:11}},54:{start:{line:198,column:24},end:{line:198,column:66}},55:{start:{line:199,column:8},end:{line:201,column:11}},56:{start:{line:200,column:12},end:{line:200,column:44}},57:{start:{line:202,column:8},end:{line:203,column:53}},58:{start:{line:203,column:12},end:{line:203,column:53}},59:{start:{line:204,column:8},end:{line:205,column:84}},60:{start:{line:205,column:12},end:{line:205,column:84}},61:{start:{line:206,column:8},end:{line:206,column:23}},62:{start:{line:209,column:8},end:{line:209,column:170}},63:{start:{line:212,column:8},end:{line:212,column:87}},64:{start:{line:213,column:8},end:{line:213,column:83}},65:{start:{line:214,column:8},end:{line:214,column:87}},66:{start:{line:215,column:8},end:{line:215,column:89}},67:{start:{line:216,column:8},end:{line:216,column:89}},68:{start:{line:217,column:8},end:{line:217,column:284}},69:{start:{line:220,column:8},end:{line:220,column:123}},70:{start:{line:221,column:8},end:{line:221,column:127}},71:{start:{line:224,column:8},end:{line:224,column:153}},72:{start:{line:225,column:8},end:{line:225,column:151}},73:{start:{line:228,column:8},end:{line:228,column:147}},74:{start:{line:229,column:8},end:{line:229,column:145}},75:{start:{line:232,column:8},end:{line:232,column:132}},76:{start:{line:233,column:8},end:{line:233,column:130}},77:{start:{line:236,column:8},end:{line:236,column:138}},78:{start:{line:237,column:8},end:{line:237,column:136}},79:{start:{line:240,column:8},end:{line:240,column:28}},80:{start:{line:241,column:8},end:{line:241,column:39}},81:{start:{line:242,column:8},end:{line:242,column:29}},82:{start:{line:243,column:8},end:{line:243,column:40}},83:{start:{line:244,column:8},end:{line:244,column:38}},84:{start:{line:245,column:8},end:{line:245,column:32}},85:{start:{line:246,column:8},end:{line:246,column:34}},86:{start:{line:247,column:8},end:{line:247,column:326}},87:{start:{line:250,column:30},end:{line:250,column:75}},88:{start:{line:251,column:35},end:{line:251,column:102}},89:{start:{line:251,column:47},end:{line:251,column:101}},90:{start:{line:252,column:8},end:{line:269,column:9}},91:{start:{line:254,column:16},end:{line:254,column:95}},92:{start:{line:255,column:16},end:{line:255,column:94}},93:{start:{line:256,column:16},end:{line:256,column:22}},94:{start:{line:258,column:16},end:{line:258,column:101}},95:{start:{line:259,column:16},end:{line:259,column:92}},96:{start:{line:260,column:16},end:{line:260,column:22}},97:{start:{line:262,column:16},end:{line:262,column:77}},98:{start:{line:263,column:16},end:{line:263,column:22}},99:{start:{line:265,column:16},end:{line:265,column:77}},100:{start:{line:266,column:16},end:{line:266,column:22}},101:{start:{line:268,column:16},end:{line:268,column:22}},102:{start:{line:270,column:8},end:{line:270,column:36}},103:{start:{line:273,column:30},end:{line:276,column:9}},104:{start:{line:274,column:12},end:{line:274,column:71}},105:{start:{line:275,column:12},end:{line:275,column:66}},106:{start:{line:277,column:8},end:{line:282,column:9}},107:{start:{line:278,column:12},end:{line:278,column:42}},108:{start:{line:281,column:12},end:{line:281,column:45}},109:{start:{line:285,column:0},end:{line:285,column:28}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:18},end:{line:9,column:5}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:20},end:{line:29,column:5}},line:10},2:{name:"(anonymous_2)",decl:{start:{line:30,column:4},end:{line:30,column:5}},loc:{start:{line:30,column:21},end:{line:90,column:5}},line:30},3:{name:"(anonymous_3)",decl:{start:{line:91,column:4},end:{line:91,column:5}},loc:{start:{line:91,column:19},end:{line:122,column:5}},line:91},4:{name:"(anonymous_4)",decl:{start:{line:123,column:4},end:{line:123,column:5}},loc:{start:{line:123,column:20},end:{line:163,column:5}},line:123},5:{name:"(anonymous_5)",decl:{start:{line:164,column:4},end:{line:164,column:5}},loc:{start:{line:164,column:23},end:{line:185,column:5}},line:164},6:{name:"(anonymous_6)",decl:{start:{line:186,column:4},end:{line:186,column:5}},loc:{start:{line:186,column:25},end:{line:196,column:5}},line:186},7:{name:"(anonymous_7)",decl:{start:{line:197,column:4},end:{line:197,column:5}},loc:{start:{line:197,column:40},end:{line:207,column:5}},line:197},8:{name:"(anonymous_8)",decl:{start:{line:199,column:41},end:{line:199,column:42}},loc:{start:{line:199,column:55},end:{line:201,column:9}},line:199},9:{name:"(anonymous_9)",decl:{start:{line:208,column:4},end:{line:208,column:5}},loc:{start:{line:208,column:19},end:{line:210,column:5}},line:208},10:{name:"(anonymous_10)",decl:{start:{line:211,column:4},end:{line:211,column:5}},loc:{start:{line:211,column:30},end:{line:218,column:5}},line:211},11:{name:"(anonymous_11)",decl:{start:{line:219,column:4},end:{line:219,column:5}},loc:{start:{line:219,column:20},end:{line:222,column:5}},line:219},12:{name:"(anonymous_12)",decl:{start:{line:223,column:4},end:{line:223,column:5}},loc:{start:{line:223,column:31},end:{line:226,column:5}},line:223},13:{name:"(anonymous_13)",decl:{start:{line:227,column:4},end:{line:227,column:5}},loc:{start:{line:227,column:29},end:{line:230,column:5}},line:227},14:{name:"(anonymous_14)",decl:{start:{line:231,column:4},end:{line:231,column:5}},loc:{start:{line:231,column:23},end:{line:234,column:5}},line:231},15:{name:"(anonymous_15)",decl:{start:{line:235,column:4},end:{line:235,column:5}},loc:{start:{line:235,column:25},end:{line:238,column:5}},line:235},16:{name:"(anonymous_16)",decl:{start:{line:239,column:4},end:{line:239,column:5}},loc:{start:{line:239,column:22},end:{line:248,column:5}},line:239},17:{name:"(anonymous_17)",decl:{start:{line:249,column:4},end:{line:249,column:5}},loc:{start:{line:249,column:31},end:{line:271,column:5}},line:249},18:{name:"(anonymous_18)",decl:{start:{line:251,column:35},end:{line:251,column:36}},loc:{start:{line:251,column:47},end:{line:251,column:101}},line:251},19:{name:"(anonymous_19)",decl:{start:{line:272,column:4},end:{line:272,column:5}},loc:{start:{line:272,column:33},end:{line:283,column:5}},line:272},20:{name:"(anonymous_20)",decl:{start:{line:273,column:30},end:{line:273,column:31}},loc:{start:{line:273,column:49},end:{line:276,column:9}},line:273}},branchMap:{0:{loc:{start:{line:202,column:8},end:{line:203,column:53}},type:"if",locations:[{start:{line:202,column:8},end:{line:203,column:53}},{start:{line:202,column:8},end:{line:203,column:53}}],line:202},1:{loc:{start:{line:204,column:8},end:{line:205,column:84}},type:"if",locations:[{start:{line:204,column:8},end:{line:205,column:84}},{start:{line:204,column:8},end:{line:205,column:84}}],line:204},2:{loc:{start:{line:250,column:30},end:{line:250,column:75}},type:"binary-expr",locations:[{start:{line:250,column:30},end:{line:250,column:51}},{start:{line:250,column:55},end:{line:250,column:75}}],line:250},3:{loc:{start:{line:251,column:47},end:{line:251,column:101}},type:"cond-expr",locations:[{start:{line:251,column:63},end:{line:251,column:93}},{start:{line:251,column:96},end:{line:251,column:101}}],line:251},4:{loc:{start:{line:252,column:8},end:{line:269,column:9}},type:"switch",locations:[{start:{line:253,column:12},end:{line:256,column:22}},{start:{line:257,column:12},end:{line:260,column:22}},{start:{line:261,column:12},end:{line:263,column:22}},{start:{line:264,column:12},end:{line:266,column:22}},{start:{line:267,column:12},end:{line:268,column:22}}],line:252},5:{loc:{start:{line:277,column:8},end:{line:282,column:9}},type:"if",locations:[{start:{line:277,column:8},end:{line:282,column:9}},{start:{line:277,column:8},end:{line:282,column:9}}],line:277}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0,0,0,0],5:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\SideMenu.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\SideMenu.ts"],names:[],mappings:"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",sourcesContent:["import { RefreshData } from '../types';\r\nimport { ElementParams, SideMenuElements } from './types';\r\n\r\nexport class SideMenu {\r\n  readonly sideMenuElements: SideMenuElements;\r\n\r\n  public isInputChanges = false;\r\n\r\n  constructor() {\r\n    this.sideMenuElements = {};\r\n    this.initializeSideMenu();\r\n  }\r\n\r\n  private createOutputs(): void {\r\n    this.sideMenuElements.currentValuesWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n    this.sideMenuElements.currentValuesObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Текущее занчение: ',\r\n    }) as HTMLSpanElement;\r\n    this.sideMenuElements.fromOutput = SideMenu.createElement({\r\n      name: 'output',\r\n      cssClasses: ['goby-side-menu__value', 'goby-side-menu__value_type_from'],\r\n    }) as HTMLOutputElement;\r\n    this.sideMenuElements.toOutput = SideMenu.createElement({\r\n      name: 'output',\r\n      cssClasses: ['goby-side-menu__value', 'goby-side-menu__value_type_to'],\r\n      attr: { name: 'style', value: 'display: inline' },\r\n    }) as HTMLOutputElement;\r\n  }\r\n\r\n  private createWrappers(): void {\r\n    this.sideMenuElements.toWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    this.sideMenuElements.toToggleWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__item-toggle-wrapper'],\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.inputWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    this.sideMenuElements.fromInputWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__input-wrapper'],\r\n      text: 'От: ',\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.stepInputWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__input-wrapper'],\r\n      text: 'Шаг: ',\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.minInputWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__input-wrapper'],\r\n      text: 'Мин: ',\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.maxInputWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__input-wrapper'],\r\n      text: 'Макс: ',\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.toInputWrapper = SideMenu.createElement({\r\n      name: 'label',\r\n      cssClasses: ['goby-side-menu__input-wrapper'],\r\n      text: 'До: ',\r\n      attr: { name: 'style', value: 'display: block' },\r\n    }) as HTMLLabelElement;\r\n\r\n    this.sideMenuElements.handleValuesWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    this.sideMenuElements.valueScaleWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    this.sideMenuElements.planeWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    this.sideMenuElements.integerWrapper = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu__item-wrapper'],\r\n    }) as HTMLDivElement;\r\n\r\n    const labelElement: Node = this.sideMenuElements.toToggleWrapper.cloneNode();\r\n    this.sideMenuElements.handleValuesToggleWrapper = labelElement.cloneNode() as HTMLLabelElement;\r\n    this.sideMenuElements.valueScaleToggleWrapper = labelElement.cloneNode() as HTMLLabelElement;\r\n    this.sideMenuElements.planeToggleWrapper = labelElement.cloneNode() as HTMLLabelElement;\r\n    this.sideMenuElements.integerToggleWrapper = labelElement.cloneNode() as HTMLLabelElement;\r\n  }\r\n\r\n  private createInputs(): void {\r\n    this.sideMenuElements.inputObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Изменить значение: ',\r\n    }) as HTMLSpanElement;\r\n    this.sideMenuElements.fromInput = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__input'],\r\n      attr: { name: 'type', value: 'number' },\r\n    }) as HTMLInputElement;\r\n    this.sideMenuElements.toInput = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__input'],\r\n      attr: { name: 'type', value: 'number' },\r\n    }) as HTMLInputElement;\r\n    this.sideMenuElements.stepInput = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__input'],\r\n      attr: { name: 'type', value: 'number' },\r\n    }) as HTMLInputElement;\r\n    this.sideMenuElements.minimumInput = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__input'],\r\n      attr: { name: 'type', value: 'number' },\r\n    }) as HTMLInputElement;\r\n    this.sideMenuElements.maximumInput = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__input'],\r\n      attr: { name: 'type', value: 'number' },\r\n    }) as HTMLInputElement;\r\n  }\r\n\r\n  private createToggles():void {\r\n    this.sideMenuElements.toToggleObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Включить второй ползунок: ',\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.toToggle = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__item-toggle'],\r\n      attr: { name: 'type', value: 'checkbox' },\r\n    }) as HTMLInputElement;\r\n    const inputElement: Node = this.sideMenuElements!.toToggle!.cloneNode();\r\n    this.sideMenuElements.handleValuesToggle = inputElement.cloneNode() as HTMLInputElement;\r\n    this.sideMenuElements.valueScaleToggle = inputElement.cloneNode() as HTMLInputElement;\r\n    this.sideMenuElements.integerToggle = inputElement.cloneNode() as HTMLInputElement;\r\n\r\n    this.sideMenuElements.toToggleBorder = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-toggle-border'],\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.handleValuesToggleBorder = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-toggle-border'],\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.valueScaleToggleBorder = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-toggle-border'],\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.integerToggleBorder = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-toggle-border'],\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.planeToggle = SideMenu.createElement({\r\n      name: 'input',\r\n      cssClasses: ['goby-side-menu__item-toggle'],\r\n      attr: { name: 'type', value: 'checkbox' },\r\n    }) as HTMLInputElement;\r\n\r\n    this.sideMenuElements.planeToggleBorder = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-toggle-border'],\r\n    }) as HTMLSpanElement;\r\n  }\r\n\r\n  private createObjectives(): void {\r\n    this.sideMenuElements.handleValuesObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Включить значения под ползунками: ',\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.valueScaleObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Включить шкалу значений: ',\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.planeObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Изменить плоскость: ',\r\n    }) as HTMLSpanElement;\r\n\r\n    this.sideMenuElements.integerObjective = SideMenu.createElement({\r\n      name: 'span',\r\n      cssClasses: ['goby-side-menu__item-objective'],\r\n      text: 'Только целые числа: ',\r\n    }) as HTMLSpanElement;\r\n  }\r\n\r\n  private initializeSideMenu(): void {\r\n    this.createOutputs();\r\n    this.createWrappers();\r\n    this.createInputs();\r\n    this.createToggles();\r\n    this.createObjectives();\r\n\r\n    this.sideMenuElements.sideMenuContainer = SideMenu.createElement({\r\n      name: 'div',\r\n      cssClasses: ['goby-side-menu'],\r\n    }) as HTMLDivElement;\r\n  }\r\n\r\n  private static createElement(elementParams: ElementParams): HTMLSpanElement {\r\n    const element: HTMLElement = document.createElement(elementParams.name);\r\n\r\n    elementParams.cssClasses.forEach((cssClass: string): void => {\r\n      element.classList.add(cssClass);\r\n    });\r\n\r\n    if (elementParams.text) element.textContent = elementParams.text;\r\n    if (elementParams.attr) element.setAttribute(elementParams.attr.name, elementParams.attr.value);\r\n\r\n    return element;\r\n  }\r\n\r\n  private wrapsOutputs(): void {\r\n    this.sideMenuElements.currentValuesWrapper!.append(\r\n      this.sideMenuElements.currentValuesObjective!,\r\n      this.sideMenuElements.fromOutput!,\r\n      this.sideMenuElements.toOutput!,\r\n    );\r\n  }\r\n\r\n  private wrapsElementsInWrappers(): void {\r\n    this.sideMenuElements.fromInputWrapper!.append(this.sideMenuElements.fromInput!);\r\n    this.sideMenuElements.toInputWrapper!.append(this.sideMenuElements.toInput!);\r\n    this.sideMenuElements.stepInputWrapper!.append(this.sideMenuElements.stepInput!);\r\n    this.sideMenuElements.minInputWrapper!.append(this.sideMenuElements.minimumInput!);\r\n    this.sideMenuElements.maxInputWrapper!.append(this.sideMenuElements.maximumInput!);\r\n    this.sideMenuElements.inputWrapper!.append(\r\n      this.sideMenuElements.inputObjective!,\r\n      this.sideMenuElements.fromInputWrapper!,\r\n      this.sideMenuElements.toInputWrapper!,\r\n      this.sideMenuElements.stepInputWrapper!,\r\n      this.sideMenuElements.minInputWrapper!,\r\n      this.sideMenuElements.maxInputWrapper!,\r\n    );\r\n  }\r\n\r\n  private wrapsToToggle(): void {\r\n    this.sideMenuElements.toToggleWrapper!.append(\r\n      this.sideMenuElements.toToggle!,\r\n      this.sideMenuElements.toToggleBorder!,\r\n    );\r\n    this.sideMenuElements.toWrapper!.append(\r\n      this.sideMenuElements.toToggleObjective!,\r\n      this.sideMenuElements.toToggleWrapper!,\r\n    );\r\n  }\r\n\r\n  private wrapsHandlesValuesToggle(): void {\r\n    this.sideMenuElements.handleValuesToggleWrapper!.append(\r\n      this.sideMenuElements.handleValuesToggle!,\r\n      this.sideMenuElements.handleValuesToggleBorder!,\r\n    );\r\n    this.sideMenuElements.handleValuesWrapper!.append(\r\n      this.sideMenuElements.handleValuesObjective!,\r\n      this.sideMenuElements.handleValuesToggleWrapper!,\r\n    );\r\n  }\r\n\r\n  private wrapsValuesScaleToggle(): void {\r\n    this.sideMenuElements.valueScaleToggleWrapper!.append(\r\n      this.sideMenuElements.valueScaleToggle!,\r\n      this.sideMenuElements.valueScaleToggleBorder!,\r\n    );\r\n    this.sideMenuElements.valueScaleWrapper!.append(\r\n      this.sideMenuElements.valueScaleObjective!,\r\n      this.sideMenuElements.valueScaleToggleWrapper!,\r\n    );\r\n  }\r\n\r\n  private wrapsPlaneToggle(): void {\r\n    this.sideMenuElements.planeToggleWrapper!.append(\r\n      this.sideMenuElements.planeToggle!,\r\n      this.sideMenuElements.planeToggleBorder!,\r\n    );\r\n    this.sideMenuElements.planeWrapper!.append(\r\n      this.sideMenuElements.planeObjective!,\r\n      this.sideMenuElements.planeToggleWrapper!,\r\n    );\r\n  }\r\n\r\n  private wrapsIntegerToggle(): void {\r\n    this.sideMenuElements.integerToggleWrapper!.append(\r\n      this.sideMenuElements.integerToggle!,\r\n      this.sideMenuElements.integerToggleBorder!,\r\n    );\r\n    this.sideMenuElements.integerWrapper!.append(\r\n      this.sideMenuElements.integerObjective!,\r\n      this.sideMenuElements.integerToggleWrapper!,\r\n    );\r\n  }\r\n\r\n  public collectSideMenu(): void {\r\n    this.wrapsOutputs();\r\n    this.wrapsElementsInWrappers();\r\n    this.wrapsToToggle();\r\n    this.wrapsHandlesValuesToggle();\r\n    this.wrapsValuesScaleToggle();\r\n    this.wrapsPlaneToggle();\r\n    this.wrapsIntegerToggle();\r\n\r\n    this.sideMenuElements.sideMenuContainer!.append(\r\n      this.sideMenuElements.currentValuesWrapper!,\r\n      this.sideMenuElements.inputWrapper!,\r\n      this.sideMenuElements.toWrapper!,\r\n      this.sideMenuElements.handleValuesWrapper!,\r\n      this.sideMenuElements.valueScaleWrapper!,\r\n      this.sideMenuElements.planeWrapper!,\r\n      this.sideMenuElements.integerWrapper!,\r\n    );\r\n  }\r\n\r\n  public refreshValues(refreshData: RefreshData): void {\r\n    const isRoundUpNeed = refreshData.isToFixed && !this.isInputChanges;\r\n    const bringsValuesToForm = (value: string): string => (\r\n      isRoundUpNeed ? `${Math.round(Number(value))}` : value\r\n    );\r\n\r\n    switch (refreshData.target) {\r\n      case 'from':\r\n        this.sideMenuElements.fromOutput!.value = bringsValuesToForm(refreshData.value);\r\n        this.sideMenuElements.fromInput!.value = bringsValuesToForm(refreshData.value);\r\n        break;\r\n      case 'to':\r\n        this.sideMenuElements.toOutput!.value = ` - ${bringsValuesToForm(refreshData.value)}`;\r\n        this.sideMenuElements.toInput!.value = bringsValuesToForm(refreshData.value);\r\n        break;\r\n      case 'min':\r\n        this.sideMenuElements.minimumInput!.value = refreshData.value;\r\n        break;\r\n      case 'max':\r\n        this.sideMenuElements.maximumInput!.value = refreshData.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.isInputChanges = false;\r\n  }\r\n\r\n  public hideToValues(isHideToValues: boolean): void {\r\n    const changeDisplay = (input: string, output: string): void => {\r\n      this.sideMenuElements.toInputWrapper!.style.display = input;\r\n      this.sideMenuElements.toOutput!.style.display = output;\r\n    };\r\n\r\n    if (!isHideToValues) {\r\n      changeDisplay('none', 'none');\r\n    } else {\r\n      changeDisplay('block', 'inline');\r\n    }\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i));o.s[0]++,Object.defineProperty(e,"__esModule",{value:!0}),o.s[1]++,e.SideMenu=void 0;class C{constructor(){o.f[0]++,o.s[2]++,this.isInputChanges=!1,o.s[3]++,this.sideMenuElements={},o.s[4]++,this.initializeSideMenu()}createOutputs(){o.f[1]++,o.s[5]++,this.sideMenuElements.currentValuesWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[6]++,this.sideMenuElements.currentValuesObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Текущее занчение: "}),o.s[7]++,this.sideMenuElements.fromOutput=C.createElement({name:"output",cssClasses:["goby-side-menu__value","goby-side-menu__value_type_from"]}),o.s[8]++,this.sideMenuElements.toOutput=C.createElement({name:"output",cssClasses:["goby-side-menu__value","goby-side-menu__value_type_to"],attr:{name:"style",value:"display: inline"}})}createWrappers(){o.f[2]++,o.s[9]++,this.sideMenuElements.toWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[10]++,this.sideMenuElements.toToggleWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__item-toggle-wrapper"]}),o.s[11]++,this.sideMenuElements.inputWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[12]++,this.sideMenuElements.fromInputWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__input-wrapper"],text:"От: "}),o.s[13]++,this.sideMenuElements.stepInputWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__input-wrapper"],text:"Шаг: "}),o.s[14]++,this.sideMenuElements.minInputWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__input-wrapper"],text:"Мин: "}),o.s[15]++,this.sideMenuElements.maxInputWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__input-wrapper"],text:"Макс: "}),o.s[16]++,this.sideMenuElements.toInputWrapper=C.createElement({name:"label",cssClasses:["goby-side-menu__input-wrapper"],text:"До: ",attr:{name:"style",value:"display: block"}}),o.s[17]++,this.sideMenuElements.handleValuesWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[18]++,this.sideMenuElements.valueScaleWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[19]++,this.sideMenuElements.planeWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]}),o.s[20]++,this.sideMenuElements.integerWrapper=C.createElement({name:"div",cssClasses:["goby-side-menu__item-wrapper"]});const A=(o.s[21]++,this.sideMenuElements.toToggleWrapper.cloneNode());o.s[22]++,this.sideMenuElements.handleValuesToggleWrapper=A.cloneNode(),o.s[23]++,this.sideMenuElements.valueScaleToggleWrapper=A.cloneNode(),o.s[24]++,this.sideMenuElements.planeToggleWrapper=A.cloneNode(),o.s[25]++,this.sideMenuElements.integerToggleWrapper=A.cloneNode()}createInputs(){o.f[3]++,o.s[26]++,this.sideMenuElements.inputObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Изменить значение: "}),o.s[27]++,this.sideMenuElements.fromInput=C.createElement({name:"input",cssClasses:["goby-side-menu__input"],attr:{name:"type",value:"number"}}),o.s[28]++,this.sideMenuElements.toInput=C.createElement({name:"input",cssClasses:["goby-side-menu__input"],attr:{name:"type",value:"number"}}),o.s[29]++,this.sideMenuElements.stepInput=C.createElement({name:"input",cssClasses:["goby-side-menu__input"],attr:{name:"type",value:"number"}}),o.s[30]++,this.sideMenuElements.minimumInput=C.createElement({name:"input",cssClasses:["goby-side-menu__input"],attr:{name:"type",value:"number"}}),o.s[31]++,this.sideMenuElements.maximumInput=C.createElement({name:"input",cssClasses:["goby-side-menu__input"],attr:{name:"type",value:"number"}})}createToggles(){o.f[4]++,o.s[32]++,this.sideMenuElements.toToggleObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Включить второй ползунок: "}),o.s[33]++,this.sideMenuElements.toToggle=C.createElement({name:"input",cssClasses:["goby-side-menu__item-toggle"],attr:{name:"type",value:"checkbox"}});const A=(o.s[34]++,this.sideMenuElements.toToggle.cloneNode());o.s[35]++,this.sideMenuElements.handleValuesToggle=A.cloneNode(),o.s[36]++,this.sideMenuElements.valueScaleToggle=A.cloneNode(),o.s[37]++,this.sideMenuElements.integerToggle=A.cloneNode(),o.s[38]++,this.sideMenuElements.toToggleBorder=C.createElement({name:"span",cssClasses:["goby-side-menu__item-toggle-border"]}),o.s[39]++,this.sideMenuElements.handleValuesToggleBorder=C.createElement({name:"span",cssClasses:["goby-side-menu__item-toggle-border"]}),o.s[40]++,this.sideMenuElements.valueScaleToggleBorder=C.createElement({name:"span",cssClasses:["goby-side-menu__item-toggle-border"]}),o.s[41]++,this.sideMenuElements.integerToggleBorder=C.createElement({name:"span",cssClasses:["goby-side-menu__item-toggle-border"]}),o.s[42]++,this.sideMenuElements.planeToggle=C.createElement({name:"input",cssClasses:["goby-side-menu__item-toggle"],attr:{name:"type",value:"checkbox"}}),o.s[43]++,this.sideMenuElements.planeToggleBorder=C.createElement({name:"span",cssClasses:["goby-side-menu__item-toggle-border"]})}createObjectives(){o.f[5]++,o.s[44]++,this.sideMenuElements.handleValuesObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Включить значения под ползунками: "}),o.s[45]++,this.sideMenuElements.valueScaleObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Включить шкалу значений: "}),o.s[46]++,this.sideMenuElements.planeObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Изменить плоскость: "}),o.s[47]++,this.sideMenuElements.integerObjective=C.createElement({name:"span",cssClasses:["goby-side-menu__item-objective"],text:"Только целые числа: "})}initializeSideMenu(){o.f[6]++,o.s[48]++,this.createOutputs(),o.s[49]++,this.createWrappers(),o.s[50]++,this.createInputs(),o.s[51]++,this.createToggles(),o.s[52]++,this.createObjectives(),o.s[53]++,this.sideMenuElements.sideMenuContainer=C.createElement({name:"div",cssClasses:["goby-side-menu"]})}static createElement(A){o.f[7]++;const e=(o.s[54]++,document.createElement(A.name));return o.s[55]++,A.cssClasses.forEach((A=>{o.f[8]++,o.s[56]++,e.classList.add(A)})),o.s[57]++,A.text?(o.b[0][0]++,o.s[58]++,e.textContent=A.text):o.b[0][1]++,o.s[59]++,A.attr?(o.b[1][0]++,o.s[60]++,e.setAttribute(A.attr.name,A.attr.value)):o.b[1][1]++,o.s[61]++,e}wrapsOutputs(){o.f[9]++,o.s[62]++,this.sideMenuElements.currentValuesWrapper.append(this.sideMenuElements.currentValuesObjective,this.sideMenuElements.fromOutput,this.sideMenuElements.toOutput)}wrapsElementsInWrappers(){o.f[10]++,o.s[63]++,this.sideMenuElements.fromInputWrapper.append(this.sideMenuElements.fromInput),o.s[64]++,this.sideMenuElements.toInputWrapper.append(this.sideMenuElements.toInput),o.s[65]++,this.sideMenuElements.stepInputWrapper.append(this.sideMenuElements.stepInput),o.s[66]++,this.sideMenuElements.minInputWrapper.append(this.sideMenuElements.minimumInput),o.s[67]++,this.sideMenuElements.maxInputWrapper.append(this.sideMenuElements.maximumInput),o.s[68]++,this.sideMenuElements.inputWrapper.append(this.sideMenuElements.inputObjective,this.sideMenuElements.fromInputWrapper,this.sideMenuElements.toInputWrapper,this.sideMenuElements.stepInputWrapper,this.sideMenuElements.minInputWrapper,this.sideMenuElements.maxInputWrapper)}wrapsToToggle(){o.f[11]++,o.s[69]++,this.sideMenuElements.toToggleWrapper.append(this.sideMenuElements.toToggle,this.sideMenuElements.toToggleBorder),o.s[70]++,this.sideMenuElements.toWrapper.append(this.sideMenuElements.toToggleObjective,this.sideMenuElements.toToggleWrapper)}wrapsHandlesValuesToggle(){o.f[12]++,o.s[71]++,this.sideMenuElements.handleValuesToggleWrapper.append(this.sideMenuElements.handleValuesToggle,this.sideMenuElements.handleValuesToggleBorder),o.s[72]++,this.sideMenuElements.handleValuesWrapper.append(this.sideMenuElements.handleValuesObjective,this.sideMenuElements.handleValuesToggleWrapper)}wrapsValuesScaleToggle(){o.f[13]++,o.s[73]++,this.sideMenuElements.valueScaleToggleWrapper.append(this.sideMenuElements.valueScaleToggle,this.sideMenuElements.valueScaleToggleBorder),o.s[74]++,this.sideMenuElements.valueScaleWrapper.append(this.sideMenuElements.valueScaleObjective,this.sideMenuElements.valueScaleToggleWrapper)}wrapsPlaneToggle(){o.f[14]++,o.s[75]++,this.sideMenuElements.planeToggleWrapper.append(this.sideMenuElements.planeToggle,this.sideMenuElements.planeToggleBorder),o.s[76]++,this.sideMenuElements.planeWrapper.append(this.sideMenuElements.planeObjective,this.sideMenuElements.planeToggleWrapper)}wrapsIntegerToggle(){o.f[15]++,o.s[77]++,this.sideMenuElements.integerToggleWrapper.append(this.sideMenuElements.integerToggle,this.sideMenuElements.integerToggleBorder),o.s[78]++,this.sideMenuElements.integerWrapper.append(this.sideMenuElements.integerObjective,this.sideMenuElements.integerToggleWrapper)}collectSideMenu(){o.f[16]++,o.s[79]++,this.wrapsOutputs(),o.s[80]++,this.wrapsElementsInWrappers(),o.s[81]++,this.wrapsToToggle(),o.s[82]++,this.wrapsHandlesValuesToggle(),o.s[83]++,this.wrapsValuesScaleToggle(),o.s[84]++,this.wrapsPlaneToggle(),o.s[85]++,this.wrapsIntegerToggle(),o.s[86]++,this.sideMenuElements.sideMenuContainer.append(this.sideMenuElements.currentValuesWrapper,this.sideMenuElements.inputWrapper,this.sideMenuElements.toWrapper,this.sideMenuElements.handleValuesWrapper,this.sideMenuElements.valueScaleWrapper,this.sideMenuElements.planeWrapper,this.sideMenuElements.integerWrapper)}refreshValues(A){o.f[17]++;const e=(o.s[87]++,o.b[2][0]++,A.isToFixed&&(o.b[2][1]++,!this.isInputChanges));o.s[88]++;const n=A=>(o.f[18]++,o.s[89]++,e?(o.b[3][0]++,`${Math.round(Number(A))}`):(o.b[3][1]++,A));switch(o.s[90]++,A.target){case"from":o.b[4][0]++,o.s[91]++,this.sideMenuElements.fromOutput.value=n(A.value),o.s[92]++,this.sideMenuElements.fromInput.value=n(A.value),o.s[93]++;break;case"to":o.b[4][1]++,o.s[94]++,this.sideMenuElements.toOutput.value=` - ${n(A.value)}`,o.s[95]++,this.sideMenuElements.toInput.value=n(A.value),o.s[96]++;break;case"min":o.b[4][2]++,o.s[97]++,this.sideMenuElements.minimumInput.value=A.value,o.s[98]++;break;case"max":o.b[4][3]++,o.s[99]++,this.sideMenuElements.maximumInput.value=A.value,o.s[100]++;break;default:o.b[4][4]++,o.s[101]++}o.s[102]++,this.isInputChanges=!1}hideToValues(A){o.f[19]++,o.s[103]++;const e=(A,e)=>{o.f[20]++,o.s[104]++,this.sideMenuElements.toInputWrapper.style.display=A,o.s[105]++,this.sideMenuElements.toOutput.style.display=e};o.s[106]++,A?(o.b[5][1]++,o.s[108]++,e("block","inline")):(o.b[5][0]++,o.s[107]++,e("none","none"))}}o.s[109]++,e.SideMenu=C},"./src/plugin/View/SideMenu/sideMenu.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\sideMenu.test.ts",l="ebab9b2407171eebd98f40623ccab151e5ce668f",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\sideMenu.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:19},end:{line:3,column:40}},2:{start:{line:4,column:0},end:{line:34,column:3}},3:{start:{line:6,column:4},end:{line:8,column:7}},4:{start:{line:7,column:8},end:{line:7,column:45}},5:{start:{line:9,column:4},end:{line:11,column:7}},6:{start:{line:10,column:8},end:{line:10,column:38}},7:{start:{line:12,column:4},end:{line:15,column:7}},8:{start:{line:13,column:8},end:{line:13,column:35}},9:{start:{line:14,column:8},end:{line:14,column:73}},10:{start:{line:16,column:4},end:{line:20,column:7}},11:{start:{line:17,column:8},end:{line:17,column:81}},12:{start:{line:18,column:8},end:{line:18,column:73}},13:{start:{line:19,column:8},end:{line:19,column:72}},14:{start:{line:21,column:4},end:{line:25,column:7}},15:{start:{line:22,column:8},end:{line:22,column:79}},16:{start:{line:23,column:8},end:{line:23,column:74}},17:{start:{line:24,column:8},end:{line:24,column:70}},18:{start:{line:26,column:4},end:{line:33,column:7}},19:{start:{line:27,column:8},end:{line:27,column:37}},20:{start:{line:28,column:8},end:{line:28,column:87}},21:{start:{line:29,column:8},end:{line:29,column:81}},22:{start:{line:30,column:8},end:{line:30,column:36}},23:{start:{line:31,column:8},end:{line:31,column:88}},24:{start:{line:32,column:8},end:{line:32,column:83}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:21},end:{line:4,column:22}},loc:{start:{line:4,column:27},end:{line:34,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:21},end:{line:8,column:5}},line:6},2:{name:"(anonymous_2)",decl:{start:{line:9,column:33},end:{line:9,column:34}},loc:{start:{line:9,column:39},end:{line:11,column:5}},line:9},3:{name:"(anonymous_3)",decl:{start:{line:12,column:34},end:{line:12,column:35}},loc:{start:{line:12,column:40},end:{line:15,column:5}},line:12},4:{name:"(anonymous_4)",decl:{start:{line:16,column:56},end:{line:16,column:57}},loc:{start:{line:16,column:62},end:{line:20,column:5}},line:16},5:{name:"(anonymous_5)",decl:{start:{line:21,column:54},end:{line:21,column:55}},loc:{start:{line:21,column:60},end:{line:25,column:5}},line:21},6:{name:"(anonymous_6)",decl:{start:{line:26,column:65},end:{line:26,column:66}},loc:{start:{line:26,column:71},end:{line:33,column:5}},line:26}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\sideMenu.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\sideMenu.test.ts"],names:[],mappings:";;AAAA,yCAAsC;AAEtC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,QAAkB,CAAC;IAEvB,UAAU,CAAC,GAAG,EAAE;QACd,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAC3B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,QAAQ,CAAC,aAAa,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACzE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAW,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,QAAQ,CAAC,aAAa,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACvE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,cAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE1E,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC5B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,cAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { SideMenu } from './SideMenu';\r\n\r\ndescribe('SideMenu', () => {\r\n  let sideMenu: SideMenu;\r\n\r\n  beforeEach(() => {\r\n    sideMenu = new SideMenu();\r\n  });\r\n\r\n  it('SideMenu can be create', () => {\r\n    expect(sideMenu).toBeTruthy();\r\n  });\r\n\r\n  it('SideMenu can be collect', () => {\r\n    sideMenu.collectSideMenu();\r\n    expect(sideMenu.sideMenuElements.sideMenuContainer).toBeTruthy();\r\n  });\r\n\r\n  it('refreshValues() refresh from values correctly', () => {\r\n    sideMenu.refreshValues({ target: 'from', value: '50', isToFixed: true });\r\n    expect(sideMenu.sideMenuElements.fromOutput!.value).toEqual('50');\r\n    expect(sideMenu.sideMenuElements.fromInput!.value).toEqual('50');\r\n  });\r\n\r\n  it('refreshValues() refresh to values correctly', () => {\r\n    sideMenu.refreshValues({ target: 'to', value: '50', isToFixed: true });\r\n    expect(sideMenu.sideMenuElements.toOutput!.value).toEqual(' - 50');\r\n    expect(sideMenu.sideMenuElements.toInput!.value).toEqual('50');\r\n  });\r\n\r\n  it('hideToValues() operates the display function correctly', () => {\r\n    sideMenu.hideToValues(false);\r\n    expect(sideMenu.sideMenuElements.toInputWrapper!.style.display).toEqual('none');\r\n    expect(sideMenu.sideMenuElements.toOutput!.style.display).toEqual('none');\r\n\r\n    sideMenu.hideToValues(true);\r\n    expect(sideMenu.sideMenuElements.toInputWrapper!.style.display).toEqual('block');\r\n    expect(sideMenu.sideMenuElements.toOutput!.style.display).toEqual('inline');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/SideMenu/SideMenu.ts"));C.s[2]++,describe("SideMenu",(()=>{let A;C.f[0]++,C.s[3]++,beforeEach((()=>{C.f[1]++,C.s[4]++,A=new a.SideMenu})),C.s[5]++,it("SideMenu can be create",(()=>{C.f[2]++,C.s[6]++,expect(A).toBeTruthy()})),C.s[7]++,it("SideMenu can be collect",(()=>{C.f[3]++,C.s[8]++,A.collectSideMenu(),C.s[9]++,expect(A.sideMenuElements.sideMenuContainer).toBeTruthy()})),C.s[10]++,it("refreshValues() refresh from values correctly",(()=>{C.f[4]++,C.s[11]++,A.refreshValues({target:"from",value:"50",isToFixed:!0}),C.s[12]++,expect(A.sideMenuElements.fromOutput.value).toEqual("50"),C.s[13]++,expect(A.sideMenuElements.fromInput.value).toEqual("50")})),C.s[14]++,it("refreshValues() refresh to values correctly",(()=>{C.f[5]++,C.s[15]++,A.refreshValues({target:"to",value:"50",isToFixed:!0}),C.s[16]++,expect(A.sideMenuElements.toOutput.value).toEqual(" - 50"),C.s[17]++,expect(A.sideMenuElements.toInput.value).toEqual("50")})),C.s[18]++,it("hideToValues() operates the display function correctly",(()=>{C.f[6]++,C.s[19]++,A.hideToValues(!1),C.s[20]++,expect(A.sideMenuElements.toInputWrapper.style.display).toEqual("none"),C.s[21]++,expect(A.sideMenuElements.toOutput.style.display).toEqual("none"),C.s[22]++,A.hideToValues(!0),C.s[23]++,expect(A.sideMenuElements.toInputWrapper.style.display).toEqual("block"),C.s[24]++,expect(A.sideMenuElements.toOutput.style.display).toEqual("inline")}))}))},"./src/plugin/View/SideMenu/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\types.ts",t="0ac1151428fb5d060e8382e2bf3669f5cf7207af",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\SideMenu\\types.ts"],names:[],mappings:"",sourcesContent:["type ElementParams = {\r\n  name: string;\r\n  cssClasses: Array<string>;\r\n  text?: string;\r\n  attr?: {\r\n    name: string,\r\n    value: string\r\n  };\r\n};\r\n\r\ntype SideMenuElements = {\r\n  sideMenuContainer?: HTMLDivElement;\r\n  currentValuesWrapper?: HTMLDivElement;\r\n  currentValuesObjective?: HTMLSpanElement;\r\n  fromOutput?: HTMLOutputElement;\r\n  toOutput?: HTMLOutputElement;\r\n  toWrapper?: HTMLDivElement;\r\n  toToggleObjective?: HTMLSpanElement;\r\n  toToggleWrapper?: HTMLLabelElement;\r\n  toToggle?: HTMLInputElement;\r\n  toToggleBorder?: HTMLSpanElement;\r\n  inputWrapper?: HTMLDivElement;\r\n  inputObjective?: HTMLSpanElement;\r\n  toInputWrapper?: HTMLLabelElement;\r\n  fromInputWrapper?: HTMLLabelElement;\r\n  stepInputWrapper?: HTMLLabelElement;\r\n  minInputWrapper?: HTMLLabelElement;\r\n  maxInputWrapper?: HTMLLabelElement;\r\n  fromInput?: HTMLInputElement;\r\n  toInput?: HTMLInputElement;\r\n  stepInput?: HTMLInputElement;\r\n  minimumInput?: HTMLInputElement;\r\n  maximumInput?: HTMLInputElement;\r\n  handleValuesWrapper?: HTMLDivElement;\r\n  handleValuesObjective?: HTMLSpanElement;\r\n  handleValuesToggleWrapper?: HTMLLabelElement;\r\n  handleValuesToggle?: HTMLInputElement;\r\n  handleValuesToggleBorder?: HTMLSpanElement;\r\n  valueScaleWrapper?: HTMLDivElement;\r\n  valueScaleObjective?: HTMLSpanElement;\r\n  valueScaleToggleWrapper?: HTMLLabelElement;\r\n  valueScaleToggle?: HTMLInputElement;\r\n  valueScaleToggleBorder?: HTMLSpanElement;\r\n  planeWrapper?: HTMLDivElement;\r\n  planeObjective?: HTMLSpanElement;\r\n  planeToggleWrapper?: HTMLLabelElement;\r\n  planeToggle?: HTMLInputElement;\r\n  planeToggleBorder?: HTMLSpanElement;\r\n  integerToggle?: HTMLInputElement;\r\n  integerToggleBorder?: HTMLSpanElement;\r\n  integerObjective?: HTMLSpanElement;\r\n  integerWrapper?: HTMLDivElement;\r\n  integerToggleWrapper?: HTMLLabelElement;\r\n};\r\n\r\nexport {\r\n  ElementParams,\r\n  SideMenuElements,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/Slider/Slider.ts":(A,e)=>{"use strict";var n,t,l,s,i,r,o=(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\Slider.ts",t="8f795a134bb3b7cc8661ccbfd8898dad6e6e70e0",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\Slider.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:0},end:{line:3,column:24}},2:{start:{line:6,column:8},end:{line:6,column:52}},3:{start:{line:7,column:8},end:{line:7,column:49}},4:{start:{line:8,column:8},end:{line:8,column:59}},5:{start:{line:9,column:8},end:{line:9,column:64}},6:{start:{line:10,column:8},end:{line:10,column:47}},7:{start:{line:13,column:8},end:{line:13,column:234}},8:{start:{line:16,column:8},end:{line:16,column:97}},9:{start:{line:19,column:8},end:{line:19,column:97}},10:{start:{line:22,column:49},end:{line:22,column:57}},11:{start:{line:24,column:12},end:{line:24,column:68}},12:{start:{line:25,column:12},end:{line:25,column:76}},13:{start:{line:26,column:12},end:{line:27,column:69}},14:{start:{line:27,column:16},end:{line:27,column:69}},15:{start:{line:29,column:8},end:{line:42,column:9}},16:{start:{line:31,column:16},end:{line:31,column:75}},17:{start:{line:32,column:16},end:{line:32,column:75}},18:{start:{line:33,column:16},end:{line:33,column:81}},19:{start:{line:34,column:16},end:{line:34,column:22}},20:{start:{line:36,column:16},end:{line:36,column:75}},21:{start:{line:37,column:16},end:{line:37,column:43}},22:{start:{line:38,column:16},end:{line:38,column:53}},23:{start:{line:39,column:16},end:{line:39,column:22}},24:{start:{line:41,column:16},end:{line:41,column:22}},25:{start:{line:43,column:8},end:{line:43,column:29}},26:{start:{line:46,column:0},end:{line:46,column:24}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:18},end:{line:11,column:5}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:28},end:{line:14,column:5}},line:12},2:{name:"(anonymous_2)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:46},end:{line:17,column:5}},line:15},3:{name:"(anonymous_3)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:42},end:{line:20,column:5}},line:18},4:{name:"(anonymous_4)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:26},end:{line:44,column:5}},line:21},5:{name:"refreshAfterResize",decl:{start:{line:23,column:17},end:{line:23,column:35}},loc:{start:{line:23,column:38},end:{line:28,column:9}},line:23}},branchMap:{0:{loc:{start:{line:16,column:16},end:{line:16,column:95}},type:"binary-expr",locations:[{start:{line:16,column:17},end:{line:16,column:77}},{start:{line:16,column:83},end:{line:16,column:94}}],line:16},1:{loc:{start:{line:19,column:16},end:{line:19,column:95}},type:"binary-expr",locations:[{start:{line:19,column:17},end:{line:19,column:78}},{start:{line:19,column:84},end:{line:19,column:94}}],line:19},2:{loc:{start:{line:26,column:12},end:{line:27,column:69}},type:"if",locations:[{start:{line:26,column:12},end:{line:27,column:69}},{start:{line:26,column:12},end:{line:27,column:69}}],line:26},3:{loc:{start:{line:29,column:8},end:{line:42,column:9}},type:"switch",locations:[{start:{line:30,column:12},end:{line:34,column:22}},{start:{line:35,column:12},end:{line:39,column:22}},{start:{line:40,column:12},end:{line:41,column:22}}],line:29}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0},f:{0:0,1:0,2:0,3:0,4:0,5:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\Slider.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\Slider.ts"],names:[],mappings:";;;AAEA,MAAa,MAAM;IAKjB;QACE,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAEM,aAAa,CAAC,QAAiC;QACpD,IAAI,CAAC,MAAM,CAAC,MAAM,CAChB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,EAAE,EACX,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAC5B,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAC5B,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,EACvB,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,EACvB,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,EACvB,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CACxB,CAAC;IACJ,CAAC;IAEO,6BAA6B,CAAC,UAAmB;QACvD,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEO,yBAAyB,CAAC,UAAmB;QACnD,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEM,WAAW,CAAC,QAA6B;QAC9C,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;QAElD,SAAS,kBAAkB;YACzB,QAAQ,CAAC,gBAAgB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YACxD,QAAQ,CAAC,wBAAwB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YAChE,IAAI,MAAM;gBAAE,QAAQ,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QACnE,CAAC;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC;gBAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;gBAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC;gBACjE,MAAM;YACR,KAAK,IAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC;gBACjD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;gBAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;gBACrC,MAAM;YACR;gBACE,MAAM;SACT;QAED,kBAAkB,EAAE,CAAC;IACvB,CAAC;CACF;AA7DD,wBA6DC",sourcesContent:["import { SliderAssemblerSettings, SliderPlaneSettings } from './types';\r\n\r\nexport class Slider {\r\n  readonly slider: HTMLDivElement;\r\n\r\n  readonly sliderWrapper: HTMLDivElement;\r\n\r\n  constructor() {\r\n    this.slider = document.createElement('div');\r\n    this.slider.classList.add('goby-slider');\r\n    this.sliderWrapper = document.createElement('div');\r\n    this.sliderWrapper.classList.add('goby-slider-wrapper');\r\n    this.sliderWrapper.append(this.slider);\r\n  }\r\n\r\n  public collectSlider(settings: SliderAssemblerSettings): void {\r\n    this.slider.append(\r\n      settings.from,\r\n      settings.to,\r\n      settings.interval,\r\n      settings.valueScale.minValue,\r\n      settings.valueScale.maxValue,\r\n      settings.valueScale[20],\r\n      settings.valueScale[40],\r\n      settings.valueScale[60],\r\n      settings.valueScale[80],\r\n    );\r\n  }\r\n\r\n  private checkIsNeedToMakeHorizontally(isVertical: boolean): boolean {\r\n    return ((this.slider.classList.contains('goby-slider_state_vertical')) && (!isVertical));\r\n  }\r\n\r\n  private checkIsNeedToMakeVertical(isVertical: boolean): boolean {\r\n    return ((!this.slider.classList.contains('goby-slider_state_vertical')) && (isVertical));\r\n  }\r\n\r\n  public changePlane(settings: SliderPlaneSettings): void {\r\n    const { isStep, isVertical, requests } = settings;\r\n\r\n    function refreshAfterResize(): void {\r\n      requests.needDataForScale = { name: '', value: 'true' };\r\n      requests.needDataForStartPosition = { name: '', value: 'true' };\r\n      if (isStep) requests.needStepWidth = { name: '', value: 'true' };\r\n    }\r\n\r\n    switch (true) {\r\n      case this.checkIsNeedToMakeVertical(isVertical):\r\n        this.slider.classList.toggle('goby-slider_state_vertical');\r\n        this.slider.style.top = `${this.slider.offsetWidth / 2}px`;\r\n        this.sliderWrapper.style.height = `${this.slider.offsetWidth}px`;\r\n        break;\r\n      case this.checkIsNeedToMakeHorizontally(isVertical):\r\n        this.slider.classList.toggle('goby-slider_state_vertical');\r\n        this.slider.style.top = '';\r\n        this.sliderWrapper.style.height = '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    refreshAfterResize();\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i));o.s[0]++,Object.defineProperty(e,"__esModule",{value:!0}),o.s[1]++,e.Slider=void 0;o.s[26]++,e.Slider=class{constructor(){o.f[0]++,o.s[2]++,this.slider=document.createElement("div"),o.s[3]++,this.slider.classList.add("goby-slider"),o.s[4]++,this.sliderWrapper=document.createElement("div"),o.s[5]++,this.sliderWrapper.classList.add("goby-slider-wrapper"),o.s[6]++,this.sliderWrapper.append(this.slider)}collectSlider(A){o.f[1]++,o.s[7]++,this.slider.append(A.from,A.to,A.interval,A.valueScale.minValue,A.valueScale.maxValue,A.valueScale[20],A.valueScale[40],A.valueScale[60],A.valueScale[80])}checkIsNeedToMakeHorizontally(A){return o.f[2]++,o.s[8]++,o.b[0][0]++,this.slider.classList.contains("goby-slider_state_vertical")&&(o.b[0][1]++,!A)}checkIsNeedToMakeVertical(A){return o.f[3]++,o.s[9]++,o.b[1][0]++,!this.slider.classList.contains("goby-slider_state_vertical")&&(o.b[1][1]++,A)}changePlane(A){o.f[4]++;const{isStep:e,isVertical:n,requests:t}=(o.s[10]++,A);switch(o.s[15]++,!0){case this.checkIsNeedToMakeVertical(n):o.b[3][0]++,o.s[16]++,this.slider.classList.toggle("goby-slider_state_vertical"),o.s[17]++,this.slider.style.top=this.slider.offsetWidth/2+"px",o.s[18]++,this.sliderWrapper.style.height=`${this.slider.offsetWidth}px`,o.s[19]++;break;case this.checkIsNeedToMakeHorizontally(n):o.b[3][1]++,o.s[20]++,this.slider.classList.toggle("goby-slider_state_vertical"),o.s[21]++,this.slider.style.top="",o.s[22]++,this.sliderWrapper.style.height="",o.s[23]++;break;default:o.b[3][2]++,o.s[24]++}o.s[25]++,o.f[5]++,o.s[11]++,t.needDataForScale={name:"",value:"true"},o.s[12]++,t.needDataForStartPosition={name:"",value:"true"},o.s[13]++,e?(o.b[2][0]++,o.s[14]++,t.needStepWidth={name:"",value:"true"}):o.b[2][1]++}}},"./src/plugin/View/Slider/slider.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\slider.test.ts",l="602230f25d18c1910352153bd4ee8c1a2f9b7ca8",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\slider.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:18},end:{line:3,column:47}},2:{start:{line:4,column:27},end:{line:4,column:74}},3:{start:{line:5,column:17},end:{line:5,column:36}},4:{start:{line:6,column:22},end:{line:6,column:59}},5:{start:{line:7,column:0},end:{line:47,column:3}},6:{start:{line:9,column:21},end:{line:16,column:5}},7:{start:{line:17,column:4},end:{line:19,column:7}},8:{start:{line:18,column:8},end:{line:18,column:39}},9:{start:{line:20,column:4},end:{line:22,column:7}},10:{start:{line:21,column:8},end:{line:21,column:36}},11:{start:{line:23,column:4},end:{line:32,column:7}},12:{start:{line:24,column:25},end:{line:29,column:9}},13:{start:{line:30,column:8},end:{line:30,column:39}},14:{start:{line:31,column:8},end:{line:31,column:43}},15:{start:{line:33,column:4},end:{line:46,column:7}},16:{start:{line:34,column:8},end:{line:38,column:11}},17:{start:{line:39,column:8},end:{line:39,column:72}},18:{start:{line:40,column:8},end:{line:44,column:11}},19:{start:{line:45,column:8},end:{line:45,column:76}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:7,column:19},end:{line:7,column:20}},loc:{start:{line:7,column:25},end:{line:47,column:1}},line:7},1:{name:"(anonymous_1)",decl:{start:{line:17,column:15},end:{line:17,column:16}},loc:{start:{line:17,column:21},end:{line:19,column:5}},line:17},2:{name:"(anonymous_2)",decl:{start:{line:20,column:31},end:{line:20,column:32}},loc:{start:{line:20,column:37},end:{line:22,column:5}},line:20},3:{name:"(anonymous_3)",decl:{start:{line:23,column:47},end:{line:23,column:48}},loc:{start:{line:23,column:53},end:{line:32,column:5}},line:23},4:{name:"(anonymous_4)",decl:{start:{line:33,column:64},end:{line:33,column:65}},loc:{start:{line:33,column:70},end:{line:46,column:5}},line:33}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0},f:{0:0,1:0,2:0,3:0,4:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\slider.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\slider.test.ts"],names:[],mappings:";;AAAA,gDAA6C;AAC7C,2EAAwE;AAExE,qCAAkC;AAClC,4DAAyD;AAGzD,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,IAAI,MAAc,CAAC;IACnB,MAAM,QAAQ,GAAuB;QACnC,aAAa,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACtC,iBAAiB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAC1C,uBAAuB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAChD,2BAA2B,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACpD,gBAAgB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACzC,wBAAwB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;KAClD,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,QAAQ,GAA4B;YACxC,IAAI,EAAE,IAAI,iBAAO,EAAE,CAAC,UAAU;YAC9B,EAAE,EAAE,IAAI,iBAAO,EAAE,CAAC,QAAQ;YAC1B,QAAQ,EAAE,IAAI,mCAAgB,EAAE,CAAC,QAAQ;YACzC,UAAU,EAAE,IAAI,yBAAW,EAAE;SAC9B,CAAC;QACF,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,MAAM,CAAC,WAAW,CAAC;YACjB,QAAQ;YACR,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;QAEhE,MAAM,CAAC,WAAW,CAAC;YACjB,QAAQ;YACR,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { Handles } from '../Handles/Handles';\r\nimport { SelectedInterval } from '../SelectedInterval/SelectedInterval';\r\nimport { SliderAssemblerSettings } from './types';\r\nimport { Slider } from './Slider';\r\nimport { ValuesScale } from '../ValuesScale/ValuesScale';\r\nimport { DataRequestToModel } from '../types';\r\n\r\ndescribe('Slider', () => {\r\n  let slider: Slider;\r\n  const requests: DataRequestToModel = {\r\n    needStepWidth: { value: '', name: '' },\r\n    needApplyNewValue: { value: '', name: '' },\r\n    needApplyValueFromScale: { value: '', name: '' },\r\n    needChangeSliderValuesRange: { value: '', name: '' },\r\n    needDataForScale: { value: '', name: '' },\r\n    needDataForStartPosition: { value: '', name: '' },\r\n  };\r\n\r\n  beforeEach(() => {\r\n    slider = new Slider();\r\n  });\r\n\r\n  it('Slider can be create', () => {\r\n    expect(slider).toBeTruthy();\r\n  });\r\n\r\n  it('collectSlider() can collect elements', () => {\r\n    const settings: SliderAssemblerSettings = {\r\n      from: new Handles().fromHandle,\r\n      to: new Handles().toHandle,\r\n      interval: new SelectedInterval().interval,\r\n      valueScale: new ValuesScale(),\r\n    };\r\n    slider.collectSlider(settings);\r\n    expect(slider.slider).toBeTruthy();\r\n  });\r\n\r\n  it('changePlane() operates the display function correctly', () => {\r\n    slider.changePlane({\r\n      requests,\r\n      isStep: false,\r\n      isVertical: true,\r\n    });\r\n    expect(slider.slider).toHaveClass('goby-slider_state_vertical');\r\n\r\n    slider.changePlane({\r\n      requests,\r\n      isStep: false,\r\n      isVertical: false,\r\n    });\r\n    expect(slider.slider).not.toHaveClass('goby-slider_state_vertical');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/Handles/Handles.ts")),u=(C.s[2]++,n("./src/plugin/View/SelectedInterval/SelectedInterval.ts")),c=(C.s[3]++,n("./src/plugin/View/Slider/Slider.ts")),m=(C.s[4]++,n("./src/plugin/View/ValuesScale/ValuesScale.ts"));C.s[5]++,describe("Slider",(()=>{let A;C.f[0]++;const e=(C.s[6]++,{needStepWidth:{value:"",name:""},needApplyNewValue:{value:"",name:""},needApplyValueFromScale:{value:"",name:""},needChangeSliderValuesRange:{value:"",name:""},needDataForScale:{value:"",name:""},needDataForStartPosition:{value:"",name:""}});C.s[7]++,beforeEach((()=>{C.f[1]++,C.s[8]++,A=new c.Slider})),C.s[9]++,it("Slider can be create",(()=>{C.f[2]++,C.s[10]++,expect(A).toBeTruthy()})),C.s[11]++,it("collectSlider() can collect elements",(()=>{C.f[3]++;const e=(C.s[12]++,{from:(new a.Handles).fromHandle,to:(new a.Handles).toHandle,interval:(new u.SelectedInterval).interval,valueScale:new m.ValuesScale});C.s[13]++,A.collectSlider(e),C.s[14]++,expect(A.slider).toBeTruthy()})),C.s[15]++,it("changePlane() operates the display function correctly",(()=>{C.f[4]++,C.s[16]++,A.changePlane({requests:e,isStep:!1,isVertical:!0}),C.s[17]++,expect(A.slider).toHaveClass("goby-slider_state_vertical"),C.s[18]++,A.changePlane({requests:e,isStep:!1,isVertical:!1}),C.s[19]++,expect(A.slider).not.toHaveClass("goby-slider_state_vertical")}))}))},"./src/plugin/View/Slider/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\types.ts",t="bd41f4a49eca4581f10750bec8c00b443611015d",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\Slider\\types.ts"],names:[],mappings:"",sourcesContent:["import { IValuesScale } from '../ValuesScale/interfaces';\r\nimport { DataRequestToModel } from '../types';\r\n\r\ntype SliderAssemblerSettings = {\r\n  readonly from: HTMLSpanElement;\r\n  readonly to: HTMLSpanElement;\r\n  readonly interval: HTMLDivElement;\r\n  readonly valueScale: IValuesScale;\r\n};\r\n\r\ntype SliderPlaneSettings = {\r\n  isVertical: boolean;\r\n  requests: DataRequestToModel;\r\n  isStep: boolean;\r\n};\r\n\r\nexport {\r\n  SliderAssemblerSettings,\r\n  SliderPlaneSettings,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/ValuesScale/ValuesScale.ts":(A,e)=>{"use strict";var n,t,l,s,i,r,o=(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\ValuesScale.ts",t="c07e79f00153e6d0b2d48cae61e4efbc1a0d9320",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\ValuesScale.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:0},end:{line:3,column:29}},2:{start:{line:6,column:8},end:{line:6,column:62}},3:{start:{line:7,column:8},end:{line:7,column:62}},4:{start:{line:8,column:8},end:{line:8,column:59}},5:{start:{line:9,column:8},end:{line:9,column:59}},6:{start:{line:10,column:8},end:{line:10,column:59}},7:{start:{line:11,column:8},end:{line:11,column:59}},8:{start:{line:14,column:24},end:{line:14,column:54}},9:{start:{line:15,column:8},end:{line:15,column:91}},10:{start:{line:16,column:8},end:{line:16,column:23}},11:{start:{line:19,column:8},end:{line:26,column:20}},12:{start:{line:29,column:46},end:{line:29,column:111}},13:{start:{line:29,column:59},end:{line:29,column:111}},14:{start:{line:30,column:39},end:{line:30,column:141}},15:{start:{line:30,column:65},end:{line:30,column:141}},16:{start:{line:31,column:8},end:{line:31,column:80}},17:{start:{line:32,column:8},end:{line:32,column:81}},18:{start:{line:33,column:8},end:{line:33,column:68}},19:{start:{line:34,column:8},end:{line:34,column:68}},20:{start:{line:35,column:8},end:{line:35,column:68}},21:{start:{line:36,column:8},end:{line:36,column:68}},22:{start:{line:39,column:8},end:{line:45,column:29}},23:{start:{line:48,column:8},end:{line:54,column:28}},24:{start:{line:57,column:30},end:{line:64,column:9}},25:{start:{line:58,column:12},end:{line:58,column:80}},26:{start:{line:59,column:12},end:{line:59,column:80}},27:{start:{line:60,column:12},end:{line:60,column:75}},28:{start:{line:61,column:12},end:{line:61,column:75}},29:{start:{line:62,column:12},end:{line:62,column:75}},30:{start:{line:63,column:12},end:{line:63,column:75}},31:{start:{line:65,column:38},end:{line:66,column:61}},32:{start:{line:67,column:8},end:{line:68,column:28}},33:{start:{line:68,column:12},end:{line:68,column:28}},34:{start:{line:71,column:30},end:{line:78,column:9}},35:{start:{line:72,column:12},end:{line:72,column:48}},36:{start:{line:73,column:12},end:{line:73,column:48}},37:{start:{line:74,column:12},end:{line:74,column:43}},38:{start:{line:75,column:12},end:{line:75,column:43}},39:{start:{line:76,column:12},end:{line:76,column:43}},40:{start:{line:77,column:12},end:{line:77,column:43}},41:{start:{line:79,column:8},end:{line:84,column:9}},42:{start:{line:80,column:12},end:{line:80,column:34}},43:{start:{line:83,column:12},end:{line:83,column:42}},44:{start:{line:87,column:0},end:{line:87,column:34}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:18},end:{line:12,column:5}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:40},end:{line:17,column:5}},line:13},2:{name:"(anonymous_2)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:30},end:{line:27,column:5}},line:18},3:{name:"(anonymous_3)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:44},end:{line:37,column:5}},line:28},4:{name:"(anonymous_4)",decl:{start:{line:29,column:46},end:{line:29,column:47}},loc:{start:{line:29,column:59},end:{line:29,column:111}},line:29},5:{name:"(anonymous_5)",decl:{start:{line:30,column:39},end:{line:30,column:40}},loc:{start:{line:30,column:65},end:{line:30,column:141}},line:30},6:{name:"(anonymous_6)",decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:46},end:{line:46,column:5}},line:38},7:{name:"(anonymous_7)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:42},end:{line:55,column:5}},line:47},8:{name:"(anonymous_8)",decl:{start:{line:56,column:4},end:{line:56,column:5}},loc:{start:{line:56,column:28},end:{line:69,column:5}},line:56},9:{name:"(anonymous_9)",decl:{start:{line:57,column:30},end:{line:57,column:31}},loc:{start:{line:57,column:36},end:{line:64,column:9}},line:57},10:{name:"(anonymous_10)",decl:{start:{line:70,column:4},end:{line:70,column:5}},loc:{start:{line:70,column:33},end:{line:85,column:5}},line:70},11:{name:"(anonymous_11)",decl:{start:{line:71,column:30},end:{line:71,column:31}},loc:{start:{line:71,column:41},end:{line:78,column:9}},line:71}},branchMap:{0:{loc:{start:{line:39,column:15},end:{line:45,column:28}},type:"binary-expr",locations:[{start:{line:39,column:16},end:{line:39,column:85}},{start:{line:40,column:16},end:{line:40,column:85}},{start:{line:41,column:16},end:{line:41,column:80}},{start:{line:42,column:16},end:{line:42,column:80}},{start:{line:43,column:16},end:{line:43,column:80}},{start:{line:44,column:16},end:{line:44,column:80}},{start:{line:45,column:16},end:{line:45,column:27}}],line:39},1:{loc:{start:{line:48,column:15},end:{line:54,column:27}},type:"binary-expr",locations:[{start:{line:48,column:16},end:{line:48,column:86}},{start:{line:49,column:16},end:{line:49,column:86}},{start:{line:50,column:16},end:{line:50,column:81}},{start:{line:51,column:16},end:{line:51,column:81}},{start:{line:52,column:16},end:{line:52,column:81}},{start:{line:53,column:16},end:{line:53,column:81}},{start:{line:54,column:16},end:{line:54,column:26}}],line:48},2:{loc:{start:{line:65,column:38},end:{line:66,column:61}},type:"binary-expr",locations:[{start:{line:65,column:38},end:{line:65,column:80}},{start:{line:66,column:15},end:{line:66,column:61}}],line:65},3:{loc:{start:{line:67,column:8},end:{line:68,column:28}},type:"if",locations:[{start:{line:67,column:8},end:{line:68,column:28}},{start:{line:67,column:8},end:{line:68,column:28}}],line:67},4:{loc:{start:{line:79,column:8},end:{line:84,column:9}},type:"if",locations:[{start:{line:79,column:8},end:{line:84,column:9}},{start:{line:79,column:8},end:{line:84,column:9}}],line:79}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0},b:{0:[0,0,0,0,0,0,0],1:[0,0,0,0,0,0,0],2:[0,0],3:[0,0],4:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\ValuesScale.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\ValuesScale.ts"],names:[],mappings:"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",sourcesContent:["import { DataForValueScale } from '../../Model/types';\r\nimport { IValuesScale } from './interfaces';\r\n\r\nexport class ValuesScale implements IValuesScale {\r\n  readonly minValue: HTMLSpanElement;\r\n\r\n  readonly maxValue: HTMLSpanElement;\r\n\r\n  readonly 20: HTMLSpanElement;\r\n\r\n  readonly 40: HTMLSpanElement;\r\n\r\n  readonly 60: HTMLSpanElement;\r\n\r\n  readonly 80: HTMLSpanElement;\r\n\r\n  constructor() {\r\n    this.minValue = ValuesScale.createElement('type_min');\r\n    this.maxValue = ValuesScale.createElement('type_max');\r\n    this[20] = ValuesScale.createElement('percent_20');\r\n    this[40] = ValuesScale.createElement('percent_40');\r\n    this[60] = ValuesScale.createElement('percent_60');\r\n    this[80] = ValuesScale.createElement('percent_80');\r\n  }\r\n\r\n  private static createElement(classModifier: string): HTMLSpanElement {\r\n    const element: HTMLSpanElement = document.createElement('span');\r\n\r\n    element.classList.add('goby-slider__value', `goby-slider__value_${classModifier}`);\r\n\r\n    return element;\r\n  }\r\n\r\n  public refreshValueScale(values: DataForValueScale): void {\r\n    ({\r\n      min: this.minValue.innerText,\r\n      max: this.maxValue.innerText,\r\n      20: this[20].innerText,\r\n      40: this[40].innerText,\r\n      60: this[60].innerText,\r\n      80: this[80].innerText,\r\n    } = values);\r\n  }\r\n\r\n  public centersValues(sliderWidth: number, handleWidth: number): void {\r\n    const calculateExtremeValuePosition = (element: HTMLSpanElement): string => `${\r\n      0 - ((element.offsetWidth - handleWidth) / 2)\r\n    }px`;\r\n    const calculateValuePosition = (coefficient: number, element: HTMLSpanElement): string => `${\r\n      sliderWidth * coefficient - ((element.offsetWidth - handleWidth) / 2)\r\n    }px`;\r\n\r\n    this.minValue.style.left = calculateExtremeValuePosition(this.minValue);\r\n    this.maxValue.style.right = calculateExtremeValuePosition(this.maxValue);\r\n    this[20].style.left = calculateValuePosition(0.2, this[20]);\r\n    this[40].style.left = calculateValuePosition(0.4, this[40]);\r\n    this[60].style.left = calculateValuePosition(0.6, this[60]);\r\n    this[80].style.left = calculateValuePosition(0.8, this[80]);\r\n  }\r\n\r\n  private checkIsNeedToMakeHorizontally(isVertical: boolean): boolean {\r\n    return (this.minValue.classList.contains('goby-slider__value_state_vertical'))\r\n      && (this.maxValue.classList.contains('goby-slider__value_state_vertical'))\r\n      && (this[20].classList.contains('goby-slider__value_state_vertical'))\r\n      && (this[40].classList.contains('goby-slider__value_state_vertical'))\r\n      && (this[60].classList.contains('goby-slider__value_state_vertical'))\r\n      && (this[80].classList.contains('goby-slider__value_state_vertical'))\r\n      && (!isVertical);\r\n  }\r\n\r\n  private checkIsNeedToMakeVertical(isVertical: boolean): boolean {\r\n    return (!this.minValue.classList.contains('goby-slider__value_state_vertical'))\r\n      && (!this.maxValue.classList.contains('goby-slider__value_state_vertical'))\r\n      && (!this[20].classList.contains('goby-slider__value_state_vertical'))\r\n      && (!this[40].classList.contains('goby-slider__value_state_vertical'))\r\n      && (!this[60].classList.contains('goby-slider__value_state_vertical'))\r\n      && (!this[80].classList.contains('goby-slider__value_state_vertical'))\r\n      && (isVertical);\r\n  }\r\n\r\n  public changePlane(isVertical: boolean): void {\r\n    const changeClasses = (): void => {\r\n      this.minValue.classList.toggle('goby-slider__value_state_vertical');\r\n      this.maxValue.classList.toggle('goby-slider__value_state_vertical');\r\n      this[20].classList.toggle('goby-slider__value_state_vertical');\r\n      this[40].classList.toggle('goby-slider__value_state_vertical');\r\n      this[60].classList.toggle('goby-slider__value_state_vertical');\r\n      this[80].classList.toggle('goby-slider__value_state_vertical');\r\n    };\r\n\r\n    const isNeedToChangeClasses = this.checkIsNeedToMakeVertical(isVertical)\r\n      || this.checkIsNeedToMakeHorizontally(isVertical);\r\n\r\n    if (isNeedToChangeClasses) changeClasses();\r\n  }\r\n\r\n  public hideValueScale(isValueScale: boolean): void {\r\n    const changeDisplay = (value: string): void => {\r\n      this.minValue.style.display = value;\r\n      this.maxValue.style.display = value;\r\n      this[20].style.display = value;\r\n      this[40].style.display = value;\r\n      this[60].style.display = value;\r\n      this[80].style.display = value;\r\n    };\r\n\r\n    if (!isValueScale) {\r\n      changeDisplay('none');\r\n    } else {\r\n      changeDisplay('inline-block');\r\n    }\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i));o.s[0]++,Object.defineProperty(e,"__esModule",{value:!0}),o.s[1]++,e.ValuesScale=void 0;class C{constructor(){o.f[0]++,o.s[2]++,this.minValue=C.createElement("type_min"),o.s[3]++,this.maxValue=C.createElement("type_max"),o.s[4]++,this[20]=C.createElement("percent_20"),o.s[5]++,this[40]=C.createElement("percent_40"),o.s[6]++,this[60]=C.createElement("percent_60"),o.s[7]++,this[80]=C.createElement("percent_80")}static createElement(A){o.f[1]++;const e=(o.s[8]++,document.createElement("span"));return o.s[9]++,e.classList.add("goby-slider__value",`goby-slider__value_${A}`),o.s[10]++,e}refreshValueScale(A){o.f[2]++,o.s[11]++,({min:this.minValue.innerText,max:this.maxValue.innerText,20:this[20].innerText,40:this[40].innerText,60:this[60].innerText,80:this[80].innerText}=A)}centersValues(A,e){o.f[3]++,o.s[12]++;const n=A=>(o.f[4]++,o.s[13]++,0-(A.offsetWidth-e)/2+"px");o.s[14]++;const t=(n,t)=>(o.f[5]++,o.s[15]++,A*n-(t.offsetWidth-e)/2+"px");o.s[16]++,this.minValue.style.left=n(this.minValue),o.s[17]++,this.maxValue.style.right=n(this.maxValue),o.s[18]++,this[20].style.left=t(.2,this[20]),o.s[19]++,this[40].style.left=t(.4,this[40]),o.s[20]++,this[60].style.left=t(.6,this[60]),o.s[21]++,this[80].style.left=t(.8,this[80])}checkIsNeedToMakeHorizontally(A){return o.f[6]++,o.s[22]++,o.b[0][0]++,this.minValue.classList.contains("goby-slider__value_state_vertical")&&(o.b[0][1]++,this.maxValue.classList.contains("goby-slider__value_state_vertical"))&&(o.b[0][2]++,this[20].classList.contains("goby-slider__value_state_vertical"))&&(o.b[0][3]++,this[40].classList.contains("goby-slider__value_state_vertical"))&&(o.b[0][4]++,this[60].classList.contains("goby-slider__value_state_vertical"))&&(o.b[0][5]++,this[80].classList.contains("goby-slider__value_state_vertical"))&&(o.b[0][6]++,!A)}checkIsNeedToMakeVertical(A){return o.f[7]++,o.s[23]++,o.b[1][0]++,!(this.minValue.classList.contains("goby-slider__value_state_vertical")||(o.b[1][1]++,this.maxValue.classList.contains("goby-slider__value_state_vertical"))||(o.b[1][2]++,this[20].classList.contains("goby-slider__value_state_vertical"))||(o.b[1][3]++,this[40].classList.contains("goby-slider__value_state_vertical"))||(o.b[1][4]++,this[60].classList.contains("goby-slider__value_state_vertical"))||(o.b[1][5]++,this[80].classList.contains("goby-slider__value_state_vertical")))&&(o.b[1][6]++,A)}changePlane(A){o.f[8]++,o.s[24]++;const e=()=>{o.f[9]++,o.s[25]++,this.minValue.classList.toggle("goby-slider__value_state_vertical"),o.s[26]++,this.maxValue.classList.toggle("goby-slider__value_state_vertical"),o.s[27]++,this[20].classList.toggle("goby-slider__value_state_vertical"),o.s[28]++,this[40].classList.toggle("goby-slider__value_state_vertical"),o.s[29]++,this[60].classList.toggle("goby-slider__value_state_vertical"),o.s[30]++,this[80].classList.toggle("goby-slider__value_state_vertical")},n=(o.s[31]++,o.b[2][0]++,this.checkIsNeedToMakeVertical(A)||(o.b[2][1]++,this.checkIsNeedToMakeHorizontally(A)));o.s[32]++,n?(o.b[3][0]++,o.s[33]++,e()):o.b[3][1]++}hideValueScale(A){o.f[10]++,o.s[34]++;const e=A=>{o.f[11]++,o.s[35]++,this.minValue.style.display=A,o.s[36]++,this.maxValue.style.display=A,o.s[37]++,this[20].style.display=A,o.s[38]++,this[40].style.display=A,o.s[39]++,this[60].style.display=A,o.s[40]++,this[80].style.display=A};o.s[41]++,A?(o.b[4][1]++,o.s[43]++,e("inline-block")):(o.b[4][0]++,o.s[42]++,e("none"))}}o.s[44]++,e.ValuesScale=C},"./src/plugin/View/ValuesScale/interfaces.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\interfaces.ts",t="c6c75ba9ebe008e2a625e2650eb66e009de79fe0",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\interfaces.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\interfaces.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\interfaces.ts"],names:[],mappings:"",sourcesContent:["import { DataForValueScale } from '../../Model/types';\r\n\r\ninterface IValuesScale {\r\n  minValue: HTMLSpanElement;\r\n  maxValue: HTMLSpanElement;\r\n  20: HTMLSpanElement;\r\n  40: HTMLSpanElement;\r\n  60: HTMLSpanElement;\r\n  80: HTMLSpanElement;\r\n  refreshValueScale: (values: DataForValueScale) => void;\r\n  centersValues: (sliderWidth: number, handleWidth: number) => void;\r\n  changePlane: (isVertical: boolean) => void;\r\n  hideValueScale: (isValueScale: boolean) => void;\r\n}\r\n\r\nexport { IValuesScale };\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/ValuesScale/valueScale.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\valueScale.test.ts",l="d2c363b00a9ec8ab222cd28d7d85acc7cbac54fe",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\valueScale.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:22},end:{line:3,column:46}},2:{start:{line:4,column:0},end:{line:64,column:3}},3:{start:{line:6,column:4},end:{line:8,column:7}},4:{start:{line:7,column:8},end:{line:7,column:54}},5:{start:{line:9,column:4},end:{line:11,column:7}},6:{start:{line:10,column:8},end:{line:10,column:41}},7:{start:{line:12,column:4},end:{line:22,column:7}},8:{start:{line:13,column:8},end:{line:15,column:11}},9:{start:{line:16,column:8},end:{line:16,column:60}},10:{start:{line:17,column:8},end:{line:17,column:62}},11:{start:{line:18,column:8},end:{line:18,column:56}},12:{start:{line:19,column:8},end:{line:19,column:56}},13:{start:{line:20,column:8},end:{line:20,column:56}},14:{start:{line:21,column:8},end:{line:21,column:56}},15:{start:{line:23,column:4},end:{line:31,column:7}},16:{start:{line:24,column:8},end:{line:24,column:43}},17:{start:{line:25,column:8},end:{line:25,column:64}},18:{start:{line:26,column:8},end:{line:26,column:65}},19:{start:{line:27,column:8},end:{line:27,column:59}},20:{start:{line:28,column:8},end:{line:28,column:59}},21:{start:{line:29,column:8},end:{line:29,column:59}},22:{start:{line:30,column:8},end:{line:30,column:59}},23:{start:{line:32,column:4},end:{line:47,column:7}},24:{start:{line:33,column:8},end:{line:33,column:38}},25:{start:{line:34,column:8},end:{line:34,column:86}},26:{start:{line:35,column:8},end:{line:35,column:86}},27:{start:{line:36,column:8},end:{line:36,column:81}},28:{start:{line:37,column:8},end:{line:37,column:81}},29:{start:{line:38,column:8},end:{line:38,column:81}},30:{start:{line:39,column:8},end:{line:39,column:81}},31:{start:{line:40,column:8},end:{line:40,column:39}},32:{start:{line:41,column:8},end:{line:41,column:90}},33:{start:{line:42,column:8},end:{line:42,column:90}},34:{start:{line:43,column:8},end:{line:43,column:85}},35:{start:{line:44,column:8},end:{line:44,column:85}},36:{start:{line:45,column:8},end:{line:45,column:85}},37:{start:{line:46,column:8},end:{line:46,column:85}},38:{start:{line:48,column:4},end:{line:63,column:7}},39:{start:{line:49,column:8},end:{line:49,column:42}},40:{start:{line:50,column:8},end:{line:50,column:67}},41:{start:{line:51,column:8},end:{line:51,column:67}},42:{start:{line:52,column:8},end:{line:52,column:62}},43:{start:{line:53,column:8},end:{line:53,column:62}},44:{start:{line:54,column:8},end:{line:54,column:62}},45:{start:{line:55,column:8},end:{line:55,column:62}},46:{start:{line:56,column:8},end:{line:56,column:41}},47:{start:{line:57,column:8},end:{line:57,column:75}},48:{start:{line:58,column:8},end:{line:58,column:75}},49:{start:{line:59,column:8},end:{line:59,column:70}},50:{start:{line:60,column:8},end:{line:60,column:70}},51:{start:{line:61,column:8},end:{line:61,column:70}},52:{start:{line:62,column:8},end:{line:62,column:70}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:23},end:{line:4,column:24}},loc:{start:{line:4,column:29},end:{line:64,column:1}},line:4},1:{name:"(anonymous_1)",decl:{start:{line:6,column:15},end:{line:6,column:16}},loc:{start:{line:6,column:21},end:{line:8,column:5}},line:6},2:{name:"(anonymous_2)",decl:{start:{line:9,column:35},end:{line:9,column:36}},loc:{start:{line:9,column:41},end:{line:11,column:5}},line:9},3:{name:"(anonymous_3)",decl:{start:{line:12,column:54},end:{line:12,column:55}},loc:{start:{line:12,column:60},end:{line:22,column:5}},line:12},4:{name:"(anonymous_4)",decl:{start:{line:23,column:46},end:{line:23,column:47}},loc:{start:{line:23,column:52},end:{line:31,column:5}},line:23},5:{name:"(anonymous_5)",decl:{start:{line:32,column:62},end:{line:32,column:63}},loc:{start:{line:32,column:68},end:{line:47,column:5}},line:32},6:{name:"(anonymous_6)",decl:{start:{line:48,column:67},end:{line:48,column:68}},loc:{start:{line:48,column:73},end:{line:63,column:5}},line:48}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\valueScale.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\ValuesScale\\valueScale.test.ts"],names:[],mappings:"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",sourcesContent:["import { ValuesScale } from './ValuesScale';\r\n\r\ndescribe('ValueScale', () => {\r\n  let valuesScale: ValuesScale;\r\n\r\n  beforeEach(() => {\r\n    valuesScale = new ValuesScale();\r\n  });\r\n\r\n  it('ValueScale can be create', () => {\r\n    expect(valuesScale).toBeTruthy();\r\n  });\r\n\r\n  it('refreshValueScale() refresh scale correctly', () => {\r\n    valuesScale.refreshValueScale({\r\n      min: '0', max: '100', 20: '20', 40: '40', 60: '60', 80: '80',\r\n    });\r\n    expect(valuesScale.minValue.innerText).toEqual('0');\r\n    expect(valuesScale.maxValue.innerText).toEqual('100');\r\n    expect(valuesScale[20].innerText).toEqual('20');\r\n    expect(valuesScale[40].innerText).toEqual('40');\r\n    expect(valuesScale[60].innerText).toEqual('60');\r\n    expect(valuesScale[80].innerText).toEqual('80');\r\n  });\r\n\r\n  it('centersValues() calculate correctly', () => {\r\n    valuesScale.centersValues(100, 20);\r\n    expect(valuesScale.minValue.style.left).toEqual('10px');\r\n    expect(valuesScale.maxValue.style.right).toEqual('10px');\r\n    expect(valuesScale[20].style.left).toEqual('30px');\r\n    expect(valuesScale[40].style.left).toEqual('50px');\r\n    expect(valuesScale[60].style.left).toEqual('70px');\r\n    expect(valuesScale[80].style.left).toEqual('90px');\r\n  });\r\n\r\n  it('changePlane() operates the plane function correctly', () => {\r\n    valuesScale.changePlane(true);\r\n    expect(valuesScale.minValue).toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale.maxValue).toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[20]).toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[40]).toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[60]).toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[80]).toHaveClass('goby-slider__value_state_vertical');\r\n    valuesScale.changePlane(false);\r\n    expect(valuesScale.minValue).not.toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale.maxValue).not.toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[20]).not.toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[40]).not.toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[60]).not.toHaveClass('goby-slider__value_state_vertical');\r\n    expect(valuesScale[80]).not.toHaveClass('goby-slider__value_state_vertical');\r\n  });\r\n\r\n  it('hideValueScale() operates the display function correctly', () => {\r\n    valuesScale.hideValueScale(false);\r\n    expect(valuesScale.minValue.style.display).toEqual('none');\r\n    expect(valuesScale.maxValue.style.display).toEqual('none');\r\n    expect(valuesScale[20].style.display).toEqual('none');\r\n    expect(valuesScale[40].style.display).toEqual('none');\r\n    expect(valuesScale[60].style.display).toEqual('none');\r\n    expect(valuesScale[80].style.display).toEqual('none');\r\n    valuesScale.hideValueScale(true);\r\n    expect(valuesScale.minValue.style.display).toEqual('inline-block');\r\n    expect(valuesScale.maxValue.style.display).toEqual('inline-block');\r\n    expect(valuesScale[20].style.display).toEqual('inline-block');\r\n    expect(valuesScale[40].style.display).toEqual('inline-block');\r\n    expect(valuesScale[60].style.display).toEqual('inline-block');\r\n    expect(valuesScale[80].style.display).toEqual('inline-block');\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/ValuesScale/ValuesScale.ts"));C.s[2]++,describe("ValueScale",(()=>{let A;C.f[0]++,C.s[3]++,beforeEach((()=>{C.f[1]++,C.s[4]++,A=new a.ValuesScale})),C.s[5]++,it("ValueScale can be create",(()=>{C.f[2]++,C.s[6]++,expect(A).toBeTruthy()})),C.s[7]++,it("refreshValueScale() refresh scale correctly",(()=>{C.f[3]++,C.s[8]++,A.refreshValueScale({min:"0",max:"100",20:"20",40:"40",60:"60",80:"80"}),C.s[9]++,expect(A.minValue.innerText).toEqual("0"),C.s[10]++,expect(A.maxValue.innerText).toEqual("100"),C.s[11]++,expect(A[20].innerText).toEqual("20"),C.s[12]++,expect(A[40].innerText).toEqual("40"),C.s[13]++,expect(A[60].innerText).toEqual("60"),C.s[14]++,expect(A[80].innerText).toEqual("80")})),C.s[15]++,it("centersValues() calculate correctly",(()=>{C.f[4]++,C.s[16]++,A.centersValues(100,20),C.s[17]++,expect(A.minValue.style.left).toEqual("10px"),C.s[18]++,expect(A.maxValue.style.right).toEqual("10px"),C.s[19]++,expect(A[20].style.left).toEqual("30px"),C.s[20]++,expect(A[40].style.left).toEqual("50px"),C.s[21]++,expect(A[60].style.left).toEqual("70px"),C.s[22]++,expect(A[80].style.left).toEqual("90px")})),C.s[23]++,it("changePlane() operates the plane function correctly",(()=>{C.f[5]++,C.s[24]++,A.changePlane(!0),C.s[25]++,expect(A.minValue).toHaveClass("goby-slider__value_state_vertical"),C.s[26]++,expect(A.maxValue).toHaveClass("goby-slider__value_state_vertical"),C.s[27]++,expect(A[20]).toHaveClass("goby-slider__value_state_vertical"),C.s[28]++,expect(A[40]).toHaveClass("goby-slider__value_state_vertical"),C.s[29]++,expect(A[60]).toHaveClass("goby-slider__value_state_vertical"),C.s[30]++,expect(A[80]).toHaveClass("goby-slider__value_state_vertical"),C.s[31]++,A.changePlane(!1),C.s[32]++,expect(A.minValue).not.toHaveClass("goby-slider__value_state_vertical"),C.s[33]++,expect(A.maxValue).not.toHaveClass("goby-slider__value_state_vertical"),C.s[34]++,expect(A[20]).not.toHaveClass("goby-slider__value_state_vertical"),C.s[35]++,expect(A[40]).not.toHaveClass("goby-slider__value_state_vertical"),C.s[36]++,expect(A[60]).not.toHaveClass("goby-slider__value_state_vertical"),C.s[37]++,expect(A[80]).not.toHaveClass("goby-slider__value_state_vertical")})),C.s[38]++,it("hideValueScale() operates the display function correctly",(()=>{C.f[6]++,C.s[39]++,A.hideValueScale(!1),C.s[40]++,expect(A.minValue.style.display).toEqual("none"),C.s[41]++,expect(A.maxValue.style.display).toEqual("none"),C.s[42]++,expect(A[20].style.display).toEqual("none"),C.s[43]++,expect(A[40].style.display).toEqual("none"),C.s[44]++,expect(A[60].style.display).toEqual("none"),C.s[45]++,expect(A[80].style.display).toEqual("none"),C.s[46]++,A.hideValueScale(!0),C.s[47]++,expect(A.minValue.style.display).toEqual("inline-block"),C.s[48]++,expect(A.maxValue.style.display).toEqual("inline-block"),C.s[49]++,expect(A[20].style.display).toEqual("inline-block"),C.s[50]++,expect(A[40].style.display).toEqual("inline-block"),C.s[51]++,expect(A[60].style.display).toEqual("inline-block"),C.s[52]++,expect(A[80].style.display).toEqual("inline-block")}))}))},"./src/plugin/View/View.ts":function(A,e,n){"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\View.ts",l="7a5f213b43de3c4b29200e05bcb8322ebdde09d8",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\View.ts",statementMap:{0:{start:{line:2,column:17},end:{line:7,column:1}},1:{start:{line:3,column:12},end:{line:3,column:28}},2:{start:{line:3,column:34},end:{line:3,column:125}},3:{start:{line:4,column:4},end:{line:5,column:150}},4:{start:{line:4,column:79},end:{line:4,column:131}},5:{start:{line:5,column:9},end:{line:5,column:150}},6:{start:{line:5,column:58},end:{line:5,column:150}},7:{start:{line:5,column:81},end:{line:5,column:150}},8:{start:{line:6,column:4},end:{line:6,column:66}},9:{start:{line:8,column:0},end:{line:8,column:62}},10:{start:{line:9,column:0},end:{line:9,column:22}},11:{start:{line:10,column:29},end:{line:10,column:58}},12:{start:{line:11,column:17},end:{line:11,column:43}},13:{start:{line:12,column:18},end:{line:12,column:46}},14:{start:{line:13,column:19},end:{line:13,column:49}},15:{start:{line:14,column:27},end:{line:14,column:73}},16:{start:{line:15,column:22},end:{line:15,column:58}},17:{start:{line:16,column:19},end:{line:16,column:49}},18:{start:{line:17,column:11},end:{line:274,column:1}},19:{start:{line:19,column:8},end:{line:26,column:10}},20:{start:{line:27,column:8},end:{line:27,column:29}},21:{start:{line:28,column:8},end:{line:28,column:44}},22:{start:{line:29,column:8},end:{line:29,column:47}},23:{start:{line:30,column:8},end:{line:30,column:66}},24:{start:{line:31,column:8},end:{line:31,column:59}},25:{start:{line:32,column:8},end:{line:32,column:50}},26:{start:{line:33,column:8},end:{line:33,column:38}},27:{start:{line:34,column:8},end:{line:40,column:11}},28:{start:{line:43,column:8},end:{line:48,column:11}},29:{start:{line:49,column:8},end:{line:49,column:54}},30:{start:{line:53,column:8},end:{line:53,column:40}},31:{start:{line:54,column:8},end:{line:59,column:9}},32:{start:{line:55,column:12},end:{line:55,column:168}},33:{start:{line:58,column:12},end:{line:58,column:81}},34:{start:{line:62,column:8},end:{line:63,column:59}},35:{start:{line:66,column:8},end:{line:66,column:30}},36:{start:{line:67,column:8},end:{line:68,column:36}},37:{start:{line:68,column:12},end:{line:68,column:36}},38:{start:{line:69,column:8},end:{line:69,column:79}},39:{start:{line:70,column:8},end:{line:70,column:87}},40:{start:{line:71,column:8},end:{line:72,column:80}},41:{start:{line:72,column:12},end:{line:72,column:80}},42:{start:{line:73,column:8},end:{line:80,column:11}},43:{start:{line:83,column:8},end:{line:84,column:70}},44:{start:{line:84,column:12},end:{line:84,column:70}},45:{start:{line:85,column:8},end:{line:86,column:67}},46:{start:{line:86,column:12},end:{line:86,column:67}},47:{start:{line:87,column:8},end:{line:88,column:77}},48:{start:{line:88,column:12},end:{line:88,column:77}},49:{start:{line:89,column:8},end:{line:90,column:75}},50:{start:{line:90,column:12},end:{line:90,column:75}},51:{start:{line:91,column:8},end:{line:92,column:72}},52:{start:{line:92,column:12},end:{line:92,column:72}},53:{start:{line:95,column:8},end:{line:103,column:9}},54:{start:{line:96,column:12},end:{line:100,column:15}},55:{start:{line:101,column:12},end:{line:101,column:55}},56:{start:{line:102,column:12},end:{line:102,column:59}},57:{start:{line:104,column:8},end:{line:115,column:9}},58:{start:{line:105,column:12},end:{line:109,column:15}},59:{start:{line:110,column:12},end:{line:113,column:15}},60:{start:{line:114,column:12},end:{line:114,column:66}},61:{start:{line:116,column:8},end:{line:117,column:75}},62:{start:{line:117,column:12},end:{line:117,column:75}},63:{start:{line:118,column:8},end:{line:119,column:76}},64:{start:{line:119,column:12},end:{line:119,column:76}},65:{start:{line:120,column:8},end:{line:122,column:9}},66:{start:{line:121,column:12},end:{line:121,column:44}},67:{start:{line:125,column:33},end:{line:125,column:87}},68:{start:{line:126,column:35},end:{line:126,column:39}},69:{start:{line:127,column:8},end:{line:133,column:9}},70:{start:{line:128,column:12},end:{line:132,column:15}},71:{start:{line:134,column:37},end:{line:134,column:88}},72:{start:{line:135,column:8},end:{line:136,column:50}},73:{start:{line:136,column:12},end:{line:136,column:50}},74:{start:{line:139,column:8},end:{line:141,column:11}},75:{start:{line:140,column:12},end:{line:140,column:77}},76:{start:{line:142,column:8},end:{line:142,column:102}},77:{start:{line:143,column:8},end:{line:143,column:108}},78:{start:{line:144,column:8},end:{line:144,column:118}},79:{start:{line:145,column:8},end:{line:145,column:116}},80:{start:{line:146,column:8},end:{line:146,column:112}},81:{start:{line:147,column:8},end:{line:149,column:11}},82:{start:{line:148,column:12},end:{line:148,column:79}},83:{start:{line:150,column:8},end:{line:152,column:11}},84:{start:{line:151,column:12},end:{line:151,column:79}},85:{start:{line:153,column:8},end:{line:153,column:104}},86:{start:{line:154,column:8},end:{line:156,column:11}},87:{start:{line:155,column:12},end:{line:155,column:73}},88:{start:{line:157,column:8},end:{line:157,column:81}},89:{start:{line:158,column:8},end:{line:158,column:67}},90:{start:{line:161,column:23},end:{line:161,column:35}},91:{start:{line:162,column:8},end:{line:168,column:11}},92:{start:{line:171,column:24},end:{line:171,column:36}},93:{start:{line:172,column:8},end:{line:172,column:97}},94:{start:{line:175,column:24},end:{line:175,column:36}},95:{start:{line:176,column:8},end:{line:176,column:52}},96:{start:{line:177,column:8},end:{line:181,column:11}},97:{start:{line:182,column:8},end:{line:185,column:11}},98:{start:{line:186,column:8},end:{line:186,column:62}},99:{start:{line:189,column:24},end:{line:189,column:36}},100:{start:{line:190,column:8},end:{line:190,column:54}},101:{start:{line:191,column:8},end:{line:195,column:11}},102:{start:{line:196,column:8},end:{line:196,column:62}},103:{start:{line:197,column:8},end:{line:197,column:66}},104:{start:{line:200,column:24},end:{line:200,column:36}},105:{start:{line:201,column:8},end:{line:201,column:56}},106:{start:{line:202,column:8},end:{line:202,column:71}},107:{start:{line:205,column:24},end:{line:205,column:36}},108:{start:{line:206,column:8},end:{line:206,column:59}},109:{start:{line:207,column:8},end:{line:207,column:72}},110:{start:{line:210,column:24},end:{line:210,column:36}},111:{start:{line:212,column:8},end:{line:217,column:9}},112:{start:{line:213,column:12},end:{line:213,column:28}},113:{start:{line:216,column:12},end:{line:216,column:26}},114:{start:{line:218,column:8},end:{line:218,column:91}},115:{start:{line:221,column:24},end:{line:221,column:36}},116:{start:{line:222,column:8},end:{line:222,column:56}},117:{start:{line:223,column:8},end:{line:229,column:9}},118:{start:{line:224,column:12},end:{line:224,column:64}},119:{start:{line:225,column:12},end:{line:225,column:44}},120:{start:{line:228,column:12},end:{line:228,column:80}},121:{start:{line:232,column:24},end:{line:232,column:36}},122:{start:{line:234,column:8},end:{line:239,column:9}},123:{start:{line:235,column:12},end:{line:235,column:27}},124:{start:{line:238,column:12},end:{line:238,column:27}},125:{start:{line:240,column:8},end:{line:240,column:101}},126:{start:{line:243,column:24},end:{line:243,column:36}},127:{start:{line:244,column:8},end:{line:244,column:53}},128:{start:{line:245,column:8},end:{line:245,column:87}},129:{start:{line:248,column:32},end:{line:248,column:110}},130:{start:{line:249,column:36},end:{line:249,column:140}},131:{start:{line:250,column:33},end:{line:250,column:172}},132:{start:{line:251,column:8},end:{line:252,column:19}},133:{start:{line:252,column:12},end:{line:252,column:19}},134:{start:{line:253,column:31},end:{line:253,column:98}},135:{start:{line:254,column:29},end:{line:258,column:10}},136:{start:{line:259,column:8},end:{line:259,column:60}},137:{start:{line:260,column:31},end:{line:260,column:146}},138:{start:{line:261,column:8},end:{line:265,column:11}},139:{start:{line:266,column:8},end:{line:266,column:49}},140:{start:{line:269,column:8},end:{line:269,column:79}},141:{start:{line:270,column:8},end:{line:270,column:87}},142:{start:{line:271,column:8},end:{line:272,column:80}},143:{start:{line:272,column:12},end:{line:272,column:80}},144:{start:{line:275,column:0},end:{line:277,column:9}},145:{start:{line:278,column:0},end:{line:278,column:20}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:2,column:46},end:{line:2,column:47}},loc:{start:{line:2,column:87},end:{line:7,column:1}},line:2},1:{name:"(anonymous_1)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:34},end:{line:41,column:5}},line:18},2:{name:"(anonymous_2)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:21},end:{line:50,column:5}},line:42},3:{name:"(anonymous_3)",decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:23},end:{line:60,column:5}},line:51},4:{name:"(anonymous_4)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:26},end:{line:64,column:5}},line:61},5:{name:"(anonymous_5)",decl:{start:{line:65,column:4},end:{line:65,column:5}},loc:{start:{line:65,column:26},end:{line:81,column:5}},line:65},6:{name:"(anonymous_6)",decl:{start:{line:82,column:4},end:{line:82,column:5}},loc:{start:{line:82,column:31},end:{line:93,column:5}},line:82},7:{name:"(anonymous_7)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:24},end:{line:123,column:5}},line:94},8:{name:"(anonymous_8)",decl:{start:{line:124,column:4},end:{line:124,column:5}},loc:{start:{line:124,column:35},end:{line:137,column:5}},line:124},9:{name:"(anonymous_9)",decl:{start:{line:138,column:4},end:{line:138,column:5}},loc:{start:{line:138,column:25},end:{line:159,column:5}},line:138},10:{name:"(anonymous_10)",decl:{start:{line:139,column:48},end:{line:139,column:49}},loc:{start:{line:139,column:64},end:{line:141,column:9}},line:139},11:{name:"(anonymous_11)",decl:{start:{line:147,column:99},end:{line:147,column:100}},loc:{start:{line:147,column:115},end:{line:149,column:9}},line:147},12:{name:"(anonymous_12)",decl:{start:{line:150,column:107},end:{line:150,column:108}},loc:{start:{line:150,column:123},end:{line:152,column:9}},line:150},13:{name:"(anonymous_13)",decl:{start:{line:154,column:65},end:{line:154,column:66}},loc:{start:{line:154,column:77},end:{line:156,column:9}},line:154},14:{name:"(anonymous_14)",decl:{start:{line:160,column:4},end:{line:160,column:5}},loc:{start:{line:160,column:29},end:{line:169,column:5}},line:160},15:{name:"(anonymous_15)",decl:{start:{line:170,column:4},end:{line:170,column:5}},loc:{start:{line:170,column:33},end:{line:173,column:5}},line:170},16:{name:"(anonymous_16)",decl:{start:{line:174,column:4},end:{line:174,column:5}},loc:{start:{line:174,column:32},end:{line:187,column:5}},line:174},17:{name:"(anonymous_17)",decl:{start:{line:188,column:4},end:{line:188,column:5}},loc:{start:{line:188,column:35},end:{line:198,column:5}},line:188},18:{name:"(anonymous_18)",decl:{start:{line:199,column:4},end:{line:199,column:5}},loc:{start:{line:199,column:40},end:{line:203,column:5}},line:199},19:{name:"(anonymous_19)",decl:{start:{line:204,column:4},end:{line:204,column:5}},loc:{start:{line:204,column:36},end:{line:208,column:5}},line:204},20:{name:"(anonymous_20)",decl:{start:{line:209,column:4},end:{line:209,column:5}},loc:{start:{line:209,column:34},end:{line:219,column:5}},line:209},21:{name:"(anonymous_21)",decl:{start:{line:220,column:4},end:{line:220,column:5}},loc:{start:{line:220,column:33},end:{line:230,column:5}},line:220},22:{name:"(anonymous_22)",decl:{start:{line:231,column:4},end:{line:231,column:5}},loc:{start:{line:231,column:34},end:{line:241,column:5}},line:231},23:{name:"(anonymous_23)",decl:{start:{line:242,column:4},end:{line:242,column:5}},loc:{start:{line:242,column:37},end:{line:246,column:5}},line:242},24:{name:"(anonymous_24)",decl:{start:{line:247,column:4},end:{line:247,column:5}},loc:{start:{line:247,column:29},end:{line:267,column:5}},line:247},25:{name:"(anonymous_25)",decl:{start:{line:268,column:4},end:{line:268,column:5}},loc:{start:{line:268,column:25},end:{line:273,column:5}},line:268}},branchMap:{0:{loc:{start:{line:2,column:17},end:{line:7,column:1}},type:"binary-expr",locations:[{start:{line:2,column:18},end:{line:2,column:22}},{start:{line:2,column:26},end:{line:2,column:41}},{start:{line:2,column:46},end:{line:7,column:1}}],line:2},1:{loc:{start:{line:3,column:34},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:42},end:{line:3,column:48}},{start:{line:3,column:51},end:{line:3,column:125}}],line:3},2:{loc:{start:{line:3,column:51},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:67},end:{line:3,column:118}},{start:{line:3,column:121},end:{line:3,column:125}}],line:3},3:{loc:{start:{line:4,column:4},end:{line:5,column:150}},type:"if",locations:[{start:{line:4,column:4},end:{line:5,column:150}},{start:{line:4,column:4},end:{line:5,column:150}}],line:4},4:{loc:{start:{line:4,column:8},end:{line:4,column:77}},type:"binary-expr",locations:[{start:{line:4,column:8},end:{line:4,column:35}},{start:{line:4,column:39},end:{line:4,column:77}}],line:4},5:{loc:{start:{line:5,column:58},end:{line:5,column:150}},type:"if",locations:[{start:{line:5,column:58},end:{line:5,column:150}},{start:{line:5,column:58},end:{line:5,column:150}}],line:5},6:{loc:{start:{line:5,column:85},end:{line:5,column:149}},type:"binary-expr",locations:[{start:{line:5,column:86},end:{line:5,column:143}},{start:{line:5,column:148},end:{line:5,column:149}}],line:5},7:{loc:{start:{line:5,column:86},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:94},end:{line:5,column:98}},{start:{line:5,column:101},end:{line:5,column:143}}],line:5},8:{loc:{start:{line:5,column:101},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:109},end:{line:5,column:126}},{start:{line:5,column:129},end:{line:5,column:143}}],line:5},9:{loc:{start:{line:6,column:11},end:{line:6,column:62}},type:"binary-expr",locations:[{start:{line:6,column:11},end:{line:6,column:16}},{start:{line:6,column:20},end:{line:6,column:21}},{start:{line:6,column:25},end:{line:6,column:62}}],line:6},10:{loc:{start:{line:54,column:8},end:{line:59,column:9}},type:"if",locations:[{start:{line:54,column:8},end:{line:59,column:9}},{start:{line:54,column:8},end:{line:59,column:9}}],line:54},11:{loc:{start:{line:55,column:12},end:{line:55,column:167}},type:"cond-expr",locations:[{start:{line:55,column:99},end:{line:55,column:105}},{start:{line:55,column:108},end:{line:55,column:167}}],line:55},12:{loc:{start:{line:55,column:12},end:{line:55,column:96}},type:"binary-expr",locations:[{start:{line:55,column:12},end:{line:55,column:79}},{start:{line:55,column:83},end:{line:55,column:96}}],line:55},13:{loc:{start:{line:62,column:15},end:{line:63,column:58}},type:"binary-expr",locations:[{start:{line:62,column:15},end:{line:62,column:79}},{start:{line:63,column:15},end:{line:63,column:58}}],line:62},14:{loc:{start:{line:67,column:8},end:{line:68,column:36}},type:"if",locations:[{start:{line:67,column:8},end:{line:68,column:36}},{start:{line:67,column:8},end:{line:68,column:36}}],line:67},15:{loc:{start:{line:71,column:8},end:{line:72,column:80}},type:"if",locations:[{start:{line:71,column:8},end:{line:72,column:80}},{start:{line:71,column:8},end:{line:72,column:80}}],line:71},16:{loc:{start:{line:83,column:8},end:{line:84,column:70}},type:"if",locations:[{start:{line:83,column:8},end:{line:84,column:70}},{start:{line:83,column:8},end:{line:84,column:70}}],line:83},17:{loc:{start:{line:85,column:8},end:{line:86,column:67}},type:"if",locations:[{start:{line:85,column:8},end:{line:86,column:67}},{start:{line:85,column:8},end:{line:86,column:67}}],line:85},18:{loc:{start:{line:87,column:8},end:{line:88,column:77}},type:"if",locations:[{start:{line:87,column:8},end:{line:88,column:77}},{start:{line:87,column:8},end:{line:88,column:77}}],line:87},19:{loc:{start:{line:89,column:8},end:{line:90,column:75}},type:"if",locations:[{start:{line:89,column:8},end:{line:90,column:75}},{start:{line:89,column:8},end:{line:90,column:75}}],line:89},20:{loc:{start:{line:91,column:8},end:{line:92,column:72}},type:"if",locations:[{start:{line:91,column:8},end:{line:92,column:72}},{start:{line:91,column:8},end:{line:92,column:72}}],line:91},21:{loc:{start:{line:95,column:8},end:{line:103,column:9}},type:"if",locations:[{start:{line:95,column:8},end:{line:103,column:9}},{start:{line:95,column:8},end:{line:103,column:9}}],line:95},22:{loc:{start:{line:104,column:8},end:{line:115,column:9}},type:"if",locations:[{start:{line:104,column:8},end:{line:115,column:9}},{start:{line:104,column:8},end:{line:115,column:9}}],line:104},23:{loc:{start:{line:116,column:8},end:{line:117,column:75}},type:"if",locations:[{start:{line:116,column:8},end:{line:117,column:75}},{start:{line:116,column:8},end:{line:117,column:75}}],line:116},24:{loc:{start:{line:118,column:8},end:{line:119,column:76}},type:"if",locations:[{start:{line:118,column:8},end:{line:119,column:76}},{start:{line:118,column:8},end:{line:119,column:76}}],line:118},25:{loc:{start:{line:120,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:120,column:8},end:{line:122,column:9}},{start:{line:120,column:8},end:{line:122,column:9}}],line:120},26:{loc:{start:{line:125,column:33},end:{line:125,column:87}},type:"binary-expr",locations:[{start:{line:125,column:33},end:{line:125,column:58}},{start:{line:125,column:62},end:{line:125,column:87}}],line:125},27:{loc:{start:{line:127,column:8},end:{line:133,column:9}},type:"if",locations:[{start:{line:127,column:8},end:{line:133,column:9}},{start:{line:127,column:8},end:{line:133,column:9}}],line:127},28:{loc:{start:{line:134,column:37},end:{line:134,column:88}},type:"binary-expr",locations:[{start:{line:134,column:37},end:{line:134,column:57}},{start:{line:134,column:61},end:{line:134,column:88}}],line:134},29:{loc:{start:{line:135,column:8},end:{line:136,column:50}},type:"if",locations:[{start:{line:135,column:8},end:{line:136,column:50}},{start:{line:135,column:8},end:{line:136,column:50}}],line:135},30:{loc:{start:{line:212,column:8},end:{line:217,column:9}},type:"if",locations:[{start:{line:212,column:8},end:{line:217,column:9}},{start:{line:212,column:8},end:{line:217,column:9}}],line:212},31:{loc:{start:{line:223,column:8},end:{line:229,column:9}},type:"if",locations:[{start:{line:223,column:8},end:{line:229,column:9}},{start:{line:223,column:8},end:{line:229,column:9}}],line:223},32:{loc:{start:{line:234,column:8},end:{line:239,column:9}},type:"if",locations:[{start:{line:234,column:8},end:{line:239,column:9}},{start:{line:234,column:8},end:{line:239,column:9}}],line:234},33:{loc:{start:{line:248,column:32},end:{line:248,column:110}},type:"binary-expr",locations:[{start:{line:248,column:32},end:{line:248,column:71}},{start:{line:248,column:75},end:{line:248,column:110}}],line:248},34:{loc:{start:{line:251,column:8},end:{line:252,column:19}},type:"if",locations:[{start:{line:251,column:8},end:{line:252,column:19}},{start:{line:251,column:8},end:{line:252,column:19}}],line:251},35:{loc:{start:{line:253,column:31},end:{line:253,column:98}},type:"cond-expr",locations:[{start:{line:253,column:61},end:{line:253,column:77}},{start:{line:253,column:80},end:{line:253,column:98}}],line:253},36:{loc:{start:{line:271,column:8},end:{line:272,column:80}},type:"if",locations:[{start:{line:271,column:8},end:{line:272,column:80}},{start:{line:271,column:8},end:{line:272,column:80}}],line:271}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0,118:0,119:0,120:0,121:0,122:0,123:0,124:0,125:0,126:0,127:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:0,136:0,137:0,138:0,139:0,140:0,141:0,142:0,143:0,144:0,145:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0},b:{0:[0,0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0],26:[0,0],27:[0,0],28:[0,0],29:[0,0],30:[0,0],31:[0,0],32:[0,0],33:[0,0],34:[0,0],35:[0,0],36:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\View.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\View.ts"],names:[],mappings:";;;;;;;;;AAAA,2DAA0C;AAC1C,4CAAyC;AACzC,+CAA4C;AAC5C,kDAA+C;AAC/C,0EAAuE;AACvE,2DAAwD;AACxD,kDAA+C;AAS/C,IAAa,IAAI,GAAjB,MAAa,IAAI;IA0Bf,YAAY,QAA2B,EAAE,MAAmB;QATrD,uBAAkB,GAAuB;YAC9C,gBAAgB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACzC,wBAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACjD,aAAa,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACtC,uBAAuB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YAChD,iBAAiB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YAC1C,2BAA2B,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SACrD,CAAC;QAGA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,mCAAgB,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YAC1B,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;YACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAChC,aAAa,EAAE,IAAI,CAAC,aAAa;SAClC,CAAC,CAAC;IACL,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YACxB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;YAC7B,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAChC,UAAU,EAAE,IAAI,CAAC,WAAW;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAEO,gBAAgB;;QACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAEhC,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACnD,MAAA,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,0CAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAkB,CAAC,CAAC;SAChH;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAkB,CAAC,CAAC;SACvE;IACH,CAAC;IAEO,mBAAmB;QACzB,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC;eAClE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,QAAQ,CAAC;IACnD,CAAC;IAEM,mBAAmB;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ;YAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEzD,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QACvE,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QAE/E,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAAE,IAAI,CAAC,kBAAkB,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QAEpG,IAAI,CAAC,UAAU,CAAC;YACd,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;YACrC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;YACjC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;YACrC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa;YAC/C,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU;YACzC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;SACpC,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,OAA6B;QACrD,IAAI,OAAO,CAAC,QAAQ;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAY,CAAC,OAAO,GAAG,IAAI,CAAC;QACjF,IAAI,OAAO,CAAC,MAAM;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5E,IAAI,OAAO,CAAC,aAAa;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC;QAC7F,IAAI,OAAO,CAAC,UAAU;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,gBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC;QACxF,IAAI,OAAO,CAAC,OAAO;YAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAc,CAAC,OAAO,GAAG,IAAI,CAAC;IACpF,CAAC;IAEM,UAAU,CAAC,OAA6B;QAC7C,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;gBACtB,UAAU,EAAE,OAAO,CAAC,QAAQ;gBAC5B,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE;gBAClC,QAAQ,EAAE,IAAI,CAAC,kBAAkB;aAClC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAChD;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;gBACjC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;gBACnC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAClC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;aAC5C,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC;gBACjC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;gBACnC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW;aACjD,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,OAAO,CAAC,UAAU;YAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxF,IAAI,CAAC,OAAO,CAAC,aAAa;YAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC5F,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SACjC;IACH,CAAC;IAEM,oBAAoB,CAAC,QAAqB;QAC/C,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,KAAK,KAAK,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC;QAChF,IAAI,oBAAoB,GAAY,IAAI,CAAC;QAEzC,IAAI,gBAAgB,EAAE;YACpB,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE;gBAC1D,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAClC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;gBACnC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;aAC5C,CAAC,CAAC;SACJ;QAED,MAAM,oBAAoB,GAAG,oBAAoB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACjF,IAAI,oBAAoB;YAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAEM,kBAAkB;QACvB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,UAA2B,EAAQ,EAAE;YAC5E,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/F,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACrG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,gBAAiB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAC/G,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAmB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC7G,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACzG,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,CACxF,CAAC,UAAwC,EAAQ,EAAE;YACjD,UAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACtE,CAAC,CACF,CAAC;QACF,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,OAAO,CAChG,CAAC,UAAwC,EAAQ,EAAE;YACjD,UAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACtE,CAAC,CACF,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,MAAuB,EAAO,EAAE;YACxF,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC7D,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,MAAM,GAAoB,KAAK,CAAC,MAAyB,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;YAC3B,SAAS,EAAE;gBACT,MAAM;gBACN,CAAC,EAAE,KAAK,CAAC,OAAO;gBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB,CAAC,KAAY;QACxC,MAAM,OAAO,GAAoB,KAAK,CAAC,MAAyB,CAAC;QACjE,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC;IAC3F,CAAC;IAEO,oBAAoB,CAAC,KAAY;QACvC,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QAEnE,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;YACnC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;YAClC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;SAC5C,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;YACnC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW;SACjD,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAEO,uBAAuB,CAAC,KAAY;QAC1C,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QAEnE,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACtB,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;YACvC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE;YAClC,QAAQ,EAAE,IAAI,CAAC,kBAAkB;SAClC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAEO,4BAA4B,CAAC,KAAY;QAC/C,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QAEnE,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACjE,CAAC;IAEO,wBAAwB,CAAC,KAAY;QAC3C,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QAEnE,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAClE,CAAC;IAEO,sBAAsB,CAAC,KAAY;QACzC,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QACnE,IAAI,MAAc,CAAC;QAEnB,IAAI,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE;YACxD,MAAM,GAAG,MAAM,CAAC;SACjB;aAAM;YACL,MAAM,GAAG,IAAI,CAAC;SACf;QAED,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC;IACrF,CAAC;IAEO,qBAAqB,CAAC,KAAY;QACxC,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QAEnE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAU,CAAC,KAAK,GAAG,EAAE,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SACrE;IACH,CAAC;IAEO,sBAAsB,CAAC,KAAY;QACzC,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QACnE,IAAI,MAAc,CAAC;QAEnB,IAAI,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE;YAC3D,MAAM,GAAG,KAAK,CAAC;SAChB;aAAM;YACL,MAAM,GAAG,KAAK,CAAC;SAChB;QAED,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC;IAC/F,CAAC;IAEO,yBAAyB,CAAC,KAAY;QAC5C,MAAM,OAAO,GAAqB,KAAK,CAAC,MAA0B,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IACjF,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACvG,MAAM,kBAAkB,GAAW,CACjC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC,CACzG,CAAC;QACF,MAAM,gBAAgB,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,GAAG,CAChE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC,CACzG,CAAC;QACF,IAAI,eAAe;YAAE,OAAO;QAE5B,MAAM,cAAc,GAAW,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,kBAAkB,CAAC;QACnG,MAAM,YAAY,GAAoB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;YACrE,cAAc;YACd,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;YAClC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,GAAG,YAAY,CAAC;QACpD,MAAM,cAAc,GAAW,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CACrE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,EACzD,cAAc,CACf,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC7B,MAAM,EAAE,YAAY;YACpB,KAAK,EAAE,cAAc;YACrB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EAAE,CAAC;IAC3C,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QACvE,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QAC/E,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAAE,IAAI,CAAC,kBAAkB,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IACtG,CAAC;CACF,CAAA;AAjTY,IAAI;IADhB,4BAAQ;GACI,IAAI,CAiThB;AAjTY,oBAAI",sourcesContent:["import autobind from 'autobind-decorator';\r\nimport { Slider } from './Slider/Slider';\r\nimport { Handles } from './Handles/Handles';\r\nimport { Movement } from './Movement/Movement';\r\nimport { SelectedInterval } from './SelectedInterval/SelectedInterval';\r\nimport { ValuesScale } from './ValuesScale/ValuesScale';\r\nimport { SideMenu } from './SideMenu/SideMenu';\r\nimport {\r\n  RefreshData,\r\n  BasicViewSettings,\r\n  DataRequestToModel,\r\n  TargetsForViewUpdate,\r\n} from './types';\r\n\r\n@autobind\r\nexport class View {\r\n  readonly target: HTMLElement;\r\n\r\n  readonly slider: Slider;\r\n\r\n  readonly handles: Handles;\r\n\r\n  readonly movement: Movement;\r\n\r\n  readonly interval: SelectedInterval;\r\n\r\n  readonly valuesScale: ValuesScale;\r\n\r\n  readonly sideMenu: SideMenu;\r\n\r\n  public basicSettings: BasicViewSettings;\r\n\r\n  public dataRequestToModel: DataRequestToModel = {\r\n    needDataForScale: { name: '', value: '' },\r\n    needDataForStartPosition: { name: '', value: '' },\r\n    needStepWidth: { name: '', value: '' },\r\n    needApplyValueFromScale: { name: '', value: '' },\r\n    needApplyNewValue: { name: '', value: '' },\r\n    needChangeSliderValuesRange: { name: '', value: '' },\r\n  };\r\n\r\n  constructor(settings: BasicViewSettings, target: HTMLElement) {\r\n    this.target = target;\r\n    this.slider = new Slider();\r\n    this.handles = new Handles();\r\n    this.interval = new SelectedInterval();\r\n    this.valuesScale = new ValuesScale();\r\n    this.sideMenu = new SideMenu();\r\n    this.basicSettings = settings;\r\n    this.movement = new Movement({\r\n      slider: this.slider.slider,\r\n      fromHandle: this.handles.fromHandle,\r\n      toHandle: this.handles.toHandle,\r\n      interval: this.interval.interval,\r\n      basicSettings: this.basicSettings,\r\n    });\r\n  }\r\n\r\n  private addSliderToDOM(): void {\r\n    this.slider.collectSlider({\r\n      from: this.handles.fromHandle,\r\n      to: this.handles.toHandle,\r\n      interval: this.interval.interval,\r\n      valueScale: this.valuesScale,\r\n    });\r\n    this.target.append(this.slider.sliderWrapper);\r\n  }\r\n\r\n  private addSideMenuToDOM(): void {\r\n    this.sideMenu.collectSideMenu();\r\n\r\n    if (typeof this.basicSettings.sideMenu === 'string') {\r\n      document.querySelector(this.basicSettings.sideMenu)?.append(this.sideMenu.sideMenuElements.sideMenuContainer!);\r\n    } else {\r\n      this.target.append(this.sideMenu.sideMenuElements.sideMenuContainer!);\r\n    }\r\n  }\r\n\r\n  private checkIsStepRequired(): boolean {\r\n    return Object.prototype.hasOwnProperty.call(this.basicSettings, 'step')\r\n      && typeof this.basicSettings.step === 'number';\r\n  }\r\n\r\n  public prepareSliderForUse(): void {\r\n    this.addSliderToDOM();\r\n\r\n    if (this.basicSettings.sideMenu) this.addSideMenuToDOM();\r\n\r\n    this.dataRequestToModel.needDataForScale = { name: '', value: 'true' };\r\n    this.dataRequestToModel.needDataForStartPosition = { name: '', value: 'true' };\r\n\r\n    if (this.checkIsStepRequired()) this.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n\r\n    this.updateView({\r\n      vertical: this.basicSettings.vertical,\r\n      double: this.basicSettings.double,\r\n      sideMenu: this.basicSettings.sideMenu,\r\n      handlesValues: this.basicSettings.handlesValues,\r\n      valueScale: this.basicSettings.valueScale,\r\n      integer: this.basicSettings.integer,\r\n    });\r\n  }\r\n\r\n  private turnOnMenuToggles(targets: TargetsForViewUpdate): void {\r\n    if (targets.vertical) this.sideMenu.sideMenuElements.planeToggle!.checked = true;\r\n    if (targets.double) this.sideMenu.sideMenuElements.toToggle!.checked = true;\r\n    if (targets.handlesValues) this.sideMenu.sideMenuElements.handleValuesToggle!.checked = true;\r\n    if (targets.valueScale) this.sideMenu.sideMenuElements.valueScaleToggle!.checked = true;\r\n    if (targets.integer) this.sideMenu.sideMenuElements.integerToggle!.checked = true;\r\n  }\r\n\r\n  public updateView(targets: TargetsForViewUpdate): void {\r\n    if (targets.vertical) {\r\n      this.slider.changePlane({\r\n        isVertical: targets.vertical,\r\n        isStep: this.checkIsStepRequired(),\r\n        requests: this.dataRequestToModel,\r\n      });\r\n      this.handles.changePlane(targets.vertical);\r\n      this.valuesScale.changePlane(targets.vertical);\r\n    }\r\n    if (!targets.double) {\r\n      this.handles.controlHandlesDisplay({\r\n        isDouble: this.basicSettings.double,\r\n        positions: this.movement.positions,\r\n        sliderWidth: this.slider.slider.offsetWidth,\r\n      });\r\n      this.interval.hideSelectedInterval({\r\n        isDouble: this.basicSettings.double,\r\n        handleWidth: this.handles.fromHandle.offsetWidth,\r\n      });\r\n      this.sideMenu.hideToValues(this.basicSettings.double);\r\n    }\r\n    if (!targets.valueScale) this.valuesScale.hideValueScale(this.basicSettings.valueScale);\r\n    if (!targets.handlesValues) this.handles.hideHandleValues(this.basicSettings.handlesValues);\r\n    if (targets.sideMenu) {\r\n      this.turnOnMenuToggles(targets);\r\n    }\r\n  }\r\n\r\n  public refreshAllComponents(settings: RefreshData): void {\r\n    const isTargetNotRange = settings.target !== 'min' && settings.target !== 'max';\r\n    let handlesRefreshResult: boolean = true;\r\n\r\n    if (isTargetNotRange) {\r\n      handlesRefreshResult = this.handles.refreshValues(settings, {\r\n        positions: this.movement.positions,\r\n        isDouble: this.basicSettings.double,\r\n        sliderWidth: this.slider.slider.offsetWidth,\r\n      });\r\n    }\r\n\r\n    const isNeedSideMenuUpdate = handlesRefreshResult && this.basicSettings.sideMenu;\r\n    if (isNeedSideMenuUpdate) this.sideMenu.refreshValues(settings);\r\n  }\r\n\r\n  public bindEventListeners(): void {\r\n    Object.values(this.valuesScale).forEach((scaleValue: HTMLSpanElement): void => {\r\n      scaleValue.addEventListener('click', this.handleScaleValueClick);\r\n    });\r\n    this.sideMenu.sideMenuElements.toToggle!.addEventListener('change', this.handleToToggleChange);\r\n    this.sideMenu.sideMenuElements.planeToggle!.addEventListener('change', this.handlePlaneToggleChange);\r\n    this.sideMenu.sideMenuElements.valueScaleToggle!.addEventListener('change', this.handleValueScaleToggleChange);\r\n    this.sideMenu.sideMenuElements.handleValuesToggle!.addEventListener('change', this.handleHandleValuesChange);\r\n    this.sideMenu.sideMenuElements.integerToggle!.addEventListener('change', this.handleIntegerToggleChange);\r\n    [this.sideMenu.sideMenuElements.fromInput, this.sideMenu.sideMenuElements.toInput].forEach(\r\n      (valueInput: HTMLInputElement | undefined): void => {\r\n        valueInput!.addEventListener('change', this.handleValueInputChange);\r\n      },\r\n    );\r\n    [this.sideMenu.sideMenuElements.minimumInput, this.sideMenu.sideMenuElements.maximumInput].forEach(\r\n      (rangeInput: HTMLInputElement | undefined): void => {\r\n        rangeInput!.addEventListener('change', this.handleRangeInputChange);\r\n      },\r\n    );\r\n    this.sideMenu.sideMenuElements.stepInput!.addEventListener('change', this.handleStepInputChange);\r\n    [this.handles.fromHandle, this.handles.toHandle].forEach((handle: HTMLSpanElement):void => {\r\n      handle.addEventListener('mousedown', this.handleHandleClick);\r\n    });\r\n    this.slider.slider.addEventListener('mousedown', this.handleSliderClick);\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  private handleHandleClick(event: MouseEvent): void {\r\n    const target: HTMLSpanElement = event.target as HTMLSpanElement;\r\n    this.movement.handleListener({\r\n      eventInfo: {\r\n        target,\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      },\r\n    });\r\n  }\r\n\r\n  private handleScaleValueClick(event: Event): void {\r\n    const element: HTMLSpanElement = event.target as HTMLSpanElement;\r\n    this.dataRequestToModel.needApplyValueFromScale = { name: '', value: element.innerText };\r\n  }\r\n\r\n  private handleToToggleChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n\r\n    this.basicSettings.double = element.checked;\r\n    this.handles.controlHandlesDisplay({\r\n      isDouble: this.basicSettings.double,\r\n      positions: this.movement.positions,\r\n      sliderWidth: this.slider.slider.offsetWidth,\r\n    });\r\n    this.interval.hideSelectedInterval({\r\n      isDouble: this.basicSettings.double,\r\n      handleWidth: this.handles.fromHandle.offsetWidth,\r\n    });\r\n    this.sideMenu.hideToValues(this.basicSettings.double);\r\n  }\r\n\r\n  private handlePlaneToggleChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n\r\n    this.basicSettings.vertical = element.checked;\r\n    this.slider.changePlane({\r\n      isVertical: this.basicSettings.vertical,\r\n      isStep: this.checkIsStepRequired(),\r\n      requests: this.dataRequestToModel,\r\n    });\r\n    this.handles.changePlane(this.basicSettings.vertical);\r\n    this.valuesScale.changePlane(this.basicSettings.vertical);\r\n  }\r\n\r\n  private handleValueScaleToggleChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n\r\n    this.basicSettings.valueScale = element.checked;\r\n    this.valuesScale.hideValueScale(this.basicSettings.valueScale);\r\n  }\r\n\r\n  private handleHandleValuesChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n\r\n    this.basicSettings.handlesValues = element.checked;\r\n    this.handles.hideHandleValues(this.basicSettings.handlesValues);\r\n  }\r\n\r\n  private handleValueInputChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n    let target: string;\r\n\r\n    if (element === this.sideMenu.sideMenuElements.fromInput) {\r\n      target = 'from';\r\n    } else {\r\n      target = 'to';\r\n    }\r\n\r\n    this.dataRequestToModel.needApplyNewValue = { name: target, value: element.value };\r\n  }\r\n\r\n  private handleStepInputChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n\r\n    this.basicSettings.step = Number(element.value);\r\n    if (element.value === '0') {\r\n      this.sideMenu.sideMenuElements.stepInput!.value = '';\r\n      this.basicSettings.step = false;\r\n    } else {\r\n      this.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n    }\r\n  }\r\n\r\n  private handleRangeInputChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n    let target: string;\r\n\r\n    if (element === this.sideMenu.sideMenuElements.minimumInput) {\r\n      target = 'min';\r\n    } else {\r\n      target = 'max';\r\n    }\r\n\r\n    this.dataRequestToModel.needChangeSliderValuesRange = { name: target, value: element.value };\r\n  }\r\n\r\n  private handleIntegerToggleChange(event: Event): void {\r\n    const element: HTMLInputElement = event.target as HTMLInputElement;\r\n    this.basicSettings.integer = element.checked;\r\n    this.dataRequestToModel.needDataForStartPosition = { name: '', value: 'true' };\r\n  }\r\n\r\n  private handleSliderClick(event: MouseEvent): void {\r\n    const isNotSliderBody = event.target !== this.interval.interval && event.target !== this.slider.slider;\r\n    const horizontalPosition: number = (\r\n      event.clientX - this.slider.slider.getBoundingClientRect().x - (this.handles.fromHandle.offsetWidth / 2)\r\n    );\r\n    const verticalPosition: number = this.slider.slider.offsetWidth - (\r\n      event.clientY - this.slider.slider.getBoundingClientRect().y + (this.handles.fromHandle.offsetWidth / 2)\r\n    );\r\n    if (isNotSliderBody) return;\r\n\r\n    const targetPosition: number = this.basicSettings.vertical ? verticalPosition : horizontalPosition;\r\n    const targetHandle: HTMLSpanElement = this.handles.selectsHandleToMove({\r\n      targetPosition,\r\n      positions: this.movement.positions,\r\n      isDouble: this.basicSettings.double,\r\n    });\r\n    this.movement.dataForMovement.target = targetHandle;\r\n    const correctedValue: number = this.movement.correctsImpossiblePosition(\r\n      this.slider.slider.offsetWidth - targetHandle.offsetWidth,\r\n      targetPosition,\r\n    );\r\n    this.handles.acceptNewPosition({\r\n      target: targetHandle,\r\n      value: correctedValue,\r\n      positions: this.movement.positions,\r\n    });\r\n    this.movement.correctsIntervalPosition();\r\n  }\r\n\r\n  private handleWindowResize(): void {\r\n    this.dataRequestToModel.needDataForScale = { name: '', value: 'true' };\r\n    this.dataRequestToModel.needDataForStartPosition = { name: '', value: 'true' };\r\n    if (this.checkIsStepRequired()) this.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n  }\r\n}\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r)),a=(C.s[0]++,C.b[0][0]++,this&&(C.b[0][1]++,this.__decorate)||(C.b[0][2]++,function(A,e,n,t){C.f[0]++;var l,s=(C.s[1]++,arguments.length),i=(C.s[2]++,s<3?(C.b[1][0]++,e):(C.b[1][1]++,null===t?(C.b[2][0]++,t=Object.getOwnPropertyDescriptor(e,n)):(C.b[2][1]++,t)));if(C.s[3]++,C.b[4][0]++,"object"==typeof Reflect&&(C.b[4][1]++,"function"==typeof Reflect.decorate))C.b[3][0]++,C.s[4]++,i=Reflect.decorate(A,e,n,t);else{C.b[3][1]++,C.s[5]++;for(var r=A.length-1;r>=0;r--)C.s[6]++,(l=A[r])?(C.b[5][0]++,C.s[7]++,C.b[6][0]++,i=(s<3?(C.b[7][0]++,l(i)):(C.b[7][1]++,s>3?(C.b[8][0]++,l(e,n,i)):(C.b[8][1]++,l(e,n))))||(C.b[6][1]++,i)):C.b[5][1]++}return C.s[8]++,C.b[9][0]++,s>3&&(C.b[9][1]++,i)&&(C.b[9][2]++,Object.defineProperty(e,n,i)),i}));C.s[9]++,Object.defineProperty(e,"__esModule",{value:!0}),C.s[10]++,e.View=void 0;const u=(C.s[11]++,n("./node_modules/autobind-decorator/lib/esm/index.js")),c=(C.s[12]++,n("./src/plugin/View/Slider/Slider.ts")),m=(C.s[13]++,n("./src/plugin/View/Handles/Handles.ts")),d=(C.s[14]++,n("./src/plugin/View/Movement/Movement.ts")),E=(C.s[15]++,n("./src/plugin/View/SelectedInterval/SelectedInterval.ts")),p=(C.s[16]++,n("./src/plugin/View/ValuesScale/ValuesScale.ts")),h=(C.s[17]++,n("./src/plugin/View/SideMenu/SideMenu.ts"));C.s[18]++;let I=class{constructor(A,e){C.f[1]++,C.s[19]++,this.dataRequestToModel={needDataForScale:{name:"",value:""},needDataForStartPosition:{name:"",value:""},needStepWidth:{name:"",value:""},needApplyValueFromScale:{name:"",value:""},needApplyNewValue:{name:"",value:""},needChangeSliderValuesRange:{name:"",value:""}},C.s[20]++,this.target=e,C.s[21]++,this.slider=new c.Slider,C.s[22]++,this.handles=new m.Handles,C.s[23]++,this.interval=new E.SelectedInterval,C.s[24]++,this.valuesScale=new p.ValuesScale,C.s[25]++,this.sideMenu=new h.SideMenu,C.s[26]++,this.basicSettings=A,C.s[27]++,this.movement=new d.Movement({slider:this.slider.slider,fromHandle:this.handles.fromHandle,toHandle:this.handles.toHandle,interval:this.interval.interval,basicSettings:this.basicSettings})}addSliderToDOM(){C.f[2]++,C.s[28]++,this.slider.collectSlider({from:this.handles.fromHandle,to:this.handles.toHandle,interval:this.interval.interval,valueScale:this.valuesScale}),C.s[29]++,this.target.append(this.slider.sliderWrapper)}addSideMenuToDOM(){var A;C.f[3]++,C.s[30]++,this.sideMenu.collectSideMenu(),C.s[31]++,"string"==typeof this.basicSettings.sideMenu?(C.b[10][0]++,C.s[32]++,C.b[12][0]++,null===(A=document.querySelector(this.basicSettings.sideMenu))||(C.b[12][1]++,void 0===A)?C.b[11][0]++:(C.b[11][1]++,A.append(this.sideMenu.sideMenuElements.sideMenuContainer))):(C.b[10][1]++,C.s[33]++,this.target.append(this.sideMenu.sideMenuElements.sideMenuContainer))}checkIsStepRequired(){return C.f[4]++,C.s[34]++,C.b[13][0]++,Object.prototype.hasOwnProperty.call(this.basicSettings,"step")&&(C.b[13][1]++,"number"==typeof this.basicSettings.step)}prepareSliderForUse(){C.f[5]++,C.s[35]++,this.addSliderToDOM(),C.s[36]++,this.basicSettings.sideMenu?(C.b[14][0]++,C.s[37]++,this.addSideMenuToDOM()):C.b[14][1]++,C.s[38]++,this.dataRequestToModel.needDataForScale={name:"",value:"true"},C.s[39]++,this.dataRequestToModel.needDataForStartPosition={name:"",value:"true"},C.s[40]++,this.checkIsStepRequired()?(C.b[15][0]++,C.s[41]++,this.dataRequestToModel.needStepWidth={name:"",value:"true"}):C.b[15][1]++,C.s[42]++,this.updateView({vertical:this.basicSettings.vertical,double:this.basicSettings.double,sideMenu:this.basicSettings.sideMenu,handlesValues:this.basicSettings.handlesValues,valueScale:this.basicSettings.valueScale,integer:this.basicSettings.integer})}turnOnMenuToggles(A){C.f[6]++,C.s[43]++,A.vertical?(C.b[16][0]++,C.s[44]++,this.sideMenu.sideMenuElements.planeToggle.checked=!0):C.b[16][1]++,C.s[45]++,A.double?(C.b[17][0]++,C.s[46]++,this.sideMenu.sideMenuElements.toToggle.checked=!0):C.b[17][1]++,C.s[47]++,A.handlesValues?(C.b[18][0]++,C.s[48]++,this.sideMenu.sideMenuElements.handleValuesToggle.checked=!0):C.b[18][1]++,C.s[49]++,A.valueScale?(C.b[19][0]++,C.s[50]++,this.sideMenu.sideMenuElements.valueScaleToggle.checked=!0):C.b[19][1]++,C.s[51]++,A.integer?(C.b[20][0]++,C.s[52]++,this.sideMenu.sideMenuElements.integerToggle.checked=!0):C.b[20][1]++}updateView(A){C.f[7]++,C.s[53]++,A.vertical?(C.b[21][0]++,C.s[54]++,this.slider.changePlane({isVertical:A.vertical,isStep:this.checkIsStepRequired(),requests:this.dataRequestToModel}),C.s[55]++,this.handles.changePlane(A.vertical),C.s[56]++,this.valuesScale.changePlane(A.vertical)):C.b[21][1]++,C.s[57]++,A.double?C.b[22][1]++:(C.b[22][0]++,C.s[58]++,this.handles.controlHandlesDisplay({isDouble:this.basicSettings.double,positions:this.movement.positions,sliderWidth:this.slider.slider.offsetWidth}),C.s[59]++,this.interval.hideSelectedInterval({isDouble:this.basicSettings.double,handleWidth:this.handles.fromHandle.offsetWidth}),C.s[60]++,this.sideMenu.hideToValues(this.basicSettings.double)),C.s[61]++,A.valueScale?C.b[23][1]++:(C.b[23][0]++,C.s[62]++,this.valuesScale.hideValueScale(this.basicSettings.valueScale)),C.s[63]++,A.handlesValues?C.b[24][1]++:(C.b[24][0]++,C.s[64]++,this.handles.hideHandleValues(this.basicSettings.handlesValues)),C.s[65]++,A.sideMenu?(C.b[25][0]++,C.s[66]++,this.turnOnMenuToggles(A)):C.b[25][1]++}refreshAllComponents(A){C.f[8]++;const e=(C.s[67]++,C.b[26][0]++,"min"!==A.target&&(C.b[26][1]++,"max"!==A.target));let n=(C.s[68]++,!0);C.s[69]++,e?(C.b[27][0]++,C.s[70]++,n=this.handles.refreshValues(A,{positions:this.movement.positions,isDouble:this.basicSettings.double,sliderWidth:this.slider.slider.offsetWidth})):C.b[27][1]++;const t=(C.s[71]++,C.b[28][0]++,n&&(C.b[28][1]++,this.basicSettings.sideMenu));C.s[72]++,t?(C.b[29][0]++,C.s[73]++,this.sideMenu.refreshValues(A)):C.b[29][1]++}bindEventListeners(){C.f[9]++,C.s[74]++,Object.values(this.valuesScale).forEach((A=>{C.f[10]++,C.s[75]++,A.addEventListener("click",this.handleScaleValueClick)})),C.s[76]++,this.sideMenu.sideMenuElements.toToggle.addEventListener("change",this.handleToToggleChange),C.s[77]++,this.sideMenu.sideMenuElements.planeToggle.addEventListener("change",this.handlePlaneToggleChange),C.s[78]++,this.sideMenu.sideMenuElements.valueScaleToggle.addEventListener("change",this.handleValueScaleToggleChange),C.s[79]++,this.sideMenu.sideMenuElements.handleValuesToggle.addEventListener("change",this.handleHandleValuesChange),C.s[80]++,this.sideMenu.sideMenuElements.integerToggle.addEventListener("change",this.handleIntegerToggleChange),C.s[81]++,[this.sideMenu.sideMenuElements.fromInput,this.sideMenu.sideMenuElements.toInput].forEach((A=>{C.f[11]++,C.s[82]++,A.addEventListener("change",this.handleValueInputChange)})),C.s[83]++,[this.sideMenu.sideMenuElements.minimumInput,this.sideMenu.sideMenuElements.maximumInput].forEach((A=>{C.f[12]++,C.s[84]++,A.addEventListener("change",this.handleRangeInputChange)})),C.s[85]++,this.sideMenu.sideMenuElements.stepInput.addEventListener("change",this.handleStepInputChange),C.s[86]++,[this.handles.fromHandle,this.handles.toHandle].forEach((A=>{C.f[13]++,C.s[87]++,A.addEventListener("mousedown",this.handleHandleClick)})),C.s[88]++,this.slider.slider.addEventListener("mousedown",this.handleSliderClick),C.s[89]++,window.addEventListener("resize",this.handleWindowResize)}handleHandleClick(A){C.f[14]++;const e=(C.s[90]++,A.target);C.s[91]++,this.movement.handleListener({eventInfo:{target:e,x:A.clientX,y:A.clientY}})}handleScaleValueClick(A){C.f[15]++;const e=(C.s[92]++,A.target);C.s[93]++,this.dataRequestToModel.needApplyValueFromScale={name:"",value:e.innerText}}handleToToggleChange(A){C.f[16]++;const e=(C.s[94]++,A.target);C.s[95]++,this.basicSettings.double=e.checked,C.s[96]++,this.handles.controlHandlesDisplay({isDouble:this.basicSettings.double,positions:this.movement.positions,sliderWidth:this.slider.slider.offsetWidth}),C.s[97]++,this.interval.hideSelectedInterval({isDouble:this.basicSettings.double,handleWidth:this.handles.fromHandle.offsetWidth}),C.s[98]++,this.sideMenu.hideToValues(this.basicSettings.double)}handlePlaneToggleChange(A){C.f[17]++;const e=(C.s[99]++,A.target);C.s[100]++,this.basicSettings.vertical=e.checked,C.s[101]++,this.slider.changePlane({isVertical:this.basicSettings.vertical,isStep:this.checkIsStepRequired(),requests:this.dataRequestToModel}),C.s[102]++,this.handles.changePlane(this.basicSettings.vertical),C.s[103]++,this.valuesScale.changePlane(this.basicSettings.vertical)}handleValueScaleToggleChange(A){C.f[18]++;const e=(C.s[104]++,A.target);C.s[105]++,this.basicSettings.valueScale=e.checked,C.s[106]++,this.valuesScale.hideValueScale(this.basicSettings.valueScale)}handleHandleValuesChange(A){C.f[19]++;const e=(C.s[107]++,A.target);C.s[108]++,this.basicSettings.handlesValues=e.checked,C.s[109]++,this.handles.hideHandleValues(this.basicSettings.handlesValues)}handleValueInputChange(A){C.f[20]++;const e=(C.s[110]++,A.target);let n;C.s[111]++,e===this.sideMenu.sideMenuElements.fromInput?(C.b[30][0]++,C.s[112]++,n="from"):(C.b[30][1]++,C.s[113]++,n="to"),C.s[114]++,this.dataRequestToModel.needApplyNewValue={name:n,value:e.value}}handleStepInputChange(A){C.f[21]++;const e=(C.s[115]++,A.target);C.s[116]++,this.basicSettings.step=Number(e.value),C.s[117]++,"0"===e.value?(C.b[31][0]++,C.s[118]++,this.sideMenu.sideMenuElements.stepInput.value="",C.s[119]++,this.basicSettings.step=!1):(C.b[31][1]++,C.s[120]++,this.dataRequestToModel.needStepWidth={name:"",value:"true"})}handleRangeInputChange(A){C.f[22]++;const e=(C.s[121]++,A.target);let n;C.s[122]++,e===this.sideMenu.sideMenuElements.minimumInput?(C.b[32][0]++,C.s[123]++,n="min"):(C.b[32][1]++,C.s[124]++,n="max"),C.s[125]++,this.dataRequestToModel.needChangeSliderValuesRange={name:n,value:e.value}}handleIntegerToggleChange(A){C.f[23]++;const e=(C.s[126]++,A.target);C.s[127]++,this.basicSettings.integer=e.checked,C.s[128]++,this.dataRequestToModel.needDataForStartPosition={name:"",value:"true"}}handleSliderClick(A){C.f[24]++;const e=(C.s[129]++,C.b[33][0]++,A.target!==this.interval.interval&&(C.b[33][1]++,A.target!==this.slider.slider)),n=(C.s[130]++,A.clientX-this.slider.slider.getBoundingClientRect().x-this.handles.fromHandle.offsetWidth/2),t=(C.s[131]++,this.slider.slider.offsetWidth-(A.clientY-this.slider.slider.getBoundingClientRect().y+this.handles.fromHandle.offsetWidth/2));if(C.s[132]++,e)return C.b[34][0]++,void C.s[133]++;C.b[34][1]++;const l=(C.s[134]++,this.basicSettings.vertical?(C.b[35][0]++,t):(C.b[35][1]++,n)),s=(C.s[135]++,this.handles.selectsHandleToMove({targetPosition:l,positions:this.movement.positions,isDouble:this.basicSettings.double}));C.s[136]++,this.movement.dataForMovement.target=s;const i=(C.s[137]++,this.movement.correctsImpossiblePosition(this.slider.slider.offsetWidth-s.offsetWidth,l));C.s[138]++,this.handles.acceptNewPosition({target:s,value:i,positions:this.movement.positions}),C.s[139]++,this.movement.correctsIntervalPosition()}handleWindowResize(){C.f[25]++,C.s[140]++,this.dataRequestToModel.needDataForScale={name:"",value:"true"},C.s[141]++,this.dataRequestToModel.needDataForStartPosition={name:"",value:"true"},C.s[142]++,this.checkIsStepRequired()?(C.b[36][0]++,C.s[143]++,this.dataRequestToModel.needStepWidth={name:"",value:"true"}):C.b[36][1]++}};C.s[144]++,I=a([u.default],I),C.s[145]++,e.View=I},"./src/plugin/View/types.ts":(A,e)=>{"use strict";var n,t,l,s,i,r;(n="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\types.ts",t="529480347fece94936eef41fe811c6b23ea5d562",l=new(0,function(){}.constructor)("return this")(),i={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\types.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}}},fnMap:{},branchMap:{},s:{0:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\types.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\types.ts"],names:[],mappings:"",sourcesContent:["type BasicViewSettings = {\r\n  double: boolean;\r\n  sideMenu: boolean | string;\r\n  handlesValues: boolean;\r\n  vertical: boolean;\r\n  step: boolean | number;\r\n  valueScale: boolean;\r\n  integer: boolean;\r\n};\r\n\r\ntype TargetsForViewUpdate = {\r\n  double?: boolean;\r\n  handlesValues?: boolean;\r\n  vertical?: boolean;\r\n  valueScale?: boolean;\r\n  sideMenu: boolean | string;\r\n  integer: boolean;\r\n};\r\n\r\ntype RefreshData = {\r\n  value: string;\r\n  target: 'from' | 'to' | 'min' | 'max';\r\n  isToFixed: boolean;\r\n};\r\n\r\ntype DataRequestValue = {\r\n  name: string;\r\n  value: string;\r\n};\r\n\r\ntype DataRequestToModel = {\r\n  needDataForScale: DataRequestValue;\r\n  needDataForStartPosition: DataRequestValue;\r\n  needStepWidth: DataRequestValue;\r\n  needApplyValueFromScale: DataRequestValue;\r\n  needApplyNewValue: DataRequestValue;\r\n  needChangeSliderValuesRange: DataRequestValue;\r\n};\r\nexport {\r\n  BasicViewSettings,\r\n  TargetsForViewUpdate,\r\n  RefreshData,\r\n  DataRequestToModel,\r\n  DataRequestValue,\r\n};\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(r=l[s="__coverage__"]||(l[s]={}))[n]&&r[n].hash===t?r[n]:(i.hash=t,r[n]=i)).s[0]++,Object.defineProperty(e,"__esModule",{value:!0})},"./src/plugin/View/view.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\view.test.ts",l="1936628e64b389d2b3745a35100d8059dcd4a050",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\view.test.ts",statementMap:{0:{start:{line:2,column:0},end:{line:2,column:62}},1:{start:{line:3,column:15},end:{line:3,column:32}},2:{start:{line:4,column:0},end:{line:4,column:26}},3:{start:{line:5,column:0},end:{line:209,column:3}},4:{start:{line:7,column:21},end:{line:15,column:5}},5:{start:{line:16,column:19},end:{line:16,column:48}},6:{start:{line:17,column:4},end:{line:19,column:7}},7:{start:{line:18,column:8},end:{line:18,column:49}},8:{start:{line:20,column:4},end:{line:22,column:7}},9:{start:{line:21,column:8},end:{line:21,column:34}},10:{start:{line:23,column:4},end:{line:26,column:7}},11:{start:{line:24,column:8},end:{line:24,column:35}},12:{start:{line:25,column:8},end:{line:25,column:59}},13:{start:{line:27,column:4},end:{line:35,column:7}},14:{start:{line:29,column:30},end:{line:29,column:59}},15:{start:{line:30,column:8},end:{line:30,column:61}},16:{start:{line:31,column:8},end:{line:31,column:108}},17:{start:{line:32,column:8},end:{line:32,column:63}},18:{start:{line:33,column:8},end:{line:33,column:35}},19:{start:{line:34,column:8},end:{line:34,column:69}},20:{start:{line:36,column:4},end:{line:46,column:7}},21:{start:{line:37,column:8},end:{line:41,column:11}},22:{start:{line:42,column:8},end:{line:42,column:77}},23:{start:{line:43,column:8},end:{line:43,column:95}},24:{start:{line:44,column:8},end:{line:44,column:93}},25:{start:{line:45,column:8},end:{line:45,column:91}},26:{start:{line:47,column:4},end:{line:57,column:7}},27:{start:{line:48,column:8},end:{line:52,column:11}},28:{start:{line:53,column:8},end:{line:53,column:81}},29:{start:{line:54,column:8},end:{line:54,column:99}},30:{start:{line:55,column:8},end:{line:55,column:97}},31:{start:{line:56,column:8},end:{line:56,column:95}},32:{start:{line:58,column:4},end:{line:69,column:7}},33:{start:{line:59,column:8},end:{line:59,column:42}},34:{start:{line:60,column:8},end:{line:65,column:11}},35:{start:{line:66,column:8},end:{line:66,column:68}},36:{start:{line:67,column:8},end:{line:67,column:69}},37:{start:{line:68,column:8},end:{line:68,column:92}},38:{start:{line:70,column:4},end:{line:79,column:7}},39:{start:{line:71,column:8},end:{line:71,column:46}},40:{start:{line:72,column:8},end:{line:77,column:11}},41:{start:{line:78,column:8},end:{line:78,column:72}},42:{start:{line:80,column:4},end:{line:90,column:7}},43:{start:{line:81,column:8},end:{line:81,column:49}},44:{start:{line:82,column:8},end:{line:87,column:11}},45:{start:{line:88,column:8},end:{line:88,column:69}},46:{start:{line:89,column:8},end:{line:89,column:67}},47:{start:{line:91,column:4},end:{line:105,column:7}},48:{start:{line:92,column:8},end:{line:92,column:43}},49:{start:{line:93,column:8},end:{line:100,column:11}},50:{start:{line:101,column:8},end:{line:101,column:70}},51:{start:{line:102,column:8},end:{line:102,column:78}},52:{start:{line:103,column:8},end:{line:103,column:80}},53:{start:{line:104,column:8},end:{line:104,column:73}},54:{start:{line:106,column:4},end:{line:119,column:7}},55:{start:{line:107,column:8},end:{line:111,column:11}},56:{start:{line:112,column:8},end:{line:112,column:63}},57:{start:{line:113,column:8},end:{line:117,column:11}},58:{start:{line:118,column:8},end:{line:118,column:61}},59:{start:{line:120,column:4},end:{line:135,column:7}},60:{start:{line:121,column:8},end:{line:125,column:11}},61:{start:{line:126,column:8},end:{line:126,column:82}},62:{start:{line:127,column:8},end:{line:127,column:77}},63:{start:{line:128,column:8},end:{line:132,column:11}},64:{start:{line:133,column:8},end:{line:133,column:83}},65:{start:{line:134,column:8},end:{line:134,column:75}},66:{start:{line:136,column:4},end:{line:150,column:7}},67:{start:{line:137,column:8},end:{line:137,column:34}},68:{start:{line:138,column:8},end:{line:138,column:64}},69:{start:{line:139,column:8},end:{line:139,column:83}},70:{start:{line:140,column:8},end:{line:140,column:54}},71:{start:{line:141,column:8},end:{line:141,column:68}},72:{start:{line:142,column:8},end:{line:142,column:69}},73:{start:{line:143,column:8},end:{line:143,column:92}},74:{start:{line:144,column:8},end:{line:144,column:63}},75:{start:{line:145,column:8},end:{line:145,column:83}},76:{start:{line:146,column:8},end:{line:146,column:53}},77:{start:{line:147,column:8},end:{line:147,column:76}},78:{start:{line:148,column:8},end:{line:148,column:70}},79:{start:{line:149,column:8},end:{line:149,column:93}},80:{start:{line:151,column:4},end:{line:167,column:7}},81:{start:{line:152,column:8},end:{line:152,column:34}},82:{start:{line:153,column:8},end:{line:153,column:66}},83:{start:{line:154,column:8},end:{line:154,column:86}},84:{start:{line:155,column:8},end:{line:155,column:55}},85:{start:{line:156,column:8},end:{line:156,column:77}},86:{start:{line:157,column:8},end:{line:157,column:95}},87:{start:{line:158,column:8},end:{line:158,column:93}},88:{start:{line:159,column:8},end:{line:159,column:91}},89:{start:{line:160,column:8},end:{line:160,column:67}},90:{start:{line:161,column:8},end:{line:161,column:86}},91:{start:{line:162,column:8},end:{line:162,column:56}},92:{start:{line:163,column:8},end:{line:163,column:81}},93:{start:{line:164,column:8},end:{line:164,column:99}},94:{start:{line:165,column:8},end:{line:165,column:97}},95:{start:{line:166,column:8},end:{line:166,column:95}},96:{start:{line:168,column:4},end:{line:178,column:7}},97:{start:{line:169,column:8},end:{line:169,column:34}},98:{start:{line:170,column:8},end:{line:170,column:72}},99:{start:{line:171,column:8},end:{line:171,column:91}},100:{start:{line:172,column:8},end:{line:172,column:58}},101:{start:{line:173,column:8},end:{line:173,column:72}},102:{start:{line:174,column:8},end:{line:174,column:71}},103:{start:{line:175,column:8},end:{line:175,column:91}},104:{start:{line:176,column:8},end:{line:176,column:57}},105:{start:{line:177,column:8},end:{line:177,column:80}},106:{start:{line:179,column:4},end:{line:191,column:7}},107:{start:{line:180,column:8},end:{line:180,column:34}},108:{start:{line:181,column:8},end:{line:181,column:74}},109:{start:{line:182,column:8},end:{line:182,column:93}},110:{start:{line:183,column:8},end:{line:183,column:61}},111:{start:{line:184,column:8},end:{line:184,column:69}},112:{start:{line:185,column:8},end:{line:185,column:67}},113:{start:{line:186,column:8},end:{line:186,column:73}},114:{start:{line:187,column:8},end:{line:187,column:93}},115:{start:{line:188,column:8},end:{line:188,column:60}},116:{start:{line:189,column:8},end:{line:189,column:77}},117:{start:{line:190,column:8},end:{line:190,column:75}},118:{start:{line:192,column:4},end:{line:200,column:7}},119:{start:{line:193,column:8},end:{line:193,column:34}},120:{start:{line:194,column:8},end:{line:194,column:62}},121:{start:{line:195,column:8},end:{line:195,column:84}},122:{start:{line:196,column:8},end:{line:196,column:97}},123:{start:{line:197,column:8},end:{line:197,column:60}},124:{start:{line:198,column:8},end:{line:198,column:82}},125:{start:{line:199,column:8},end:{line:199,column:95}},126:{start:{line:201,column:4},end:{line:208,column:7}},127:{start:{line:202,column:8},end:{line:202,column:76}},128:{start:{line:203,column:8},end:{line:203,column:91}},129:{start:{line:204,column:8},end:{line:204,column:34}},130:{start:{line:205,column:8},end:{line:205,column:62}},131:{start:{line:206,column:8},end:{line:206,column:84}},132:{start:{line:207,column:8},end:{line:207,column:91}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:23},end:{line:209,column:1}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:17,column:15},end:{line:17,column:16}},loc:{start:{line:17,column:21},end:{line:19,column:5}},line:17},2:{name:"(anonymous_2)",decl:{start:{line:20,column:29},end:{line:20,column:30}},loc:{start:{line:20,column:35},end:{line:22,column:5}},line:20},3:{name:"(anonymous_3)",decl:{start:{line:23,column:47},end:{line:23,column:48}},loc:{start:{line:23,column:53},end:{line:26,column:5}},line:23},4:{name:"(anonymous_4)",decl:{start:{line:27,column:64},end:{line:27,column:65}},loc:{start:{line:27,column:70},end:{line:35,column:5}},line:27},5:{name:"(anonymous_5)",decl:{start:{line:36,column:66},end:{line:36,column:67}},loc:{start:{line:36,column:72},end:{line:46,column:5}},line:36},6:{name:"(anonymous_6)",decl:{start:{line:47,column:70},end:{line:47,column:71}},loc:{start:{line:47,column:76},end:{line:57,column:5}},line:47},7:{name:"(anonymous_7)",decl:{start:{line:58,column:69},end:{line:58,column:70}},loc:{start:{line:58,column:75},end:{line:69,column:5}},line:58},8:{name:"(anonymous_8)",decl:{start:{line:70,column:70},end:{line:70,column:71}},loc:{start:{line:70,column:76},end:{line:79,column:5}},line:70},9:{name:"(anonymous_9)",decl:{start:{line:80,column:73},end:{line:80,column:74}},loc:{start:{line:80,column:79},end:{line:90,column:5}},line:80},10:{name:"(anonymous_10)",decl:{start:{line:91,column:55},end:{line:91,column:56}},loc:{start:{line:91,column:61},end:{line:105,column:5}},line:91},11:{name:"(anonymous_11)",decl:{start:{line:106,column:55},end:{line:106,column:56}},loc:{start:{line:106,column:61},end:{line:119,column:5}},line:106},12:{name:"(anonymous_12)",decl:{start:{line:120,column:57},end:{line:120,column:58}},loc:{start:{line:120,column:63},end:{line:135,column:5}},line:120},13:{name:"(anonymous_13)",decl:{start:{line:136,column:76},end:{line:136,column:77}},loc:{start:{line:136,column:82},end:{line:150,column:5}},line:136},14:{name:"(anonymous_14)",decl:{start:{line:151,column:73},end:{line:151,column:74}},loc:{start:{line:151,column:79},end:{line:167,column:5}},line:151},15:{name:"(anonymous_15)",decl:{start:{line:168,column:78},end:{line:168,column:79}},loc:{start:{line:168,column:84},end:{line:178,column:5}},line:168},16:{name:"(anonymous_16)",decl:{start:{line:179,column:80},end:{line:179,column:81}},loc:{start:{line:179,column:86},end:{line:191,column:5}},line:179},17:{name:"(anonymous_17)",decl:{start:{line:192,column:57},end:{line:192,column:58}},loc:{start:{line:192,column:63},end:{line:200,column:5}},line:192},18:{name:"(anonymous_18)",decl:{start:{line:201,column:56},end:{line:201,column:57}},loc:{start:{line:201,column:62},end:{line:208,column:5}},line:201}},branchMap:{0:{loc:{start:{line:31,column:8},end:{line:31,column:107}},type:"cond-expr",locations:[{start:{line:31,column:74},end:{line:31,column:80}},{start:{line:31,column:83},end:{line:31,column:107}}],line:31},1:{loc:{start:{line:31,column:8},end:{line:31,column:71}},type:"binary-expr",locations:[{start:{line:31,column:8},end:{line:31,column:54}},{start:{line:31,column:58},end:{line:31,column:71}}],line:31}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0,118:0,119:0,120:0,121:0,122:0,123:0,124:0,125:0,126:0,127:0,128:0,129:0,130:0,131:0,132:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0},b:{0:[0,0],1:[0,0]},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\view.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\View\\view.test.ts"],names:[],mappings:"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",sourcesContent:["import { BasicViewSettings } from './types';\r\nimport { View } from './View';\r\n\r\nrequire('jasmine-jquery');\r\n\r\ndescribe('View', () => {\r\n  let view: View;\r\n  const settings: BasicViewSettings = {\r\n    double: true,\r\n    sideMenu: true,\r\n    handlesValues: true,\r\n    step: true,\r\n    valueScale: true,\r\n    vertical: true,\r\n    integer: true,\r\n  };\r\n  const target: HTMLDivElement = document.createElement('div');\r\n\r\n  beforeEach(() => {\r\n    view = new View(settings, target);\r\n  });\r\n\r\n  it('View can be create', () => {\r\n    expect(view).toBeTruthy();\r\n  });\r\n\r\n  it('prepareSliderForUse() work correctly', () => {\r\n    view.prepareSliderForUse();\r\n    expect(target).toContainElement('div.goby-slider');\r\n  });\r\n\r\n  it('prepareSliderForUse() add side menu in user container', () => {\r\n    const testContainer: HTMLDivElement = document.createElement('div');\r\n    testContainer.classList.add('sideMenuTestContainer');\r\n    document.querySelector('body')?.append(testContainer);\r\n    view.basicSettings.sideMenu = '.sideMenuTestContainer';\r\n    view.prepareSliderForUse();\r\n    expect(testContainer).toContainElement('div.goby-side-menu');\r\n  });\r\n\r\n  it('updateSliderView() call plane changers to make vertical', () => {\r\n    view.updateView({\r\n      vertical: true,\r\n      sideMenu: true,\r\n      integer: true,\r\n    });\r\n    expect(view.slider.slider).toHaveClass('goby-slider_state_vertical');\r\n    expect(view.handles.fromValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.handles.toValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.valuesScale.minValue).toHaveClass('goby-slider__value_state_vertical');\r\n  });\r\n\r\n  it('updateSliderView() call plane changers to make horizontally', () => {\r\n    view.updateView({\r\n      vertical: false,\r\n      sideMenu: true,\r\n      integer: true,\r\n    });\r\n    expect(view.slider.slider).not.toHaveClass('goby-slider_state_vertical');\r\n    expect(view.handles.fromValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.handles.toValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.valuesScale.minValue).not.toHaveClass('goby-slider__value_state_vertical');\r\n  });\r\n\r\n  it('updateSliderView() call display changers to hide to handel', () => {\r\n    view.basicSettings.double = false;\r\n    view.updateView({\r\n      vertical: false,\r\n      sideMenu: true,\r\n      double: false,\r\n      integer: true,\r\n    });\r\n    expect(view.handles.toHandle.style.display).toEqual('none');\r\n    expect(view.interval.interval.style.display).toEqual('none');\r\n    expect(view.sideMenu.sideMenuElements.toInputWrapper!.style.display).toEqual('none');\r\n  });\r\n\r\n  it('updateSliderView() call display changers to hide valueScale', () => {\r\n    view.basicSettings.valueScale = false;\r\n    view.updateView({\r\n      vertical: false,\r\n      sideMenu: true,\r\n      valueScale: false,\r\n      integer: true,\r\n    });\r\n    expect(view.valuesScale.minValue.style.display).toEqual('none');\r\n  });\r\n\r\n  it('updateSliderView() call display changers to hide handlesValues', () => {\r\n    view.basicSettings.handlesValues = false;\r\n    view.updateView({\r\n      vertical: false,\r\n      sideMenu: true,\r\n      handlesValues: false,\r\n      integer: true,\r\n    });\r\n    expect(view.handles.fromValue.style.display).toEqual('none');\r\n    expect(view.handles.toValue.style.display).toEqual('none');\r\n  });\r\n\r\n  it('updateSliderView() check inputs in side-menu', () => {\r\n    view.basicSettings.sideMenu = true;\r\n    view.updateView({\r\n      vertical: true,\r\n      sideMenu: true,\r\n      double: true,\r\n      handlesValues: true,\r\n      valueScale: true,\r\n      integer: true,\r\n    });\r\n    expect(view.sideMenu.sideMenuElements.toToggle).toBeChecked();\r\n    expect(view.sideMenu.sideMenuElements.valueScaleToggle).toBeChecked();\r\n    expect(view.sideMenu.sideMenuElements.handleValuesToggle).toBeChecked();\r\n    expect(view.sideMenu.sideMenuElements.planeToggle).toBeChecked();\r\n  });\r\n\r\n  it('refreshAllComponents() refresh handel values', () => {\r\n    view.refreshAllComponents({\r\n      target: 'from',\r\n      value: '50',\r\n      isToFixed: true,\r\n    });\r\n    expect(view.handles.fromValue.innerText).toEqual('50');\r\n    view.refreshAllComponents({\r\n      target: 'to',\r\n      value: '50',\r\n      isToFixed: true,\r\n    });\r\n    expect(view.handles.toValue.innerText).toEqual('50');\r\n  });\r\n\r\n  it('refreshAllComponents() refresh sideMenu values', () => {\r\n    view.refreshAllComponents({\r\n      target: 'from',\r\n      value: '50',\r\n      isToFixed: true,\r\n    });\r\n    expect(view.sideMenu.sideMenuElements.fromOutput!.innerText).toEqual('50');\r\n    expect(view.sideMenu.sideMenuElements.fromInput!.value).toEqual('50');\r\n    view.refreshAllComponents({\r\n      target: 'to',\r\n      value: '50',\r\n      isToFixed: true,\r\n    });\r\n    expect(view.sideMenu.sideMenuElements.toOutput!.innerText).toEqual(' - 50');\r\n    expect(view.sideMenu.sideMenuElements.toInput!.value).toEqual('50');\r\n  });\r\n\r\n  it('bindEventListeners() correctly responds to toToggle input changes', () => {\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.toToggle!.checked = false;\r\n    view.sideMenu.sideMenuElements.toToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.double).toBeFalse();\r\n    expect(view.handles.toHandle.style.display).toEqual('none');\r\n    expect(view.interval.interval.style.display).toEqual('none');\r\n    expect(view.sideMenu.sideMenuElements.toInputWrapper!.style.display).toEqual('none');\r\n    view.sideMenu.sideMenuElements.toToggle!.checked = true;\r\n    view.sideMenu.sideMenuElements.toToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.double).toBeTrue();\r\n    expect(view.handles.toHandle.style.display).toEqual('inline-block');\r\n    expect(view.interval.interval.style.display).toEqual('block');\r\n    expect(view.sideMenu.sideMenuElements.toInputWrapper!.style.display).toEqual('block');\r\n  });\r\n\r\n  it('bindEventListeners() correctly responds to plane input changes', () => {\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.planeToggle!.checked = true;\r\n    view.sideMenu.sideMenuElements.planeToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.vertical).toBeTrue();\r\n    expect(view.slider.slider).toHaveClass('goby-slider_state_vertical');\r\n    expect(view.handles.fromValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.handles.toValue).toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.valuesScale.minValue).toHaveClass('goby-slider__value_state_vertical');\r\n    view.sideMenu.sideMenuElements.planeToggle!.checked = false;\r\n    view.sideMenu.sideMenuElements.planeToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.vertical).toBeFalse();\r\n    expect(view.slider.slider).not.toHaveClass('goby-slider_state_vertical');\r\n    expect(view.handles.fromValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.handles.toValue).not.toHaveClass('goby-slider__handle-value_state_vertical');\r\n    expect(view.valuesScale.minValue).not.toHaveClass('goby-slider__value_state_vertical');\r\n  });\r\n\r\n  it('bindEventListeners() correctly responds to valueScale input changes', () => {\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.valueScaleToggle!.checked = false;\r\n    view.sideMenu.sideMenuElements.valueScaleToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.valueScale).toBeFalsy();\r\n    expect(view.valuesScale.minValue.style.display).toEqual('none');\r\n    view.sideMenu.sideMenuElements.valueScaleToggle!.checked = true;\r\n    view.sideMenu.sideMenuElements.valueScaleToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.valueScale).toBeTrue();\r\n    expect(view.valuesScale.minValue.style.display).toEqual('inline-block');\r\n  });\r\n\r\n  it('bindEventListeners() correctly responds to handelValues input changes', () => {\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.handleValuesToggle!.checked = false;\r\n    view.sideMenu.sideMenuElements.handleValuesToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.handlesValues).toBeFalsy();\r\n    expect(view.handles.fromValue.style.display).toEqual('none');\r\n    expect(view.handles.toValue.style.display).toEqual('none');\r\n    view.sideMenu.sideMenuElements.handleValuesToggle!.checked = true;\r\n    view.sideMenu.sideMenuElements.handleValuesToggle!.dispatchEvent(new Event('change'));\r\n    expect(view.basicSettings.handlesValues).toBeTrue();\r\n    expect(view.handles.fromValue.style.display).toEqual('inline-block');\r\n    expect(view.handles.toValue.style.display).toEqual('inline-block');\r\n  });\r\n\r\n  it('bindEventListeners() send new value from input', () => {\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.fromInput!.value = '50';\r\n    view.sideMenu.sideMenuElements.fromInput!.dispatchEvent(new Event('change'));\r\n    expect(view.dataRequestToModel.needApplyNewValue).toEqual({ name: 'from', value: '50' });\r\n    view.sideMenu.sideMenuElements.toInput!.value = '80';\r\n    view.sideMenu.sideMenuElements.toInput!.dispatchEvent(new Event('change'));\r\n    expect(view.dataRequestToModel.needApplyNewValue).toEqual({ name: 'to', value: '80' });\r\n  });\r\n\r\n  it('bindEventListeners() send new step from input', () => {\r\n    view.dataRequestToModel.needStepWidth = { name: '', value: 'true' };\r\n    expect(view.dataRequestToModel.needStepWidth).toEqual({ name: '', value: 'true' });\r\n    view.bindEventListeners();\r\n    view.sideMenu.sideMenuElements.stepInput!.value = '50';\r\n    view.sideMenu.sideMenuElements.stepInput!.dispatchEvent(new Event('change'));\r\n    expect(view.dataRequestToModel.needStepWidth).toEqual({ name: '', value: 'true' });\r\n  });\r\n});\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));C.s[0]++,Object.defineProperty(e,"__esModule",{value:!0});const a=(C.s[1]++,n("./src/plugin/View/View.ts"));C.s[2]++,n("./node_modules/jasmine-jquery/lib/jasmine-jquery.js"),C.s[3]++,describe("View",(()=>{let A;C.f[0]++;const e=(C.s[4]++,{double:!0,sideMenu:!0,handlesValues:!0,step:!0,valueScale:!0,vertical:!0,integer:!0}),n=(C.s[5]++,document.createElement("div"));C.s[6]++,beforeEach((()=>{C.f[1]++,C.s[7]++,A=new a.View(e,n)})),C.s[8]++,it("View can be create",(()=>{C.f[2]++,C.s[9]++,expect(A).toBeTruthy()})),C.s[10]++,it("prepareSliderForUse() work correctly",(()=>{C.f[3]++,C.s[11]++,A.prepareSliderForUse(),C.s[12]++,expect(n).toContainElement("div.goby-slider")})),C.s[13]++,it("prepareSliderForUse() add side menu in user container",(()=>{var e;C.f[4]++;const n=(C.s[14]++,document.createElement("div"));C.s[15]++,n.classList.add("sideMenuTestContainer"),C.s[16]++,C.b[1][0]++,null===(e=document.querySelector("body"))||(C.b[1][1]++,void 0===e)?C.b[0][0]++:(C.b[0][1]++,e.append(n)),C.s[17]++,A.basicSettings.sideMenu=".sideMenuTestContainer",C.s[18]++,A.prepareSliderForUse(),C.s[19]++,expect(n).toContainElement("div.goby-side-menu")})),C.s[20]++,it("updateSliderView() call plane changers to make vertical",(()=>{C.f[5]++,C.s[21]++,A.updateView({vertical:!0,sideMenu:!0,integer:!0}),C.s[22]++,expect(A.slider.slider).toHaveClass("goby-slider_state_vertical"),C.s[23]++,expect(A.handles.fromValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[24]++,expect(A.handles.toValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[25]++,expect(A.valuesScale.minValue).toHaveClass("goby-slider__value_state_vertical")})),C.s[26]++,it("updateSliderView() call plane changers to make horizontally",(()=>{C.f[6]++,C.s[27]++,A.updateView({vertical:!1,sideMenu:!0,integer:!0}),C.s[28]++,expect(A.slider.slider).not.toHaveClass("goby-slider_state_vertical"),C.s[29]++,expect(A.handles.fromValue).not.toHaveClass("goby-slider__handle-value_state_vertical"),C.s[30]++,expect(A.handles.toValue).not.toHaveClass("goby-slider__handle-value_state_vertical"),C.s[31]++,expect(A.valuesScale.minValue).not.toHaveClass("goby-slider__value_state_vertical")})),C.s[32]++,it("updateSliderView() call display changers to hide to handel",(()=>{C.f[7]++,C.s[33]++,A.basicSettings.double=!1,C.s[34]++,A.updateView({vertical:!1,sideMenu:!0,double:!1,integer:!0}),C.s[35]++,expect(A.handles.toHandle.style.display).toEqual("none"),C.s[36]++,expect(A.interval.interval.style.display).toEqual("none"),C.s[37]++,expect(A.sideMenu.sideMenuElements.toInputWrapper.style.display).toEqual("none")})),C.s[38]++,it("updateSliderView() call display changers to hide valueScale",(()=>{C.f[8]++,C.s[39]++,A.basicSettings.valueScale=!1,C.s[40]++,A.updateView({vertical:!1,sideMenu:!0,valueScale:!1,integer:!0}),C.s[41]++,expect(A.valuesScale.minValue.style.display).toEqual("none")})),C.s[42]++,it("updateSliderView() call display changers to hide handlesValues",(()=>{C.f[9]++,C.s[43]++,A.basicSettings.handlesValues=!1,C.s[44]++,A.updateView({vertical:!1,sideMenu:!0,handlesValues:!1,integer:!0}),C.s[45]++,expect(A.handles.fromValue.style.display).toEqual("none"),C.s[46]++,expect(A.handles.toValue.style.display).toEqual("none")})),C.s[47]++,it("updateSliderView() check inputs in side-menu",(()=>{C.f[10]++,C.s[48]++,A.basicSettings.sideMenu=!0,C.s[49]++,A.updateView({vertical:!0,sideMenu:!0,double:!0,handlesValues:!0,valueScale:!0,integer:!0}),C.s[50]++,expect(A.sideMenu.sideMenuElements.toToggle).toBeChecked(),C.s[51]++,expect(A.sideMenu.sideMenuElements.valueScaleToggle).toBeChecked(),C.s[52]++,expect(A.sideMenu.sideMenuElements.handleValuesToggle).toBeChecked(),C.s[53]++,expect(A.sideMenu.sideMenuElements.planeToggle).toBeChecked()})),C.s[54]++,it("refreshAllComponents() refresh handel values",(()=>{C.f[11]++,C.s[55]++,A.refreshAllComponents({target:"from",value:"50",isToFixed:!0}),C.s[56]++,expect(A.handles.fromValue.innerText).toEqual("50"),C.s[57]++,A.refreshAllComponents({target:"to",value:"50",isToFixed:!0}),C.s[58]++,expect(A.handles.toValue.innerText).toEqual("50")})),C.s[59]++,it("refreshAllComponents() refresh sideMenu values",(()=>{C.f[12]++,C.s[60]++,A.refreshAllComponents({target:"from",value:"50",isToFixed:!0}),C.s[61]++,expect(A.sideMenu.sideMenuElements.fromOutput.innerText).toEqual("50"),C.s[62]++,expect(A.sideMenu.sideMenuElements.fromInput.value).toEqual("50"),C.s[63]++,A.refreshAllComponents({target:"to",value:"50",isToFixed:!0}),C.s[64]++,expect(A.sideMenu.sideMenuElements.toOutput.innerText).toEqual(" - 50"),C.s[65]++,expect(A.sideMenu.sideMenuElements.toInput.value).toEqual("50")})),C.s[66]++,it("bindEventListeners() correctly responds to toToggle input changes",(()=>{C.f[13]++,C.s[67]++,A.bindEventListeners(),C.s[68]++,A.sideMenu.sideMenuElements.toToggle.checked=!1,C.s[69]++,A.sideMenu.sideMenuElements.toToggle.dispatchEvent(new Event("change")),C.s[70]++,expect(A.basicSettings.double).toBeFalse(),C.s[71]++,expect(A.handles.toHandle.style.display).toEqual("none"),C.s[72]++,expect(A.interval.interval.style.display).toEqual("none"),C.s[73]++,expect(A.sideMenu.sideMenuElements.toInputWrapper.style.display).toEqual("none"),C.s[74]++,A.sideMenu.sideMenuElements.toToggle.checked=!0,C.s[75]++,A.sideMenu.sideMenuElements.toToggle.dispatchEvent(new Event("change")),C.s[76]++,expect(A.basicSettings.double).toBeTrue(),C.s[77]++,expect(A.handles.toHandle.style.display).toEqual("inline-block"),C.s[78]++,expect(A.interval.interval.style.display).toEqual("block"),C.s[79]++,expect(A.sideMenu.sideMenuElements.toInputWrapper.style.display).toEqual("block")})),C.s[80]++,it("bindEventListeners() correctly responds to plane input changes",(()=>{C.f[14]++,C.s[81]++,A.bindEventListeners(),C.s[82]++,A.sideMenu.sideMenuElements.planeToggle.checked=!0,C.s[83]++,A.sideMenu.sideMenuElements.planeToggle.dispatchEvent(new Event("change")),C.s[84]++,expect(A.basicSettings.vertical).toBeTrue(),C.s[85]++,expect(A.slider.slider).toHaveClass("goby-slider_state_vertical"),C.s[86]++,expect(A.handles.fromValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[87]++,expect(A.handles.toValue).toHaveClass("goby-slider__handle-value_state_vertical"),C.s[88]++,expect(A.valuesScale.minValue).toHaveClass("goby-slider__value_state_vertical"),C.s[89]++,A.sideMenu.sideMenuElements.planeToggle.checked=!1,C.s[90]++,A.sideMenu.sideMenuElements.planeToggle.dispatchEvent(new Event("change")),C.s[91]++,expect(A.basicSettings.vertical).toBeFalse(),C.s[92]++,expect(A.slider.slider).not.toHaveClass("goby-slider_state_vertical"),C.s[93]++,expect(A.handles.fromValue).not.toHaveClass("goby-slider__handle-value_state_vertical"),C.s[94]++,expect(A.handles.toValue).not.toHaveClass("goby-slider__handle-value_state_vertical"),C.s[95]++,expect(A.valuesScale.minValue).not.toHaveClass("goby-slider__value_state_vertical")})),C.s[96]++,it("bindEventListeners() correctly responds to valueScale input changes",(()=>{C.f[15]++,C.s[97]++,A.bindEventListeners(),C.s[98]++,A.sideMenu.sideMenuElements.valueScaleToggle.checked=!1,C.s[99]++,A.sideMenu.sideMenuElements.valueScaleToggle.dispatchEvent(new Event("change")),C.s[100]++,expect(A.basicSettings.valueScale).toBeFalsy(),C.s[101]++,expect(A.valuesScale.minValue.style.display).toEqual("none"),C.s[102]++,A.sideMenu.sideMenuElements.valueScaleToggle.checked=!0,C.s[103]++,A.sideMenu.sideMenuElements.valueScaleToggle.dispatchEvent(new Event("change")),C.s[104]++,expect(A.basicSettings.valueScale).toBeTrue(),C.s[105]++,expect(A.valuesScale.minValue.style.display).toEqual("inline-block")})),C.s[106]++,it("bindEventListeners() correctly responds to handelValues input changes",(()=>{C.f[16]++,C.s[107]++,A.bindEventListeners(),C.s[108]++,A.sideMenu.sideMenuElements.handleValuesToggle.checked=!1,C.s[109]++,A.sideMenu.sideMenuElements.handleValuesToggle.dispatchEvent(new Event("change")),C.s[110]++,expect(A.basicSettings.handlesValues).toBeFalsy(),C.s[111]++,expect(A.handles.fromValue.style.display).toEqual("none"),C.s[112]++,expect(A.handles.toValue.style.display).toEqual("none"),C.s[113]++,A.sideMenu.sideMenuElements.handleValuesToggle.checked=!0,C.s[114]++,A.sideMenu.sideMenuElements.handleValuesToggle.dispatchEvent(new Event("change")),C.s[115]++,expect(A.basicSettings.handlesValues).toBeTrue(),C.s[116]++,expect(A.handles.fromValue.style.display).toEqual("inline-block"),C.s[117]++,expect(A.handles.toValue.style.display).toEqual("inline-block")})),C.s[118]++,it("bindEventListeners() send new value from input",(()=>{C.f[17]++,C.s[119]++,A.bindEventListeners(),C.s[120]++,A.sideMenu.sideMenuElements.fromInput.value="50",C.s[121]++,A.sideMenu.sideMenuElements.fromInput.dispatchEvent(new Event("change")),C.s[122]++,expect(A.dataRequestToModel.needApplyNewValue).toEqual({name:"from",value:"50"}),C.s[123]++,A.sideMenu.sideMenuElements.toInput.value="80",C.s[124]++,A.sideMenu.sideMenuElements.toInput.dispatchEvent(new Event("change")),C.s[125]++,expect(A.dataRequestToModel.needApplyNewValue).toEqual({name:"to",value:"80"})})),C.s[126]++,it("bindEventListeners() send new step from input",(()=>{C.f[18]++,C.s[127]++,A.dataRequestToModel.needStepWidth={name:"",value:"true"},C.s[128]++,expect(A.dataRequestToModel.needStepWidth).toEqual({name:"",value:"true"}),C.s[129]++,A.bindEventListeners(),C.s[130]++,A.sideMenu.sideMenuElements.stepInput.value="50",C.s[131]++,A.sideMenu.sideMenuElements.stepInput.dispatchEvent(new Event("change")),C.s[132]++,expect(A.dataRequestToModel.needStepWidth).toEqual({name:"",value:"true"})}))}))},"./src/plugin/tools/index.test.ts":(A,e,n)=>{"use strict";var t,l,s,i,r,o,C=(t="C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\tools\\index.test.ts",l="47d78ddf95c7f9fbb0e180165a3ac1f16d7369b4",s=new(0,function(){}.constructor)("return this")(),r={path:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\tools\\index.test.ts",statementMap:{0:{start:{line:2,column:18},end:{line:2,column:63}},1:{start:{line:3,column:23},end:{line:3,column:72}},2:{start:{line:4,column:18},end:{line:4,column:62}},3:{start:{line:5,column:0},end:{line:5,column:36}},4:{start:{line:6,column:0},end:{line:6,column:46}},5:{start:{line:7,column:0},end:{line:7,column:36}},6:{start:{line:8,column:24},end:{line:8,column:65}},7:{start:{line:9,column:28},end:{line:9,column:73}},8:{start:{line:10,column:23},end:{line:10,column:63}},9:{start:{line:11,column:0},end:{line:11,column:48}},10:{start:{line:12,column:0},end:{line:12,column:56}},11:{start:{line:13,column:0},end:{line:13,column:46}}},fnMap:{},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0},f:{},b:{},inputSourceMap:{version:3,file:"C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\tools\\index.test.ts",sourceRoot:"",sources:["C:\\Users\\stasf\\Desktop\\Front\\Task-4\\src\\plugin\\tools\\index.test.ts"],names:[],mappings:";AAAA,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAChE,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AACzE,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAE/D,SAAS,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACpC,cAAc,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC9C,SAAS,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAEpC,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAClE,MAAM,mBAAmB,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1E,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAEhE,eAAe,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AAChD,mBAAmB,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACxD,cAAc,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC",sourcesContent:["const modelTest = require.context('../Model', true, /test.ts$/);\r\nconst presenterTests = require.context('../Presenter', true, /test.ts$/);\r\nconst viewTests = require.context('../View', true, /test.ts$/);\r\n\r\nmodelTest.keys().forEach(modelTest);\r\npresenterTests.keys().forEach(presenterTests);\r\nviewTests.keys().forEach(viewTests);\r\n\r\nconst modelComponents = require.context('../Model', true, /.ts$/);\r\nconst presenterComponents = require.context('../Presenter', true, /.ts$/);\r\nconst viewComponents = require.context('../View', true, /.ts$/);\r\n\r\nmodelComponents.keys().forEach(modelComponents);\r\npresenterComponents.keys().forEach(presenterComponents);\r\nviewComponents.keys().forEach(viewComponents);\r\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},(o=s[i="__coverage__"]||(s[i]={}))[t]&&o[t].hash===l?o[t]:(r.hash=l,o[t]=r));const a=(C.s[0]++,n("./src/plugin/Model sync recursive test.ts$")),u=(C.s[1]++,n("./src/plugin/Presenter sync recursive test.ts$")),c=(C.s[2]++,n("./src/plugin/View sync recursive test.ts$"));C.s[3]++,a.keys().forEach(a),C.s[4]++,u.keys().forEach(u),C.s[5]++,c.keys().forEach(c);const m=(C.s[6]++,n("./src/plugin/Model sync recursive .ts$")),d=(C.s[7]++,n("./src/plugin/Presenter sync recursive .ts$")),E=(C.s[8]++,n("./src/plugin/View sync recursive .ts$"));C.s[9]++,m.keys().forEach(m),C.s[10]++,d.keys().forEach(d),C.s[11]++,E.keys().forEach(E)},"./node_modules/jasmine-jquery/lib/jasmine-jquery.js":(A,e,n)=>{var t,l;t=function(){return this}(),l=function(A,e,n){"use strict";e.spiedEventsKey=function(A,e){return[n(A).selector,e].toString()},e.getFixtures=function(){return e.currentFixtures_=e.currentFixtures_||new e.Fixtures},e.getStyleFixtures=function(){return e.currentStyleFixtures_=e.currentStyleFixtures_||new e.StyleFixtures},e.Fixtures=function(){this.containerId="jasmine-fixtures",this.fixturesCache_={},this.fixturesPath="spec/javascripts/fixtures"},e.Fixtures.prototype.set=function(A){return this.cleanUp(),this.createContainer_(A)},e.Fixtures.prototype.appendSet=function(A){this.addToContainer_(A)},e.Fixtures.prototype.preload=function(){this.read.apply(this,arguments)},e.Fixtures.prototype.load=function(){this.cleanUp(),this.createContainer_(this.read.apply(this,arguments))},e.Fixtures.prototype.appendLoad=function(){this.addToContainer_(this.read.apply(this,arguments))},e.Fixtures.prototype.read=function(){for(var A=[],e=arguments,n=e.length,t=0;t<n;t++)A.push(this.getFixtureHtml_(e[t]));return A.join("")},e.Fixtures.prototype.clearCache=function(){this.fixturesCache_={}},e.Fixtures.prototype.cleanUp=function(){n("#"+this.containerId).remove()},e.Fixtures.prototype.sandbox=function(A){var e=A||{};return n('<div id="sandbox" />').attr(e)},e.Fixtures.prototype.createContainer_=function(A){var e=n("<div>").attr("id",this.containerId).html(A);return n(document.body).append(e),e},e.Fixtures.prototype.addToContainer_=function(A){n(document.body).find("#"+this.containerId).append(A).length||this.createContainer_(A)},e.Fixtures.prototype.getFixtureHtml_=function(A){return void 0===this.fixturesCache_[A]&&this.loadFixtureIntoCache_(A),this.fixturesCache_[A]},e.Fixtures.prototype.loadFixtureIntoCache_=function(A){var e=this.makeFixtureUrl_(A),t="";n.ajax({async:!1,cache:!1,url:e,dataType:"html",success:function(A,e,n){t=n.responseText}}).fail((function(A,n,t){throw new Error("Fixture could not be loaded: "+e+" (status: "+n+", message: "+t.message+")")})),(n(n.parseHTML(t,!0)).find("script[src]")||[]).each((function(){n.ajax({async:!1,cache:!1,dataType:"script",url:n(this).attr("src"),success:function(A,e,n){t+="<script>"+n.responseText+"<\/script>"},error:function(A,n,t){throw new Error("Script could not be loaded: "+e+" (status: "+n+", message: "+t.message+")")}})})),this.fixturesCache_[A]=t},e.Fixtures.prototype.makeFixtureUrl_=function(A){return this.fixturesPath.match("/$")?this.fixturesPath+A:this.fixturesPath+"/"+A},e.Fixtures.prototype.proxyCallTo_=function(A,e){return this[A].apply(this,e)},e.StyleFixtures=function(){this.fixturesCache_={},this.fixturesNodes_=[],this.fixturesPath="spec/javascripts/fixtures"},e.StyleFixtures.prototype.set=function(A){this.cleanUp(),this.createStyle_(A)},e.StyleFixtures.prototype.appendSet=function(A){this.createStyle_(A)},e.StyleFixtures.prototype.preload=function(){this.read_.apply(this,arguments)},e.StyleFixtures.prototype.load=function(){this.cleanUp(),this.createStyle_(this.read_.apply(this,arguments))},e.StyleFixtures.prototype.appendLoad=function(){this.createStyle_(this.read_.apply(this,arguments))},e.StyleFixtures.prototype.cleanUp=function(){for(;this.fixturesNodes_.length;)this.fixturesNodes_.pop().remove()},e.StyleFixtures.prototype.createStyle_=function(A){var e=n("<div></div>").html(A).text(),t=n("<style>"+e+"</style>");this.fixturesNodes_.push(t),n("head").append(t)},e.StyleFixtures.prototype.clearCache=e.Fixtures.prototype.clearCache,e.StyleFixtures.prototype.read_=e.Fixtures.prototype.read,e.StyleFixtures.prototype.getFixtureHtml_=e.Fixtures.prototype.getFixtureHtml_,e.StyleFixtures.prototype.loadFixtureIntoCache_=e.Fixtures.prototype.loadFixtureIntoCache_,e.StyleFixtures.prototype.makeFixtureUrl_=e.Fixtures.prototype.makeFixtureUrl_,e.StyleFixtures.prototype.proxyCallTo_=e.Fixtures.prototype.proxyCallTo_,e.getJSONFixtures=function(){return e.currentJSONFixtures_=e.currentJSONFixtures_||new e.JSONFixtures},e.JSONFixtures=function(){this.fixturesCache_={},this.fixturesPath="spec/javascripts/fixtures/json"},e.JSONFixtures.prototype.load=function(){return this.read.apply(this,arguments),this.fixturesCache_},e.JSONFixtures.prototype.read=function(){for(var A=arguments,e=A.length,n=0;n<e;n++)this.getFixtureData_(A[n]);return this.fixturesCache_},e.JSONFixtures.prototype.clearCache=function(){this.fixturesCache_={}},e.JSONFixtures.prototype.getFixtureData_=function(A){return this.fixturesCache_[A]||this.loadFixtureIntoCache_(A),this.fixturesCache_[A]},e.JSONFixtures.prototype.loadFixtureIntoCache_=function(A){var e=this,t=this.fixturesPath.match("/$")?this.fixturesPath+A:this.fixturesPath+"/"+A;n.ajax({async:!1,cache:!1,dataType:"json",url:t,success:function(n){e.fixturesCache_[A]=n},error:function(A,e,n){throw new Error("JSONFixture could not be loaded: "+t+" (status: "+e+", message: "+n.message+")")}})},e.JSONFixtures.prototype.proxyCallTo_=function(A,e){return this[A].apply(this,e)},e.jQuery=function(){},e.jQuery.browserTagCaseIndependentHtml=function(A){return n("<div/>").append(A).html()},e.jQuery.elementToString=function(A){return n(A).map((function(){return this.outerHTML})).toArray().join(", ")};var t={spiedEvents:{},handlers:[]};e.jQuery.events={spyOn:function(A,l){var s=function(n){var s=void 0!==t.spiedEvents[e.spiedEventsKey(A,l)]?t.spiedEvents[e.spiedEventsKey(A,l)].calls:0;t.spiedEvents[e.spiedEventsKey(A,l)]={args:e.util.argsToArray(arguments),calls:++s}};return n(A).on(l,s),t.handlers.push(s),{selector:A,eventName:l,handler:s,reset:function(){delete t.spiedEvents[e.spiedEventsKey(A,l)]},calls:{count:function(){return t.spiedEvents[e.spiedEventsKey(A,l)]?t.spiedEvents[e.spiedEventsKey(A,l)].calls:0},any:function(){return!!t.spiedEvents[e.spiedEventsKey(A,l)]&&!!t.spiedEvents[e.spiedEventsKey(A,l)].calls}}}},args:function(A,n){var l=t.spiedEvents[e.spiedEventsKey(A,n)].args;if(!l)throw"There is no spy for "+n+" on "+A.toString()+". Make sure to create a spy using spyOnEvent.";return l},wasTriggered:function(A,n){return!!t.spiedEvents[e.spiedEventsKey(A,n)]},wasTriggeredWith:function(A,n,t,l,s){var i=e.jQuery.events.args(A,n).slice(1);return"[object Array]"!==Object.prototype.toString.call(t)&&(i=i[0]),l.equals(i,t,s)},wasPrevented:function(A,n){var l=t.spiedEvents[e.spiedEventsKey(A,n)],s=e.util.isUndefined(l)?{}:l.args,i=s?s[0]:void 0;return i&&i.isDefaultPrevented()},wasStopped:function(A,n){var l=t.spiedEvents[e.spiedEventsKey(A,n)],s=e.util.isUndefined(l)?{}:l.args,i=s?s[0]:void 0;return i&&i.isPropagationStopped()},cleanUp:function(){t.spiedEvents={},t.handlers=[]}};var l=function(A,e){return void 0===e?void 0!==A:A===e};beforeEach((function(){e.addMatchers({toHaveClass:function(){return{compare:function(A,e){return{pass:n(A).hasClass(e)}}}},toHaveCss:function(){return{compare:function(A,e){for(var t in e){var l=e[t];if(("auto"!==l||"auto"!==n(A).get(0).style[t])&&n(A).css(t)!==l)return{pass:!1}}return{pass:!0}}}},toBeVisible:function(){return{compare:function(A){return{pass:n(A).is(":visible")}}}},toBeHidden:function(){return{compare:function(A){return{pass:n(A).is(":hidden")}}}},toBeSelected:function(){return{compare:function(A){return{pass:n(A).is(":selected")}}}},toBeChecked:function(){return{compare:function(A){return{pass:n(A).is(":checked")}}}},toBeEmpty:function(){return{compare:function(A){return{pass:n(A).is(":empty")}}}},toBeInDOM:function(){return{compare:function(A){return{pass:n.contains(document.documentElement,n(A)[0])}}}},toExist:function(){return{compare:function(A){return{pass:n(A).length}}}},toHaveLength:function(){return{compare:function(A,e){return{pass:n(A).length===e}}}},toHaveAttr:function(){return{compare:function(A,e,t){return{pass:l(n(A).attr(e),t)}}}},toHaveProp:function(){return{compare:function(A,e,t){return{pass:l(n(A).prop(e),t)}}}},toHaveId:function(){return{compare:function(A,e){return{pass:n(A).attr("id")==e}}}},toHaveHtml:function(){return{compare:function(A,t){return{pass:n(A).html()==e.jQuery.browserTagCaseIndependentHtml(t)}}}},toContainHtml:function(){return{compare:function(A,t){var l=n(A).html(),s=e.jQuery.browserTagCaseIndependentHtml(t);return{pass:l.indexOf(s)>=0}}}},toHaveText:function(){return{compare:function(A,e){var t=n(A).text(),l=n.trim(t);return e&&n.isFunction(e.test)?{pass:e.test(t)||e.test(l)}:{pass:t==e||l==e}}}},toContainText:function(){return{compare:function(A,e){var t=n.trim(n(A).text());return e&&n.isFunction(e.test)?{pass:e.test(t)}:{pass:-1!=t.indexOf(e)}}}},toHaveValue:function(){return{compare:function(A,e){return{pass:n(A).val()===e}}}},toHaveData:function(){return{compare:function(A,e,t){return{pass:l(n(A).data(e),t)}}}},toContainElement:function(){return{compare:function(A,e){return{pass:n(A).find(e).length}}}},toBeMatchedBy:function(){return{compare:function(A,e){return{pass:n(A).filter(e).length}}}},toBeDisabled:function(){return{compare:function(A,e){return{pass:n(A).is(":disabled")}}}},toBeFocused:function(A){return{compare:function(A,e){return{pass:n(A)[0]===n(A)[0].ownerDocument.activeElement}}}},toHandle:function(){return{compare:function(A,e){if(!A||0===A.length)return{pass:!1};var t=n._data(n(A).get(0),"events");if(!t||!e||"string"!=typeof e)return{pass:!1};var l=e.split("."),s=l.shift(),i=l.slice(0).sort(),r=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(!t[s]||!l.length)return{pass:t[s]&&t[s].length>0};for(var o=0;o<t[s].length;o++){var C=t[s][o].namespace;if(r.test(C))return{pass:!0}}return{pass:!1}}}},toHandleWith:function(){return{compare:function(A,e,t){if(!A||0===A.length)return{pass:!1};for(var l=e.split(".")[0],s=n._data(n(A).get(0),"events")[l],i=0;i<s.length;i++)if(s[i].handler==t)return{pass:!0};return{pass:!1}}}},toHaveBeenTriggeredOn:function(){return{compare:function(A,t){var l={pass:e.jQuery.events.wasTriggered(t,A)};return l.message=l.pass?"Expected event "+n(A)+" not to have been triggered on "+t:"Expected event "+n(A)+" to have been triggered on "+t,l}}},toHaveBeenTriggered:function(){return{compare:function(A){var n=A.eventName,t=A.selector,l={pass:e.jQuery.events.wasTriggered(t,n)};return l.message=l.pass?"Expected event "+n+" not to have been triggered on "+t:"Expected event "+n+" to have been triggered on "+t,l}}},toHaveBeenTriggeredOnAndWith:function(A,n){return{compare:function(t,l,s){var i=e.jQuery.events.wasTriggered(l,t),r={pass:i&&e.jQuery.events.wasTriggeredWith(l,t,s,A,n)};if(i){var o=e.jQuery.events.args(l,t,s)[1];r.message=r.pass?"Expected event "+t+" not to have been triggered with "+e.pp(s)+" but it was triggered with "+e.pp(o):"Expected event "+t+" to have been triggered with "+e.pp(s)+"  but it was triggered with "+e.pp(o)}else r.message=r.pass?"Expected event "+t+" not to have been triggered on "+l:"Expected event "+t+" to have been triggered on "+l;return r}}},toHaveBeenPreventedOn:function(){return{compare:function(A,n){var t={pass:e.jQuery.events.wasPrevented(n,A)};return t.message=t.pass?"Expected event "+A+" not to have been prevented on "+n:"Expected event "+A+" to have been prevented on "+n,t}}},toHaveBeenPrevented:function(){return{compare:function(A){var n=A.eventName,t=A.selector,l={pass:e.jQuery.events.wasPrevented(t,n)};return l.message=l.pass?"Expected event "+n+" not to have been prevented on "+t:"Expected event "+n+" to have been prevented on "+t,l}}},toHaveBeenStoppedOn:function(){return{compare:function(A,n){var t={pass:e.jQuery.events.wasStopped(n,A)};return t.message=t.pass?"Expected event "+A+" not to have been stopped on "+n:"Expected event "+A+" to have been stopped on "+n,t}}},toHaveBeenStopped:function(){return{compare:function(A){var n=A.eventName,t=A.selector,l={pass:e.jQuery.events.wasStopped(t,n)};return l.message=l.pass?"Expected event "+n+" not to have been stopped on "+t:"Expected event "+n+" to have been stopped on "+t,l}}}}),e.getEnv().addCustomEqualityTester((function(A,t){if(A&&t){if(A instanceof n||e.isDomNode(A)){var l=n(A);return t instanceof n?l.length==t.length&&A.is(t):l.is(t)}if(t instanceof n||e.isDomNode(t)){var s=n(t);return A instanceof n?A.length==s.length&&s.is(A):n(t).is(A)}}})),e.getEnv().addCustomEqualityTester((function(A,e){if(A instanceof n&&e instanceof n&&A.size()==e.size())return A.is(e)}))})),afterEach((function(){e.getFixtures().cleanUp(),e.getStyleFixtures().cleanUp(),e.jQuery.events.cleanUp()})),A.readFixtures=function(){return e.getFixtures().proxyCallTo_("read",arguments)},A.preloadFixtures=function(){e.getFixtures().proxyCallTo_("preload",arguments)},A.loadFixtures=function(){e.getFixtures().proxyCallTo_("load",arguments)},A.appendLoadFixtures=function(){e.getFixtures().proxyCallTo_("appendLoad",arguments)},A.setFixtures=function(A){return e.getFixtures().proxyCallTo_("set",arguments)},A.appendSetFixtures=function(){e.getFixtures().proxyCallTo_("appendSet",arguments)},A.sandbox=function(A){return e.getFixtures().sandbox(A)},A.spyOnEvent=function(A,n){return e.jQuery.events.spyOn(A,n)},A.preloadStyleFixtures=function(){e.getStyleFixtures().proxyCallTo_("preload",arguments)},A.loadStyleFixtures=function(){e.getStyleFixtures().proxyCallTo_("load",arguments)},A.appendLoadStyleFixtures=function(){e.getStyleFixtures().proxyCallTo_("appendLoad",arguments)},A.setStyleFixtures=function(A){e.getStyleFixtures().proxyCallTo_("set",arguments)},A.appendSetStyleFixtures=function(A){e.getStyleFixtures().proxyCallTo_("appendSet",arguments)},A.loadJSONFixtures=function(){return e.getJSONFixtures().proxyCallTo_("load",arguments)},A.getJSONFixture=function(A){return e.getJSONFixtures().proxyCallTo_("read",arguments)[A]}},A.exports?l(t,t.jasmine,n("./node_modules/jquery/dist/jquery.js")):l(t,t.jasmine,t.jQuery)},"./node_modules/jquery/dist/jquery.js":function(A,e){var n;!function(e,n){"use strict";"object"==typeof A.exports?A.exports=e.document?n(e,!0):function(A){if(!A.document)throw new Error("jQuery requires a window with a document");return n(A)}:n(e)}("undefined"!=typeof window?window:this,(function(t,l){"use strict";var s=[],i=Object.getPrototypeOf,r=s.slice,o=s.flat?function(A){return s.flat.call(A)}:function(A){return s.concat.apply([],A)},C=s.push,a=s.indexOf,u={},c=u.toString,m=u.hasOwnProperty,d=m.toString,E=d.call(Object),p={},h=function(A){return"function"==typeof A&&"number"!=typeof A.nodeType&&"function"!=typeof A.item},I=function(A){return null!=A&&A===A.window},f=t.document,g={type:!0,src:!0,nonce:!0,noModule:!0};function M(A,e,n){var t,l,s=(n=n||f).createElement("script");if(s.text=A,e)for(t in g)(l=e[t]||e.getAttribute&&e.getAttribute(t))&&s.setAttribute(t,l);n.head.appendChild(s).parentNode.removeChild(s)}function v(A){return null==A?A+"":"object"==typeof A||"function"==typeof A?u[c.call(A)]||"object":typeof A}var y="3.6.0",B=function(A,e){return new B.fn.init(A,e)};function b(A){var e=!!A&&"length"in A&&A.length,n=v(A);return!h(A)&&!I(A)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in A)}B.fn=B.prototype={jquery:y,constructor:B,length:0,toArray:function(){return r.call(this)},get:function(A){return null==A?r.call(this):A<0?this[A+this.length]:this[A]},pushStack:function(A){var e=B.merge(this.constructor(),A);return e.prevObject=this,e},each:function(A){return B.each(this,A)},map:function(A){return this.pushStack(B.map(this,(function(e,n){return A.call(e,n,e)})))},slice:function(){return this.pushStack(r.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(B.grep(this,(function(A,e){return(e+1)%2})))},odd:function(){return this.pushStack(B.grep(this,(function(A,e){return e%2})))},eq:function(A){var e=this.length,n=+A+(A<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:C,sort:s.sort,splice:s.splice},B.extend=B.fn.extend=function(){var A,e,n,t,l,s,i=arguments[0]||{},r=1,o=arguments.length,C=!1;for("boolean"==typeof i&&(C=i,i=arguments[r]||{},r++),"object"==typeof i||h(i)||(i={}),r===o&&(i=this,r--);r<o;r++)if(null!=(A=arguments[r]))for(e in A)t=A[e],"__proto__"!==e&&i!==t&&(C&&t&&(B.isPlainObject(t)||(l=Array.isArray(t)))?(n=i[e],s=l&&!Array.isArray(n)?[]:l||B.isPlainObject(n)?n:{},l=!1,i[e]=B.extend(C,s,t)):void 0!==t&&(i[e]=t));return i},B.extend({expando:"jQuery"+(y+Math.random()).replace(/\D/g,""),isReady:!0,error:function(A){throw new Error(A)},noop:function(){},isPlainObject:function(A){var e,n;return!(!A||"[object Object]"!==c.call(A))&&(!(e=i(A))||"function"==typeof(n=m.call(e,"constructor")&&e.constructor)&&d.call(n)===E)},isEmptyObject:function(A){var e;for(e in A)return!1;return!0},globalEval:function(A,e,n){M(A,{nonce:e&&e.nonce},n)},each:function(A,e){var n,t=0;if(b(A))for(n=A.length;t<n&&!1!==e.call(A[t],t,A[t]);t++);else for(t in A)if(!1===e.call(A[t],t,A[t]))break;return A},makeArray:function(A,e){var n=e||[];return null!=A&&(b(Object(A))?B.merge(n,"string"==typeof A?[A]:A):C.call(n,A)),n},inArray:function(A,e,n){return null==e?-1:a.call(e,A,n)},merge:function(A,e){for(var n=+e.length,t=0,l=A.length;t<n;t++)A[l++]=e[t];return A.length=l,A},grep:function(A,e,n){for(var t=[],l=0,s=A.length,i=!n;l<s;l++)!e(A[l],l)!==i&&t.push(A[l]);return t},map:function(A,e,n){var t,l,s=0,i=[];if(b(A))for(t=A.length;s<t;s++)null!=(l=e(A[s],s,n))&&i.push(l);else for(s in A)null!=(l=e(A[s],s,n))&&i.push(l);return o(i)},guid:1,support:p}),"function"==typeof Symbol&&(B.fn[Symbol.iterator]=s[Symbol.iterator]),B.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(A,e){u["[object "+e+"]"]=e.toLowerCase()}));var S=function(A){var e,n,t,l,s,i,r,o,C,a,u,c,m,d,E,p,h,I,f,g="sizzle"+1*new Date,M=A.document,v=0,y=0,B=oA(),b=oA(),S=oA(),Q=oA(),G=function(A,e){return A===e&&(u=!0),0},x={}.hasOwnProperty,O=[],w=O.pop,W=O.push,K=O.push,_=O.slice,T=function(A,e){for(var n=0,t=A.length;n<t;n++)if(A[n]===e)return n;return-1},D="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",V="[\\x20\\t\\r\\n\\f]",H="(?:\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",k="\\[[\\x20\\t\\r\\n\\f]*("+H+")(?:"+V+"*([*^$|!~]?=)"+V+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+H+"))|)"+V+"*\\]",F=":("+H+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+k+")*)|.*)\\)|)",Y=new RegExp(V+"+","g"),q=new RegExp("^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$","g"),U=new RegExp("^[\\x20\\t\\r\\n\\f]*,[\\x20\\t\\r\\n\\f]*"),P=new RegExp("^[\\x20\\t\\r\\n\\f]*([>+~]|[\\x20\\t\\r\\n\\f])[\\x20\\t\\r\\n\\f]*"),N=new RegExp(V+"|>"),L=new RegExp(F),j=new RegExp("^"+H+"$"),R={ID:new RegExp("^#("+H+")"),CLASS:new RegExp("^\\.("+H+")"),TAG:new RegExp("^("+H+"|[*])"),ATTR:new RegExp("^"+k),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)","i"),bool:new RegExp("^(?:"+D+")$","i"),needsContext:new RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)","i")},z=/HTML$/i,$=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,AA=/[+~]/,eA=new RegExp("\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\([^\\r\\n\\f])","g"),nA=function(A,e){var n="0x"+A.slice(1)-65536;return e||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},tA=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,lA=function(A,e){return e?"\0"===A?"�":A.slice(0,-1)+"\\"+A.charCodeAt(A.length-1).toString(16)+" ":"\\"+A},sA=function(){c()},iA=gA((function(A){return!0===A.disabled&&"fieldset"===A.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{K.apply(O=_.call(M.childNodes),M.childNodes),O[M.childNodes.length].nodeType}catch(A){K={apply:O.length?function(A,e){W.apply(A,_.call(e))}:function(A,e){for(var n=A.length,t=0;A[n++]=e[t++];);A.length=n-1}}}function rA(A,e,t,l){var s,r,C,a,u,d,h,I=e&&e.ownerDocument,M=e?e.nodeType:9;if(t=t||[],"string"!=typeof A||!A||1!==M&&9!==M&&11!==M)return t;if(!l&&(c(e),e=e||m,E)){if(11!==M&&(u=Z.exec(A)))if(s=u[1]){if(9===M){if(!(C=e.getElementById(s)))return t;if(C.id===s)return t.push(C),t}else if(I&&(C=I.getElementById(s))&&f(e,C)&&C.id===s)return t.push(C),t}else{if(u[2])return K.apply(t,e.getElementsByTagName(A)),t;if((s=u[3])&&n.getElementsByClassName&&e.getElementsByClassName)return K.apply(t,e.getElementsByClassName(s)),t}if(n.qsa&&!Q[A+" "]&&(!p||!p.test(A))&&(1!==M||"object"!==e.nodeName.toLowerCase())){if(h=A,I=e,1===M&&(N.test(A)||P.test(A))){for((I=AA.test(A)&&hA(e.parentNode)||e)===e&&n.scope||((a=e.getAttribute("id"))?a=a.replace(tA,lA):e.setAttribute("id",a=g)),r=(d=i(A)).length;r--;)d[r]=(a?"#"+a:":scope")+" "+fA(d[r]);h=d.join(",")}try{return K.apply(t,I.querySelectorAll(h)),t}catch(e){Q(A,!0)}finally{a===g&&e.removeAttribute("id")}}}return o(A.replace(q,"$1"),e,t,l)}function oA(){var A=[];return function e(n,l){return A.push(n+" ")>t.cacheLength&&delete e[A.shift()],e[n+" "]=l}}function CA(A){return A[g]=!0,A}function aA(A){var e=m.createElement("fieldset");try{return!!A(e)}catch(A){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function uA(A,e){for(var n=A.split("|"),l=n.length;l--;)t.attrHandle[n[l]]=e}function cA(A,e){var n=e&&A,t=n&&1===A.nodeType&&1===e.nodeType&&A.sourceIndex-e.sourceIndex;if(t)return t;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return A?1:-1}function mA(A){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===A}}function dA(A){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===A}}function EA(A){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===A:e.disabled===A:e.isDisabled===A||e.isDisabled!==!A&&iA(e)===A:e.disabled===A:"label"in e&&e.disabled===A}}function pA(A){return CA((function(e){return e=+e,CA((function(n,t){for(var l,s=A([],n.length,e),i=s.length;i--;)n[l=s[i]]&&(n[l]=!(t[l]=n[l]))}))}))}function hA(A){return A&&void 0!==A.getElementsByTagName&&A}for(e in n=rA.support={},s=rA.isXML=function(A){var e=A&&A.namespaceURI,n=A&&(A.ownerDocument||A).documentElement;return!z.test(e||n&&n.nodeName||"HTML")},c=rA.setDocument=function(A){var e,l,i=A?A.ownerDocument||A:M;return i!=m&&9===i.nodeType&&i.documentElement?(d=(m=i).documentElement,E=!s(m),M!=m&&(l=m.defaultView)&&l.top!==l&&(l.addEventListener?l.addEventListener("unload",sA,!1):l.attachEvent&&l.attachEvent("onunload",sA)),n.scope=aA((function(A){return d.appendChild(A).appendChild(m.createElement("div")),void 0!==A.querySelectorAll&&!A.querySelectorAll(":scope fieldset div").length})),n.attributes=aA((function(A){return A.className="i",!A.getAttribute("className")})),n.getElementsByTagName=aA((function(A){return A.appendChild(m.createComment("")),!A.getElementsByTagName("*").length})),n.getElementsByClassName=J.test(m.getElementsByClassName),n.getById=aA((function(A){return d.appendChild(A).id=g,!m.getElementsByName||!m.getElementsByName(g).length})),n.getById?(t.filter.ID=function(A){var e=A.replace(eA,nA);return function(A){return A.getAttribute("id")===e}},t.find.ID=function(A,e){if(void 0!==e.getElementById&&E){var n=e.getElementById(A);return n?[n]:[]}}):(t.filter.ID=function(A){var e=A.replace(eA,nA);return function(A){var n=void 0!==A.getAttributeNode&&A.getAttributeNode("id");return n&&n.value===e}},t.find.ID=function(A,e){if(void 0!==e.getElementById&&E){var n,t,l,s=e.getElementById(A);if(s){if((n=s.getAttributeNode("id"))&&n.value===A)return[s];for(l=e.getElementsByName(A),t=0;s=l[t++];)if((n=s.getAttributeNode("id"))&&n.value===A)return[s]}return[]}}),t.find.TAG=n.getElementsByTagName?function(A,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(A):n.qsa?e.querySelectorAll(A):void 0}:function(A,e){var n,t=[],l=0,s=e.getElementsByTagName(A);if("*"===A){for(;n=s[l++];)1===n.nodeType&&t.push(n);return t}return s},t.find.CLASS=n.getElementsByClassName&&function(A,e){if(void 0!==e.getElementsByClassName&&E)return e.getElementsByClassName(A)},h=[],p=[],(n.qsa=J.test(m.querySelectorAll))&&(aA((function(A){var e;d.appendChild(A).innerHTML="<a id='"+g+"'></a><select id='"+g+"-\r\\' msallowcapture=''><option selected=''></option></select>",A.querySelectorAll("[msallowcapture^='']").length&&p.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"),A.querySelectorAll("[selected]").length||p.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|"+D+")"),A.querySelectorAll("[id~="+g+"-]").length||p.push("~="),(e=m.createElement("input")).setAttribute("name",""),A.appendChild(e),A.querySelectorAll("[name='']").length||p.push("\\[[\\x20\\t\\r\\n\\f]*name[\\x20\\t\\r\\n\\f]*=[\\x20\\t\\r\\n\\f]*(?:''|\"\")"),A.querySelectorAll(":checked").length||p.push(":checked"),A.querySelectorAll("a#"+g+"+*").length||p.push(".#.+[+~]"),A.querySelectorAll("\\\f"),p.push("[\\r\\n\\f]")})),aA((function(A){A.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=m.createElement("input");e.setAttribute("type","hidden"),A.appendChild(e).setAttribute("name","D"),A.querySelectorAll("[name=d]").length&&p.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?="),2!==A.querySelectorAll(":enabled").length&&p.push(":enabled",":disabled"),d.appendChild(A).disabled=!0,2!==A.querySelectorAll(":disabled").length&&p.push(":enabled",":disabled"),A.querySelectorAll("*,:x"),p.push(",.*:")}))),(n.matchesSelector=J.test(I=d.matches||d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&aA((function(A){n.disconnectedMatch=I.call(A,"*"),I.call(A,"[s!='']:x"),h.push("!=",F)})),p=p.length&&new RegExp(p.join("|")),h=h.length&&new RegExp(h.join("|")),e=J.test(d.compareDocumentPosition),f=e||J.test(d.contains)?function(A,e){var n=9===A.nodeType?A.documentElement:A,t=e&&e.parentNode;return A===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):A.compareDocumentPosition&&16&A.compareDocumentPosition(t)))}:function(A,e){if(e)for(;e=e.parentNode;)if(e===A)return!0;return!1},G=e?function(A,e){if(A===e)return u=!0,0;var t=!A.compareDocumentPosition-!e.compareDocumentPosition;return t||(1&(t=(A.ownerDocument||A)==(e.ownerDocument||e)?A.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(A)===t?A==m||A.ownerDocument==M&&f(M,A)?-1:e==m||e.ownerDocument==M&&f(M,e)?1:a?T(a,A)-T(a,e):0:4&t?-1:1)}:function(A,e){if(A===e)return u=!0,0;var n,t=0,l=A.parentNode,s=e.parentNode,i=[A],r=[e];if(!l||!s)return A==m?-1:e==m?1:l?-1:s?1:a?T(a,A)-T(a,e):0;if(l===s)return cA(A,e);for(n=A;n=n.parentNode;)i.unshift(n);for(n=e;n=n.parentNode;)r.unshift(n);for(;i[t]===r[t];)t++;return t?cA(i[t],r[t]):i[t]==M?-1:r[t]==M?1:0},m):m},rA.matches=function(A,e){return rA(A,null,null,e)},rA.matchesSelector=function(A,e){if(c(A),n.matchesSelector&&E&&!Q[e+" "]&&(!h||!h.test(e))&&(!p||!p.test(e)))try{var t=I.call(A,e);if(t||n.disconnectedMatch||A.document&&11!==A.document.nodeType)return t}catch(A){Q(e,!0)}return rA(e,m,null,[A]).length>0},rA.contains=function(A,e){return(A.ownerDocument||A)!=m&&c(A),f(A,e)},rA.attr=function(A,e){(A.ownerDocument||A)!=m&&c(A);var l=t.attrHandle[e.toLowerCase()],s=l&&x.call(t.attrHandle,e.toLowerCase())?l(A,e,!E):void 0;return void 0!==s?s:n.attributes||!E?A.getAttribute(e):(s=A.getAttributeNode(e))&&s.specified?s.value:null},rA.escape=function(A){return(A+"").replace(tA,lA)},rA.error=function(A){throw new Error("Syntax error, unrecognized expression: "+A)},rA.uniqueSort=function(A){var e,t=[],l=0,s=0;if(u=!n.detectDuplicates,a=!n.sortStable&&A.slice(0),A.sort(G),u){for(;e=A[s++];)e===A[s]&&(l=t.push(s));for(;l--;)A.splice(t[l],1)}return a=null,A},l=rA.getText=function(A){var e,n="",t=0,s=A.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof A.textContent)return A.textContent;for(A=A.firstChild;A;A=A.nextSibling)n+=l(A)}else if(3===s||4===s)return A.nodeValue}else for(;e=A[t++];)n+=l(e);return n},t=rA.selectors={cacheLength:50,createPseudo:CA,match:R,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(A){return A[1]=A[1].replace(eA,nA),A[3]=(A[3]||A[4]||A[5]||"").replace(eA,nA),"~="===A[2]&&(A[3]=" "+A[3]+" "),A.slice(0,4)},CHILD:function(A){return A[1]=A[1].toLowerCase(),"nth"===A[1].slice(0,3)?(A[3]||rA.error(A[0]),A[4]=+(A[4]?A[5]+(A[6]||1):2*("even"===A[3]||"odd"===A[3])),A[5]=+(A[7]+A[8]||"odd"===A[3])):A[3]&&rA.error(A[0]),A},PSEUDO:function(A){var e,n=!A[6]&&A[2];return R.CHILD.test(A[0])?null:(A[3]?A[2]=A[4]||A[5]||"":n&&L.test(n)&&(e=i(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(A[0]=A[0].slice(0,e),A[2]=n.slice(0,e)),A.slice(0,3))}},filter:{TAG:function(A){var e=A.replace(eA,nA).toLowerCase();return"*"===A?function(){return!0}:function(A){return A.nodeName&&A.nodeName.toLowerCase()===e}},CLASS:function(A){var e=B[A+" "];return e||(e=new RegExp("(^|[\\x20\\t\\r\\n\\f])"+A+"("+V+"|$)"))&&B(A,(function(A){return e.test("string"==typeof A.className&&A.className||void 0!==A.getAttribute&&A.getAttribute("class")||"")}))},ATTR:function(A,e,n){return function(t){var l=rA.attr(t,A);return null==l?"!="===e:!e||(l+="","="===e?l===n:"!="===e?l!==n:"^="===e?n&&0===l.indexOf(n):"*="===e?n&&l.indexOf(n)>-1:"$="===e?n&&l.slice(-n.length)===n:"~="===e?(" "+l.replace(Y," ")+" ").indexOf(n)>-1:"|="===e&&(l===n||l.slice(0,n.length+1)===n+"-"))}},CHILD:function(A,e,n,t,l){var s="nth"!==A.slice(0,3),i="last"!==A.slice(-4),r="of-type"===e;return 1===t&&0===l?function(A){return!!A.parentNode}:function(e,n,o){var C,a,u,c,m,d,E=s!==i?"nextSibling":"previousSibling",p=e.parentNode,h=r&&e.nodeName.toLowerCase(),I=!o&&!r,f=!1;if(p){if(s){for(;E;){for(c=e;c=c[E];)if(r?c.nodeName.toLowerCase()===h:1===c.nodeType)return!1;d=E="only"===A&&!d&&"nextSibling"}return!0}if(d=[i?p.firstChild:p.lastChild],i&&I){for(f=(m=(C=(a=(u=(c=p)[g]||(c[g]={}))[c.uniqueID]||(u[c.uniqueID]={}))[A]||[])[0]===v&&C[1])&&C[2],c=m&&p.childNodes[m];c=++m&&c&&c[E]||(f=m=0)||d.pop();)if(1===c.nodeType&&++f&&c===e){a[A]=[v,m,f];break}}else if(I&&(f=m=(C=(a=(u=(c=e)[g]||(c[g]={}))[c.uniqueID]||(u[c.uniqueID]={}))[A]||[])[0]===v&&C[1]),!1===f)for(;(c=++m&&c&&c[E]||(f=m=0)||d.pop())&&((r?c.nodeName.toLowerCase()!==h:1!==c.nodeType)||!++f||(I&&((a=(u=c[g]||(c[g]={}))[c.uniqueID]||(u[c.uniqueID]={}))[A]=[v,f]),c!==e)););return(f-=l)===t||f%t==0&&f/t>=0}}},PSEUDO:function(A,e){var n,l=t.pseudos[A]||t.setFilters[A.toLowerCase()]||rA.error("unsupported pseudo: "+A);return l[g]?l(e):l.length>1?(n=[A,A,"",e],t.setFilters.hasOwnProperty(A.toLowerCase())?CA((function(A,n){for(var t,s=l(A,e),i=s.length;i--;)A[t=T(A,s[i])]=!(n[t]=s[i])})):function(A){return l(A,0,n)}):l}},pseudos:{not:CA((function(A){var e=[],n=[],t=r(A.replace(q,"$1"));return t[g]?CA((function(A,e,n,l){for(var s,i=t(A,null,l,[]),r=A.length;r--;)(s=i[r])&&(A[r]=!(e[r]=s))})):function(A,l,s){return e[0]=A,t(e,null,s,n),e[0]=null,!n.pop()}})),has:CA((function(A){return function(e){return rA(A,e).length>0}})),contains:CA((function(A){return A=A.replace(eA,nA),function(e){return(e.textContent||l(e)).indexOf(A)>-1}})),lang:CA((function(A){return j.test(A||"")||rA.error("unsupported lang: "+A),A=A.replace(eA,nA).toLowerCase(),function(e){var n;do{if(n=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===A||0===n.indexOf(A+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var n=A.location&&A.location.hash;return n&&n.slice(1)===e.id},root:function(A){return A===d},focus:function(A){return A===m.activeElement&&(!m.hasFocus||m.hasFocus())&&!!(A.type||A.href||~A.tabIndex)},enabled:EA(!1),disabled:EA(!0),checked:function(A){var e=A.nodeName.toLowerCase();return"input"===e&&!!A.checked||"option"===e&&!!A.selected},selected:function(A){return A.parentNode&&A.parentNode.selectedIndex,!0===A.selected},empty:function(A){for(A=A.firstChild;A;A=A.nextSibling)if(A.nodeType<6)return!1;return!0},parent:function(A){return!t.pseudos.empty(A)},header:function(A){return X.test(A.nodeName)},input:function(A){return $.test(A.nodeName)},button:function(A){var e=A.nodeName.toLowerCase();return"input"===e&&"button"===A.type||"button"===e},text:function(A){var e;return"input"===A.nodeName.toLowerCase()&&"text"===A.type&&(null==(e=A.getAttribute("type"))||"text"===e.toLowerCase())},first:pA((function(){return[0]})),last:pA((function(A,e){return[e-1]})),eq:pA((function(A,e,n){return[n<0?n+e:n]})),even:pA((function(A,e){for(var n=0;n<e;n+=2)A.push(n);return A})),odd:pA((function(A,e){for(var n=1;n<e;n+=2)A.push(n);return A})),lt:pA((function(A,e,n){for(var t=n<0?n+e:n>e?e:n;--t>=0;)A.push(t);return A})),gt:pA((function(A,e,n){for(var t=n<0?n+e:n;++t<e;)A.push(t);return A}))}},t.pseudos.nth=t.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})t.pseudos[e]=mA(e);for(e in{submit:!0,reset:!0})t.pseudos[e]=dA(e);function IA(){}function fA(A){for(var e=0,n=A.length,t="";e<n;e++)t+=A[e].value;return t}function gA(A,e,n){var t=e.dir,l=e.next,s=l||t,i=n&&"parentNode"===s,r=y++;return e.first?function(e,n,l){for(;e=e[t];)if(1===e.nodeType||i)return A(e,n,l);return!1}:function(e,n,o){var C,a,u,c=[v,r];if(o){for(;e=e[t];)if((1===e.nodeType||i)&&A(e,n,o))return!0}else for(;e=e[t];)if(1===e.nodeType||i)if(a=(u=e[g]||(e[g]={}))[e.uniqueID]||(u[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[t]||e;else{if((C=a[s])&&C[0]===v&&C[1]===r)return c[2]=C[2];if(a[s]=c,c[2]=A(e,n,o))return!0}return!1}}function MA(A){return A.length>1?function(e,n,t){for(var l=A.length;l--;)if(!A[l](e,n,t))return!1;return!0}:A[0]}function vA(A,e,n,t,l){for(var s,i=[],r=0,o=A.length,C=null!=e;r<o;r++)(s=A[r])&&(n&&!n(s,t,l)||(i.push(s),C&&e.push(r)));return i}function yA(A,e,n,t,l,s){return t&&!t[g]&&(t=yA(t)),l&&!l[g]&&(l=yA(l,s)),CA((function(s,i,r,o){var C,a,u,c=[],m=[],d=i.length,E=s||function(A,e,n){for(var t=0,l=e.length;t<l;t++)rA(A,e[t],n);return n}(e||"*",r.nodeType?[r]:r,[]),p=!A||!s&&e?E:vA(E,c,A,r,o),h=n?l||(s?A:d||t)?[]:i:p;if(n&&n(p,h,r,o),t)for(C=vA(h,m),t(C,[],r,o),a=C.length;a--;)(u=C[a])&&(h[m[a]]=!(p[m[a]]=u));if(s){if(l||A){if(l){for(C=[],a=h.length;a--;)(u=h[a])&&C.push(p[a]=u);l(null,h=[],C,o)}for(a=h.length;a--;)(u=h[a])&&(C=l?T(s,u):c[a])>-1&&(s[C]=!(i[C]=u))}}else h=vA(h===i?h.splice(d,h.length):h),l?l(null,i,h,o):K.apply(i,h)}))}function BA(A){for(var e,n,l,s=A.length,i=t.relative[A[0].type],r=i||t.relative[" "],o=i?1:0,a=gA((function(A){return A===e}),r,!0),u=gA((function(A){return T(e,A)>-1}),r,!0),c=[function(A,n,t){var l=!i&&(t||n!==C)||((e=n).nodeType?a(A,n,t):u(A,n,t));return e=null,l}];o<s;o++)if(n=t.relative[A[o].type])c=[gA(MA(c),n)];else{if((n=t.filter[A[o].type].apply(null,A[o].matches))[g]){for(l=++o;l<s&&!t.relative[A[l].type];l++);return yA(o>1&&MA(c),o>1&&fA(A.slice(0,o-1).concat({value:" "===A[o-2].type?"*":""})).replace(q,"$1"),n,o<l&&BA(A.slice(o,l)),l<s&&BA(A=A.slice(l)),l<s&&fA(A))}c.push(n)}return MA(c)}return IA.prototype=t.filters=t.pseudos,t.setFilters=new IA,i=rA.tokenize=function(A,e){var n,l,s,i,r,o,C,a=b[A+" "];if(a)return e?0:a.slice(0);for(r=A,o=[],C=t.preFilter;r;){for(i in n&&!(l=U.exec(r))||(l&&(r=r.slice(l[0].length)||r),o.push(s=[])),n=!1,(l=P.exec(r))&&(n=l.shift(),s.push({value:n,type:l[0].replace(q," ")}),r=r.slice(n.length)),t.filter)!(l=R[i].exec(r))||C[i]&&!(l=C[i](l))||(n=l.shift(),s.push({value:n,type:i,matches:l}),r=r.slice(n.length));if(!n)break}return e?r.length:r?rA.error(A):b(A,o).slice(0)},r=rA.compile=function(A,e){var n,l=[],s=[],r=S[A+" "];if(!r){for(e||(e=i(A)),n=e.length;n--;)(r=BA(e[n]))[g]?l.push(r):s.push(r);r=S(A,function(A,e){var n=e.length>0,l=A.length>0,s=function(s,i,r,o,a){var u,d,p,h=0,I="0",f=s&&[],g=[],M=C,y=s||l&&t.find.TAG("*",a),B=v+=null==M?1:Math.random()||.1,b=y.length;for(a&&(C=i==m||i||a);I!==b&&null!=(u=y[I]);I++){if(l&&u){for(d=0,i||u.ownerDocument==m||(c(u),r=!E);p=A[d++];)if(p(u,i||m,r)){o.push(u);break}a&&(v=B)}n&&((u=!p&&u)&&h--,s&&f.push(u))}if(h+=I,n&&I!==h){for(d=0;p=e[d++];)p(f,g,i,r);if(s){if(h>0)for(;I--;)f[I]||g[I]||(g[I]=w.call(o));g=vA(g)}K.apply(o,g),a&&!s&&g.length>0&&h+e.length>1&&rA.uniqueSort(o)}return a&&(v=B,C=M),f};return n?CA(s):s}(s,l)),r.selector=A}return r},o=rA.select=function(A,e,n,l){var s,o,C,a,u,c="function"==typeof A&&A,m=!l&&i(A=c.selector||A);if(n=n||[],1===m.length){if((o=m[0]=m[0].slice(0)).length>2&&"ID"===(C=o[0]).type&&9===e.nodeType&&E&&t.relative[o[1].type]){if(!(e=(t.find.ID(C.matches[0].replace(eA,nA),e)||[])[0]))return n;c&&(e=e.parentNode),A=A.slice(o.shift().value.length)}for(s=R.needsContext.test(A)?0:o.length;s--&&(C=o[s],!t.relative[a=C.type]);)if((u=t.find[a])&&(l=u(C.matches[0].replace(eA,nA),AA.test(o[0].type)&&hA(e.parentNode)||e))){if(o.splice(s,1),!(A=l.length&&fA(o)))return K.apply(n,l),n;break}}return(c||r(A,m))(l,e,!E,n,!e||AA.test(A)&&hA(e.parentNode)||e),n},n.sortStable=g.split("").sort(G).join("")===g,n.detectDuplicates=!!u,c(),n.sortDetached=aA((function(A){return 1&A.compareDocumentPosition(m.createElement("fieldset"))})),aA((function(A){return A.innerHTML="<a href='#'></a>","#"===A.firstChild.getAttribute("href")}))||uA("type|href|height|width",(function(A,e,n){if(!n)return A.getAttribute(e,"type"===e.toLowerCase()?1:2)})),n.attributes&&aA((function(A){return A.innerHTML="<input/>",A.firstChild.setAttribute("value",""),""===A.firstChild.getAttribute("value")}))||uA("value",(function(A,e,n){if(!n&&"input"===A.nodeName.toLowerCase())return A.defaultValue})),aA((function(A){return null==A.getAttribute("disabled")}))||uA(D,(function(A,e,n){var t;if(!n)return!0===A[e]?e.toLowerCase():(t=A.getAttributeNode(e))&&t.specified?t.value:null})),rA}(t);B.find=S,B.expr=S.selectors,B.expr[":"]=B.expr.pseudos,B.uniqueSort=B.unique=S.uniqueSort,B.text=S.getText,B.isXMLDoc=S.isXML,B.contains=S.contains,B.escapeSelector=S.escape;var Q=function(A,e,n){for(var t=[],l=void 0!==n;(A=A[e])&&9!==A.nodeType;)if(1===A.nodeType){if(l&&B(A).is(n))break;t.push(A)}return t},G=function(A,e){for(var n=[];A;A=A.nextSibling)1===A.nodeType&&A!==e&&n.push(A);return n},x=B.expr.match.needsContext;function O(A,e){return A.nodeName&&A.nodeName.toLowerCase()===e.toLowerCase()}var w=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function W(A,e,n){return h(e)?B.grep(A,(function(A,t){return!!e.call(A,t,A)!==n})):e.nodeType?B.grep(A,(function(A){return A===e!==n})):"string"!=typeof e?B.grep(A,(function(A){return a.call(e,A)>-1!==n})):B.filter(e,A,n)}B.filter=function(A,e,n){var t=e[0];return n&&(A=":not("+A+")"),1===e.length&&1===t.nodeType?B.find.matchesSelector(t,A)?[t]:[]:B.find.matches(A,B.grep(e,(function(A){return 1===A.nodeType})))},B.fn.extend({find:function(A){var e,n,t=this.length,l=this;if("string"!=typeof A)return this.pushStack(B(A).filter((function(){for(e=0;e<t;e++)if(B.contains(l[e],this))return!0})));for(n=this.pushStack([]),e=0;e<t;e++)B.find(A,l[e],n);return t>1?B.uniqueSort(n):n},filter:function(A){return this.pushStack(W(this,A||[],!1))},not:function(A){return this.pushStack(W(this,A||[],!0))},is:function(A){return!!W(this,"string"==typeof A&&x.test(A)?B(A):A||[],!1).length}});var K,_=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(B.fn.init=function(A,e,n){var t,l;if(!A)return this;if(n=n||K,"string"==typeof A){if(!(t="<"===A[0]&&">"===A[A.length-1]&&A.length>=3?[null,A,null]:_.exec(A))||!t[1]&&e)return!e||e.jquery?(e||n).find(A):this.constructor(e).find(A);if(t[1]){if(e=e instanceof B?e[0]:e,B.merge(this,B.parseHTML(t[1],e&&e.nodeType?e.ownerDocument||e:f,!0)),w.test(t[1])&&B.isPlainObject(e))for(t in e)h(this[t])?this[t](e[t]):this.attr(t,e[t]);return this}return(l=f.getElementById(t[2]))&&(this[0]=l,this.length=1),this}return A.nodeType?(this[0]=A,this.length=1,this):h(A)?void 0!==n.ready?n.ready(A):A(B):B.makeArray(A,this)}).prototype=B.fn,K=B(f);var T=/^(?:parents|prev(?:Until|All))/,D={children:!0,contents:!0,next:!0,prev:!0};function V(A,e){for(;(A=A[e])&&1!==A.nodeType;);return A}B.fn.extend({has:function(A){var e=B(A,this),n=e.length;return this.filter((function(){for(var A=0;A<n;A++)if(B.contains(this,e[A]))return!0}))},closest:function(A,e){var n,t=0,l=this.length,s=[],i="string"!=typeof A&&B(A);if(!x.test(A))for(;t<l;t++)for(n=this[t];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(i?i.index(n)>-1:1===n.nodeType&&B.find.matchesSelector(n,A))){s.push(n);break}return this.pushStack(s.length>1?B.uniqueSort(s):s)},index:function(A){return A?"string"==typeof A?a.call(B(A),this[0]):a.call(this,A.jquery?A[0]:A):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(A,e){return this.pushStack(B.uniqueSort(B.merge(this.get(),B(A,e))))},addBack:function(A){return this.add(null==A?this.prevObject:this.prevObject.filter(A))}}),B.each({parent:function(A){var e=A.parentNode;return e&&11!==e.nodeType?e:null},parents:function(A){return Q(A,"parentNode")},parentsUntil:function(A,e,n){return Q(A,"parentNode",n)},next:function(A){return V(A,"nextSibling")},prev:function(A){return V(A,"previousSibling")},nextAll:function(A){return Q(A,"nextSibling")},prevAll:function(A){return Q(A,"previousSibling")},nextUntil:function(A,e,n){return Q(A,"nextSibling",n)},prevUntil:function(A,e,n){return Q(A,"previousSibling",n)},siblings:function(A){return G((A.parentNode||{}).firstChild,A)},children:function(A){return G(A.firstChild)},contents:function(A){return null!=A.contentDocument&&i(A.contentDocument)?A.contentDocument:(O(A,"template")&&(A=A.content||A),B.merge([],A.childNodes))}},(function(A,e){B.fn[A]=function(n,t){var l=B.map(this,e,n);return"Until"!==A.slice(-5)&&(t=n),t&&"string"==typeof t&&(l=B.filter(t,l)),this.length>1&&(D[A]||B.uniqueSort(l),T.test(A)&&l.reverse()),this.pushStack(l)}}));var H=/[^\x20\t\r\n\f]+/g;function k(A){return A}function F(A){throw A}function Y(A,e,n,t){var l;try{A&&h(l=A.promise)?l.call(A).done(e).fail(n):A&&h(l=A.then)?l.call(A,e,n):e.apply(void 0,[A].slice(t))}catch(A){n.apply(void 0,[A])}}B.Callbacks=function(A){A="string"==typeof A?function(A){var e={};return B.each(A.match(H)||[],(function(A,n){e[n]=!0})),e}(A):B.extend({},A);var e,n,t,l,s=[],i=[],r=-1,o=function(){for(l=l||A.once,t=e=!0;i.length;r=-1)for(n=i.shift();++r<s.length;)!1===s[r].apply(n[0],n[1])&&A.stopOnFalse&&(r=s.length,n=!1);A.memory||(n=!1),e=!1,l&&(s=n?[]:"")},C={add:function(){return s&&(n&&!e&&(r=s.length-1,i.push(n)),function e(n){B.each(n,(function(n,t){h(t)?A.unique&&C.has(t)||s.push(t):t&&t.length&&"string"!==v(t)&&e(t)}))}(arguments),n&&!e&&o()),this},remove:function(){return B.each(arguments,(function(A,e){for(var n;(n=B.inArray(e,s,n))>-1;)s.splice(n,1),n<=r&&r--})),this},has:function(A){return A?B.inArray(A,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return l=i=[],s=n="",this},disabled:function(){return!s},lock:function(){return l=i=[],n||e||(s=n=""),this},locked:function(){return!!l},fireWith:function(A,n){return l||(n=[A,(n=n||[]).slice?n.slice():n],i.push(n),e||o()),this},fire:function(){return C.fireWith(this,arguments),this},fired:function(){return!!t}};return C},B.extend({Deferred:function(A){var e=[["notify","progress",B.Callbacks("memory"),B.Callbacks("memory"),2],["resolve","done",B.Callbacks("once memory"),B.Callbacks("once memory"),0,"resolved"],["reject","fail",B.Callbacks("once memory"),B.Callbacks("once memory"),1,"rejected"]],n="pending",l={state:function(){return n},always:function(){return s.done(arguments).fail(arguments),this},catch:function(A){return l.then(null,A)},pipe:function(){var A=arguments;return B.Deferred((function(n){B.each(e,(function(e,t){var l=h(A[t[4]])&&A[t[4]];s[t[1]]((function(){var A=l&&l.apply(this,arguments);A&&h(A.promise)?A.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,l?[A]:arguments)}))})),A=null})).promise()},then:function(A,n,l){var s=0;function i(A,e,n,l){return function(){var r=this,o=arguments,C=function(){var t,C;if(!(A<s)){if((t=n.apply(r,o))===e.promise())throw new TypeError("Thenable self-resolution");C=t&&("object"==typeof t||"function"==typeof t)&&t.then,h(C)?l?C.call(t,i(s,e,k,l),i(s,e,F,l)):(s++,C.call(t,i(s,e,k,l),i(s,e,F,l),i(s,e,k,e.notifyWith))):(n!==k&&(r=void 0,o=[t]),(l||e.resolveWith)(r,o))}},a=l?C:function(){try{C()}catch(t){B.Deferred.exceptionHook&&B.Deferred.exceptionHook(t,a.stackTrace),A+1>=s&&(n!==F&&(r=void 0,o=[t]),e.rejectWith(r,o))}};A?a():(B.Deferred.getStackHook&&(a.stackTrace=B.Deferred.getStackHook()),t.setTimeout(a))}}return B.Deferred((function(t){e[0][3].add(i(0,t,h(l)?l:k,t.notifyWith)),e[1][3].add(i(0,t,h(A)?A:k)),e[2][3].add(i(0,t,h(n)?n:F))})).promise()},promise:function(A){return null!=A?B.extend(A,l):l}},s={};return B.each(e,(function(A,t){var i=t[2],r=t[5];l[t[1]]=i.add,r&&i.add((function(){n=r}),e[3-A][2].disable,e[3-A][3].disable,e[0][2].lock,e[0][3].lock),i.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=i.fireWith})),l.promise(s),A&&A.call(s,s),s},when:function(A){var e=arguments.length,n=e,t=Array(n),l=r.call(arguments),s=B.Deferred(),i=function(A){return function(n){t[A]=this,l[A]=arguments.length>1?r.call(arguments):n,--e||s.resolveWith(t,l)}};if(e<=1&&(Y(A,s.done(i(n)).resolve,s.reject,!e),"pending"===s.state()||h(l[n]&&l[n].then)))return s.then();for(;n--;)Y(l[n],i(n),s.reject);return s.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;B.Deferred.exceptionHook=function(A,e){t.console&&t.console.warn&&A&&q.test(A.name)&&t.console.warn("jQuery.Deferred exception: "+A.message,A.stack,e)},B.readyException=function(A){t.setTimeout((function(){throw A}))};var U=B.Deferred();function P(){f.removeEventListener("DOMContentLoaded",P),t.removeEventListener("load",P),B.ready()}B.fn.ready=function(A){return U.then(A).catch((function(A){B.readyException(A)})),this},B.extend({isReady:!1,readyWait:1,ready:function(A){(!0===A?--B.readyWait:B.isReady)||(B.isReady=!0,!0!==A&&--B.readyWait>0||U.resolveWith(f,[B]))}}),B.ready.then=U.then,"complete"===f.readyState||"loading"!==f.readyState&&!f.documentElement.doScroll?t.setTimeout(B.ready):(f.addEventListener("DOMContentLoaded",P),t.addEventListener("load",P));var N=function(A,e,n,t,l,s,i){var r=0,o=A.length,C=null==n;if("object"===v(n))for(r in l=!0,n)N(A,e,r,n[r],!0,s,i);else if(void 0!==t&&(l=!0,h(t)||(i=!0),C&&(i?(e.call(A,t),e=null):(C=e,e=function(A,e,n){return C.call(B(A),n)})),e))for(;r<o;r++)e(A[r],n,i?t:t.call(A[r],r,e(A[r],n)));return l?A:C?e.call(A):o?e(A[0],n):s},L=/^-ms-/,j=/-([a-z])/g;function R(A,e){return e.toUpperCase()}function z(A){return A.replace(L,"ms-").replace(j,R)}var $=function(A){return 1===A.nodeType||9===A.nodeType||!+A.nodeType};function X(){this.expando=B.expando+X.uid++}X.uid=1,X.prototype={cache:function(A){var e=A[this.expando];return e||(e={},$(A)&&(A.nodeType?A[this.expando]=e:Object.defineProperty(A,this.expando,{value:e,configurable:!0}))),e},set:function(A,e,n){var t,l=this.cache(A);if("string"==typeof e)l[z(e)]=n;else for(t in e)l[z(t)]=e[t];return l},get:function(A,e){return void 0===e?this.cache(A):A[this.expando]&&A[this.expando][z(e)]},access:function(A,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(A,e):(this.set(A,e,n),void 0!==n?n:e)},remove:function(A,e){var n,t=A[this.expando];if(void 0!==t){if(void 0!==e){n=(e=Array.isArray(e)?e.map(z):(e=z(e))in t?[e]:e.match(H)||[]).length;for(;n--;)delete t[e[n]]}(void 0===e||B.isEmptyObject(t))&&(A.nodeType?A[this.expando]=void 0:delete A[this.expando])}},hasData:function(A){var e=A[this.expando];return void 0!==e&&!B.isEmptyObject(e)}};var J=new X,Z=new X,AA=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,eA=/[A-Z]/g;function nA(A,e,n){var t;if(void 0===n&&1===A.nodeType)if(t="data-"+e.replace(eA,"-$&").toLowerCase(),"string"==typeof(n=A.getAttribute(t))){try{n=function(A){return"true"===A||"false"!==A&&("null"===A?null:A===+A+""?+A:AA.test(A)?JSON.parse(A):A)}(n)}catch(A){}Z.set(A,e,n)}else n=void 0;return n}B.extend({hasData:function(A){return Z.hasData(A)||J.hasData(A)},data:function(A,e,n){return Z.access(A,e,n)},removeData:function(A,e){Z.remove(A,e)},_data:function(A,e,n){return J.access(A,e,n)},_removeData:function(A,e){J.remove(A,e)}}),B.fn.extend({data:function(A,e){var n,t,l,s=this[0],i=s&&s.attributes;if(void 0===A){if(this.length&&(l=Z.get(s),1===s.nodeType&&!J.get(s,"hasDataAttrs"))){for(n=i.length;n--;)i[n]&&0===(t=i[n].name).indexOf("data-")&&(t=z(t.slice(5)),nA(s,t,l[t]));J.set(s,"hasDataAttrs",!0)}return l}return"object"==typeof A?this.each((function(){Z.set(this,A)})):N(this,(function(e){var n;if(s&&void 0===e)return void 0!==(n=Z.get(s,A))||void 0!==(n=nA(s,A))?n:void 0;this.each((function(){Z.set(this,A,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(A){return this.each((function(){Z.remove(this,A)}))}}),B.extend({queue:function(A,e,n){var t;if(A)return e=(e||"fx")+"queue",t=J.get(A,e),n&&(!t||Array.isArray(n)?t=J.access(A,e,B.makeArray(n)):t.push(n)),t||[]},dequeue:function(A,e){e=e||"fx";var n=B.queue(A,e),t=n.length,l=n.shift(),s=B._queueHooks(A,e);"inprogress"===l&&(l=n.shift(),t--),l&&("fx"===e&&n.unshift("inprogress"),delete s.stop,l.call(A,(function(){B.dequeue(A,e)}),s)),!t&&s&&s.empty.fire()},_queueHooks:function(A,e){var n=e+"queueHooks";return J.get(A,n)||J.access(A,n,{empty:B.Callbacks("once memory").add((function(){J.remove(A,[e+"queue",n])}))})}}),B.fn.extend({queue:function(A,e){var n=2;return"string"!=typeof A&&(e=A,A="fx",n--),arguments.length<n?B.queue(this[0],A):void 0===e?this:this.each((function(){var n=B.queue(this,A,e);B._queueHooks(this,A),"fx"===A&&"inprogress"!==n[0]&&B.dequeue(this,A)}))},dequeue:function(A){return this.each((function(){B.dequeue(this,A)}))},clearQueue:function(A){return this.queue(A||"fx",[])},promise:function(A,e){var n,t=1,l=B.Deferred(),s=this,i=this.length,r=function(){--t||l.resolveWith(s,[s])};for("string"!=typeof A&&(e=A,A=void 0),A=A||"fx";i--;)(n=J.get(s[i],A+"queueHooks"))&&n.empty&&(t++,n.empty.add(r));return r(),l.promise(e)}});var tA=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,lA=new RegExp("^(?:([+-])=|)("+tA+")([a-z%]*)$","i"),sA=["Top","Right","Bottom","Left"],iA=f.documentElement,rA=function(A){return B.contains(A.ownerDocument,A)},oA={composed:!0};iA.getRootNode&&(rA=function(A){return B.contains(A.ownerDocument,A)||A.getRootNode(oA)===A.ownerDocument});var CA=function(A,e){return"none"===(A=e||A).style.display||""===A.style.display&&rA(A)&&"none"===B.css(A,"display")};function aA(A,e,n,t){var l,s,i=20,r=t?function(){return t.cur()}:function(){return B.css(A,e,"")},o=r(),C=n&&n[3]||(B.cssNumber[e]?"":"px"),a=A.nodeType&&(B.cssNumber[e]||"px"!==C&&+o)&&lA.exec(B.css(A,e));if(a&&a[3]!==C){for(o/=2,C=C||a[3],a=+o||1;i--;)B.style(A,e,a+C),(1-s)*(1-(s=r()/o||.5))<=0&&(i=0),a/=s;a*=2,B.style(A,e,a+C),n=n||[]}return n&&(a=+a||+o||0,l=n[1]?a+(n[1]+1)*n[2]:+n[2],t&&(t.unit=C,t.start=a,t.end=l)),l}var uA={};function cA(A){var e,n=A.ownerDocument,t=A.nodeName,l=uA[t];return l||(e=n.body.appendChild(n.createElement(t)),l=B.css(e,"display"),e.parentNode.removeChild(e),"none"===l&&(l="block"),uA[t]=l,l)}function mA(A,e){for(var n,t,l=[],s=0,i=A.length;s<i;s++)(t=A[s]).style&&(n=t.style.display,e?("none"===n&&(l[s]=J.get(t,"display")||null,l[s]||(t.style.display="")),""===t.style.display&&CA(t)&&(l[s]=cA(t))):"none"!==n&&(l[s]="none",J.set(t,"display",n)));for(s=0;s<i;s++)null!=l[s]&&(A[s].style.display=l[s]);return A}B.fn.extend({show:function(){return mA(this,!0)},hide:function(){return mA(this)},toggle:function(A){return"boolean"==typeof A?A?this.show():this.hide():this.each((function(){CA(this)?B(this).show():B(this).hide()}))}});var dA,EA,pA=/^(?:checkbox|radio)$/i,hA=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,IA=/^$|^module$|\/(?:java|ecma)script/i;dA=f.createDocumentFragment().appendChild(f.createElement("div")),(EA=f.createElement("input")).setAttribute("type","radio"),EA.setAttribute("checked","checked"),EA.setAttribute("name","t"),dA.appendChild(EA),p.checkClone=dA.cloneNode(!0).cloneNode(!0).lastChild.checked,dA.innerHTML="<textarea>x</textarea>",p.noCloneChecked=!!dA.cloneNode(!0).lastChild.defaultValue,dA.innerHTML="<option></option>",p.option=!!dA.lastChild;var fA={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function gA(A,e){var n;return n=void 0!==A.getElementsByTagName?A.getElementsByTagName(e||"*"):void 0!==A.querySelectorAll?A.querySelectorAll(e||"*"):[],void 0===e||e&&O(A,e)?B.merge([A],n):n}function MA(A,e){for(var n=0,t=A.length;n<t;n++)J.set(A[n],"globalEval",!e||J.get(e[n],"globalEval"))}fA.tbody=fA.tfoot=fA.colgroup=fA.caption=fA.thead,fA.th=fA.td,p.option||(fA.optgroup=fA.option=[1,"<select multiple='multiple'>","</select>"]);var vA=/<|&#?\w+;/;function yA(A,e,n,t,l){for(var s,i,r,o,C,a,u=e.createDocumentFragment(),c=[],m=0,d=A.length;m<d;m++)if((s=A[m])||0===s)if("object"===v(s))B.merge(c,s.nodeType?[s]:s);else if(vA.test(s)){for(i=i||u.appendChild(e.createElement("div")),r=(hA.exec(s)||["",""])[1].toLowerCase(),o=fA[r]||fA._default,i.innerHTML=o[1]+B.htmlPrefilter(s)+o[2],a=o[0];a--;)i=i.lastChild;B.merge(c,i.childNodes),(i=u.firstChild).textContent=""}else c.push(e.createTextNode(s));for(u.textContent="",m=0;s=c[m++];)if(t&&B.inArray(s,t)>-1)l&&l.push(s);else if(C=rA(s),i=gA(u.appendChild(s),"script"),C&&MA(i),n)for(a=0;s=i[a++];)IA.test(s.type||"")&&n.push(s);return u}var BA=/^([^.]*)(?:\.(.+)|)/;function bA(){return!0}function SA(){return!1}function QA(A,e){return A===function(){try{return f.activeElement}catch(A){}}()==("focus"===e)}function GA(A,e,n,t,l,s){var i,r;if("object"==typeof e){for(r in"string"!=typeof n&&(t=t||n,n=void 0),e)GA(A,r,n,t,e[r],s);return A}if(null==t&&null==l?(l=n,t=n=void 0):null==l&&("string"==typeof n?(l=t,t=void 0):(l=t,t=n,n=void 0)),!1===l)l=SA;else if(!l)return A;return 1===s&&(i=l,l=function(A){return B().off(A),i.apply(this,arguments)},l.guid=i.guid||(i.guid=B.guid++)),A.each((function(){B.event.add(this,e,l,t,n)}))}function xA(A,e,n){n?(J.set(A,e,!1),B.event.add(A,e,{namespace:!1,handler:function(A){var t,l,s=J.get(this,e);if(1&A.isTrigger&&this[e]){if(s.length)(B.event.special[e]||{}).delegateType&&A.stopPropagation();else if(s=r.call(arguments),J.set(this,e,s),t=n(this,e),this[e](),s!==(l=J.get(this,e))||t?J.set(this,e,!1):l={},s!==l)return A.stopImmediatePropagation(),A.preventDefault(),l&&l.value}else s.length&&(J.set(this,e,{value:B.event.trigger(B.extend(s[0],B.Event.prototype),s.slice(1),this)}),A.stopImmediatePropagation())}})):void 0===J.get(A,e)&&B.event.add(A,e,bA)}B.event={global:{},add:function(A,e,n,t,l){var s,i,r,o,C,a,u,c,m,d,E,p=J.get(A);if($(A))for(n.handler&&(n=(s=n).handler,l=s.selector),l&&B.find.matchesSelector(iA,l),n.guid||(n.guid=B.guid++),(o=p.events)||(o=p.events=Object.create(null)),(i=p.handle)||(i=p.handle=function(e){return void 0!==B&&B.event.triggered!==e.type?B.event.dispatch.apply(A,arguments):void 0}),C=(e=(e||"").match(H)||[""]).length;C--;)m=E=(r=BA.exec(e[C])||[])[1],d=(r[2]||"").split(".").sort(),m&&(u=B.event.special[m]||{},m=(l?u.delegateType:u.bindType)||m,u=B.event.special[m]||{},a=B.extend({type:m,origType:E,data:t,handler:n,guid:n.guid,selector:l,needsContext:l&&B.expr.match.needsContext.test(l),namespace:d.join(".")},s),(c=o[m])||((c=o[m]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(A,t,d,i)||A.addEventListener&&A.addEventListener(m,i)),u.add&&(u.add.call(A,a),a.handler.guid||(a.handler.guid=n.guid)),l?c.splice(c.delegateCount++,0,a):c.push(a),B.event.global[m]=!0)},remove:function(A,e,n,t,l){var s,i,r,o,C,a,u,c,m,d,E,p=J.hasData(A)&&J.get(A);if(p&&(o=p.events)){for(C=(e=(e||"").match(H)||[""]).length;C--;)if(m=E=(r=BA.exec(e[C])||[])[1],d=(r[2]||"").split(".").sort(),m){for(u=B.event.special[m]||{},c=o[m=(t?u.delegateType:u.bindType)||m]||[],r=r[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=s=c.length;s--;)a=c[s],!l&&E!==a.origType||n&&n.guid!==a.guid||r&&!r.test(a.namespace)||t&&t!==a.selector&&("**"!==t||!a.selector)||(c.splice(s,1),a.selector&&c.delegateCount--,u.remove&&u.remove.call(A,a));i&&!c.length&&(u.teardown&&!1!==u.teardown.call(A,d,p.handle)||B.removeEvent(A,m,p.handle),delete o[m])}else for(m in o)B.event.remove(A,m+e[C],n,t,!0);B.isEmptyObject(o)&&J.remove(A,"handle events")}},dispatch:function(A){var e,n,t,l,s,i,r=new Array(arguments.length),o=B.event.fix(A),C=(J.get(this,"events")||Object.create(null))[o.type]||[],a=B.event.special[o.type]||{};for(r[0]=o,e=1;e<arguments.length;e++)r[e]=arguments[e];if(o.delegateTarget=this,!a.preDispatch||!1!==a.preDispatch.call(this,o)){for(i=B.event.handlers.call(this,o,C),e=0;(l=i[e++])&&!o.isPropagationStopped();)for(o.currentTarget=l.elem,n=0;(s=l.handlers[n++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==s.namespace&&!o.rnamespace.test(s.namespace)||(o.handleObj=s,o.data=s.data,void 0!==(t=((B.event.special[s.origType]||{}).handle||s.handler).apply(l.elem,r))&&!1===(o.result=t)&&(o.preventDefault(),o.stopPropagation()));return a.postDispatch&&a.postDispatch.call(this,o),o.result}},handlers:function(A,e){var n,t,l,s,i,r=[],o=e.delegateCount,C=A.target;if(o&&C.nodeType&&!("click"===A.type&&A.button>=1))for(;C!==this;C=C.parentNode||this)if(1===C.nodeType&&("click"!==A.type||!0!==C.disabled)){for(s=[],i={},n=0;n<o;n++)void 0===i[l=(t=e[n]).selector+" "]&&(i[l]=t.needsContext?B(l,this).index(C)>-1:B.find(l,this,null,[C]).length),i[l]&&s.push(t);s.length&&r.push({elem:C,handlers:s})}return C=this,o<e.length&&r.push({elem:C,handlers:e.slice(o)}),r},addProp:function(A,e){Object.defineProperty(B.Event.prototype,A,{enumerable:!0,configurable:!0,get:h(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[A]},set:function(e){Object.defineProperty(this,A,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(A){return A[B.expando]?A:new B.Event(A)},special:{load:{noBubble:!0},click:{setup:function(A){var e=this||A;return pA.test(e.type)&&e.click&&O(e,"input")&&xA(e,"click",bA),!1},trigger:function(A){var e=this||A;return pA.test(e.type)&&e.click&&O(e,"input")&&xA(e,"click"),!0},_default:function(A){var e=A.target;return pA.test(e.type)&&e.click&&O(e,"input")&&J.get(e,"click")||O(e,"a")}},beforeunload:{postDispatch:function(A){void 0!==A.result&&A.originalEvent&&(A.originalEvent.returnValue=A.result)}}}},B.removeEvent=function(A,e,n){A.removeEventListener&&A.removeEventListener(e,n)},B.Event=function(A,e){if(!(this instanceof B.Event))return new B.Event(A,e);A&&A.type?(this.originalEvent=A,this.type=A.type,this.isDefaultPrevented=A.defaultPrevented||void 0===A.defaultPrevented&&!1===A.returnValue?bA:SA,this.target=A.target&&3===A.target.nodeType?A.target.parentNode:A.target,this.currentTarget=A.currentTarget,this.relatedTarget=A.relatedTarget):this.type=A,e&&B.extend(this,e),this.timeStamp=A&&A.timeStamp||Date.now(),this[B.expando]=!0},B.Event.prototype={constructor:B.Event,isDefaultPrevented:SA,isPropagationStopped:SA,isImmediatePropagationStopped:SA,isSimulated:!1,preventDefault:function(){var A=this.originalEvent;this.isDefaultPrevented=bA,A&&!this.isSimulated&&A.preventDefault()},stopPropagation:function(){var A=this.originalEvent;this.isPropagationStopped=bA,A&&!this.isSimulated&&A.stopPropagation()},stopImmediatePropagation:function(){var A=this.originalEvent;this.isImmediatePropagationStopped=bA,A&&!this.isSimulated&&A.stopImmediatePropagation(),this.stopPropagation()}},B.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},B.event.addProp),B.each({focus:"focusin",blur:"focusout"},(function(A,e){B.event.special[A]={setup:function(){return xA(this,A,QA),!1},trigger:function(){return xA(this,A),!0},_default:function(){return!0},delegateType:e}})),B.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(A,e){B.event.special[A]={delegateType:e,bindType:e,handle:function(A){var n,t=this,l=A.relatedTarget,s=A.handleObj;return l&&(l===t||B.contains(t,l))||(A.type=s.origType,n=s.handler.apply(this,arguments),A.type=e),n}}})),B.fn.extend({on:function(A,e,n,t){return GA(this,A,e,n,t)},one:function(A,e,n,t){return GA(this,A,e,n,t,1)},off:function(A,e,n){var t,l;if(A&&A.preventDefault&&A.handleObj)return t=A.handleObj,B(A.delegateTarget).off(t.namespace?t.origType+"."+t.namespace:t.origType,t.selector,t.handler),this;if("object"==typeof A){for(l in A)this.off(l,e,A[l]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=SA),this.each((function(){B.event.remove(this,A,n,e)}))}});var OA=/<script|<style|<link/i,wA=/checked\s*(?:[^=]|=\s*.checked.)/i,WA=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function KA(A,e){return O(A,"table")&&O(11!==e.nodeType?e:e.firstChild,"tr")&&B(A).children("tbody")[0]||A}function _A(A){return A.type=(null!==A.getAttribute("type"))+"/"+A.type,A}function TA(A){return"true/"===(A.type||"").slice(0,5)?A.type=A.type.slice(5):A.removeAttribute("type"),A}function DA(A,e){var n,t,l,s,i,r;if(1===e.nodeType){if(J.hasData(A)&&(r=J.get(A).events))for(l in J.remove(e,"handle events"),r)for(n=0,t=r[l].length;n<t;n++)B.event.add(e,l,r[l][n]);Z.hasData(A)&&(s=Z.access(A),i=B.extend({},s),Z.set(e,i))}}function VA(A,e){var n=e.nodeName.toLowerCase();"input"===n&&pA.test(A.type)?e.checked=A.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=A.defaultValue)}function HA(A,e,n,t){e=o(e);var l,s,i,r,C,a,u=0,c=A.length,m=c-1,d=e[0],E=h(d);if(E||c>1&&"string"==typeof d&&!p.checkClone&&wA.test(d))return A.each((function(l){var s=A.eq(l);E&&(e[0]=d.call(this,l,s.html())),HA(s,e,n,t)}));if(c&&(s=(l=yA(e,A[0].ownerDocument,!1,A,t)).firstChild,1===l.childNodes.length&&(l=s),s||t)){for(r=(i=B.map(gA(l,"script"),_A)).length;u<c;u++)C=l,u!==m&&(C=B.clone(C,!0,!0),r&&B.merge(i,gA(C,"script"))),n.call(A[u],C,u);if(r)for(a=i[i.length-1].ownerDocument,B.map(i,TA),u=0;u<r;u++)C=i[u],IA.test(C.type||"")&&!J.access(C,"globalEval")&&B.contains(a,C)&&(C.src&&"module"!==(C.type||"").toLowerCase()?B._evalUrl&&!C.noModule&&B._evalUrl(C.src,{nonce:C.nonce||C.getAttribute("nonce")},a):M(C.textContent.replace(WA,""),C,a))}return A}function kA(A,e,n){for(var t,l=e?B.filter(e,A):A,s=0;null!=(t=l[s]);s++)n||1!==t.nodeType||B.cleanData(gA(t)),t.parentNode&&(n&&rA(t)&&MA(gA(t,"script")),t.parentNode.removeChild(t));return A}B.extend({htmlPrefilter:function(A){return A},clone:function(A,e,n){var t,l,s,i,r=A.cloneNode(!0),o=rA(A);if(!(p.noCloneChecked||1!==A.nodeType&&11!==A.nodeType||B.isXMLDoc(A)))for(i=gA(r),t=0,l=(s=gA(A)).length;t<l;t++)VA(s[t],i[t]);if(e)if(n)for(s=s||gA(A),i=i||gA(r),t=0,l=s.length;t<l;t++)DA(s[t],i[t]);else DA(A,r);return(i=gA(r,"script")).length>0&&MA(i,!o&&gA(A,"script")),r},cleanData:function(A){for(var e,n,t,l=B.event.special,s=0;void 0!==(n=A[s]);s++)if($(n)){if(e=n[J.expando]){if(e.events)for(t in e.events)l[t]?B.event.remove(n,t):B.removeEvent(n,t,e.handle);n[J.expando]=void 0}n[Z.expando]&&(n[Z.expando]=void 0)}}}),B.fn.extend({detach:function(A){return kA(this,A,!0)},remove:function(A){return kA(this,A)},text:function(A){return N(this,(function(A){return void 0===A?B.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=A)}))}),null,A,arguments.length)},append:function(){return HA(this,arguments,(function(A){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||KA(this,A).appendChild(A)}))},prepend:function(){return HA(this,arguments,(function(A){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=KA(this,A);e.insertBefore(A,e.firstChild)}}))},before:function(){return HA(this,arguments,(function(A){this.parentNode&&this.parentNode.insertBefore(A,this)}))},after:function(){return HA(this,arguments,(function(A){this.parentNode&&this.parentNode.insertBefore(A,this.nextSibling)}))},empty:function(){for(var A,e=0;null!=(A=this[e]);e++)1===A.nodeType&&(B.cleanData(gA(A,!1)),A.textContent="");return this},clone:function(A,e){return A=null!=A&&A,e=null==e?A:e,this.map((function(){return B.clone(this,A,e)}))},html:function(A){return N(this,(function(A){var e=this[0]||{},n=0,t=this.length;if(void 0===A&&1===e.nodeType)return e.innerHTML;if("string"==typeof A&&!OA.test(A)&&!fA[(hA.exec(A)||["",""])[1].toLowerCase()]){A=B.htmlPrefilter(A);try{for(;n<t;n++)1===(e=this[n]||{}).nodeType&&(B.cleanData(gA(e,!1)),e.innerHTML=A);e=0}catch(A){}}e&&this.empty().append(A)}),null,A,arguments.length)},replaceWith:function(){var A=[];return HA(this,arguments,(function(e){var n=this.parentNode;B.inArray(this,A)<0&&(B.cleanData(gA(this)),n&&n.replaceChild(e,this))}),A)}}),B.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(A,e){B.fn[A]=function(A){for(var n,t=[],l=B(A),s=l.length-1,i=0;i<=s;i++)n=i===s?this:this.clone(!0),B(l[i])[e](n),C.apply(t,n.get());return this.pushStack(t)}}));var FA=new RegExp("^("+tA+")(?!px)[a-z%]+$","i"),YA=function(A){var e=A.ownerDocument.defaultView;return e&&e.opener||(e=t),e.getComputedStyle(A)},qA=function(A,e,n){var t,l,s={};for(l in e)s[l]=A.style[l],A.style[l]=e[l];for(l in t=n.call(A),e)A.style[l]=s[l];return t},UA=new RegExp(sA.join("|"),"i");function PA(A,e,n){var t,l,s,i,r=A.style;return(n=n||YA(A))&&(""!==(i=n.getPropertyValue(e)||n[e])||rA(A)||(i=B.style(A,e)),!p.pixelBoxStyles()&&FA.test(i)&&UA.test(e)&&(t=r.width,l=r.minWidth,s=r.maxWidth,r.minWidth=r.maxWidth=r.width=i,i=n.width,r.width=t,r.minWidth=l,r.maxWidth=s)),void 0!==i?i+"":i}function NA(A,e){return{get:function(){if(!A())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function A(){if(a){C.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",a.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",iA.appendChild(C).appendChild(a);var A=t.getComputedStyle(a);n="1%"!==A.top,o=12===e(A.marginLeft),a.style.right="60%",i=36===e(A.right),l=36===e(A.width),a.style.position="absolute",s=12===e(a.offsetWidth/3),iA.removeChild(C),a=null}}function e(A){return Math.round(parseFloat(A))}var n,l,s,i,r,o,C=f.createElement("div"),a=f.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",p.clearCloneStyle="content-box"===a.style.backgroundClip,B.extend(p,{boxSizingReliable:function(){return A(),l},pixelBoxStyles:function(){return A(),i},pixelPosition:function(){return A(),n},reliableMarginLeft:function(){return A(),o},scrollboxSize:function(){return A(),s},reliableTrDimensions:function(){var A,e,n,l;return null==r&&(A=f.createElement("table"),e=f.createElement("tr"),n=f.createElement("div"),A.style.cssText="position:absolute;left:-11111px;border-collapse:separate",e.style.cssText="border:1px solid",e.style.height="1px",n.style.height="9px",n.style.display="block",iA.appendChild(A).appendChild(e).appendChild(n),l=t.getComputedStyle(e),r=parseInt(l.height,10)+parseInt(l.borderTopWidth,10)+parseInt(l.borderBottomWidth,10)===e.offsetHeight,iA.removeChild(A)),r}}))}();var LA=["Webkit","Moz","ms"],jA=f.createElement("div").style,RA={};function zA(A){var e=B.cssProps[A]||RA[A];return e||(A in jA?A:RA[A]=function(A){for(var e=A[0].toUpperCase()+A.slice(1),n=LA.length;n--;)if((A=LA[n]+e)in jA)return A}(A)||A)}var $A=/^(none|table(?!-c[ea]).+)/,XA=/^--/,JA={position:"absolute",visibility:"hidden",display:"block"},ZA={letterSpacing:"0",fontWeight:"400"};function Ae(A,e,n){var t=lA.exec(e);return t?Math.max(0,t[2]-(n||0))+(t[3]||"px"):e}function ee(A,e,n,t,l,s){var i="width"===e?1:0,r=0,o=0;if(n===(t?"border":"content"))return 0;for(;i<4;i+=2)"margin"===n&&(o+=B.css(A,n+sA[i],!0,l)),t?("content"===n&&(o-=B.css(A,"padding"+sA[i],!0,l)),"margin"!==n&&(o-=B.css(A,"border"+sA[i]+"Width",!0,l))):(o+=B.css(A,"padding"+sA[i],!0,l),"padding"!==n?o+=B.css(A,"border"+sA[i]+"Width",!0,l):r+=B.css(A,"border"+sA[i]+"Width",!0,l));return!t&&s>=0&&(o+=Math.max(0,Math.ceil(A["offset"+e[0].toUpperCase()+e.slice(1)]-s-o-r-.5))||0),o}function ne(A,e,n){var t=YA(A),l=(!p.boxSizingReliable()||n)&&"border-box"===B.css(A,"boxSizing",!1,t),s=l,i=PA(A,e,t),r="offset"+e[0].toUpperCase()+e.slice(1);if(FA.test(i)){if(!n)return i;i="auto"}return(!p.boxSizingReliable()&&l||!p.reliableTrDimensions()&&O(A,"tr")||"auto"===i||!parseFloat(i)&&"inline"===B.css(A,"display",!1,t))&&A.getClientRects().length&&(l="border-box"===B.css(A,"boxSizing",!1,t),(s=r in A)&&(i=A[r])),(i=parseFloat(i)||0)+ee(A,e,n||(l?"border":"content"),s,t,i)+"px"}function te(A,e,n,t,l){return new te.prototype.init(A,e,n,t,l)}B.extend({cssHooks:{opacity:{get:function(A,e){if(e){var n=PA(A,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(A,e,n,t){if(A&&3!==A.nodeType&&8!==A.nodeType&&A.style){var l,s,i,r=z(e),o=XA.test(e),C=A.style;if(o||(e=zA(r)),i=B.cssHooks[e]||B.cssHooks[r],void 0===n)return i&&"get"in i&&void 0!==(l=i.get(A,!1,t))?l:C[e];"string"===(s=typeof n)&&(l=lA.exec(n))&&l[1]&&(n=aA(A,e,l),s="number"),null!=n&&n==n&&("number"!==s||o||(n+=l&&l[3]||(B.cssNumber[r]?"":"px")),p.clearCloneStyle||""!==n||0!==e.indexOf("background")||(C[e]="inherit"),i&&"set"in i&&void 0===(n=i.set(A,n,t))||(o?C.setProperty(e,n):C[e]=n))}},css:function(A,e,n,t){var l,s,i,r=z(e);return XA.test(e)||(e=zA(r)),(i=B.cssHooks[e]||B.cssHooks[r])&&"get"in i&&(l=i.get(A,!0,n)),void 0===l&&(l=PA(A,e,t)),"normal"===l&&e in ZA&&(l=ZA[e]),""===n||n?(s=parseFloat(l),!0===n||isFinite(s)?s||0:l):l}}),B.each(["height","width"],(function(A,e){B.cssHooks[e]={get:function(A,n,t){if(n)return!$A.test(B.css(A,"display"))||A.getClientRects().length&&A.getBoundingClientRect().width?ne(A,e,t):qA(A,JA,(function(){return ne(A,e,t)}))},set:function(A,n,t){var l,s=YA(A),i=!p.scrollboxSize()&&"absolute"===s.position,r=(i||t)&&"border-box"===B.css(A,"boxSizing",!1,s),o=t?ee(A,e,t,r,s):0;return r&&i&&(o-=Math.ceil(A["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(s[e])-ee(A,e,"border",!1,s)-.5)),o&&(l=lA.exec(n))&&"px"!==(l[3]||"px")&&(A.style[e]=n,n=B.css(A,e)),Ae(0,n,o)}}})),B.cssHooks.marginLeft=NA(p.reliableMarginLeft,(function(A,e){if(e)return(parseFloat(PA(A,"marginLeft"))||A.getBoundingClientRect().left-qA(A,{marginLeft:0},(function(){return A.getBoundingClientRect().left})))+"px"})),B.each({margin:"",padding:"",border:"Width"},(function(A,e){B.cssHooks[A+e]={expand:function(n){for(var t=0,l={},s="string"==typeof n?n.split(" "):[n];t<4;t++)l[A+sA[t]+e]=s[t]||s[t-2]||s[0];return l}},"margin"!==A&&(B.cssHooks[A+e].set=Ae)})),B.fn.extend({css:function(A,e){return N(this,(function(A,e,n){var t,l,s={},i=0;if(Array.isArray(e)){for(t=YA(A),l=e.length;i<l;i++)s[e[i]]=B.css(A,e[i],!1,t);return s}return void 0!==n?B.style(A,e,n):B.css(A,e)}),A,e,arguments.length>1)}}),B.Tween=te,te.prototype={constructor:te,init:function(A,e,n,t,l,s){this.elem=A,this.prop=n,this.easing=l||B.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=t,this.unit=s||(B.cssNumber[n]?"":"px")},cur:function(){var A=te.propHooks[this.prop];return A&&A.get?A.get(this):te.propHooks._default.get(this)},run:function(A){var e,n=te.propHooks[this.prop];return this.options.duration?this.pos=e=B.easing[this.easing](A,this.options.duration*A,0,1,this.options.duration):this.pos=e=A,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):te.propHooks._default.set(this),this}},te.prototype.init.prototype=te.prototype,te.propHooks={_default:{get:function(A){var e;return 1!==A.elem.nodeType||null!=A.elem[A.prop]&&null==A.elem.style[A.prop]?A.elem[A.prop]:(e=B.css(A.elem,A.prop,""))&&"auto"!==e?e:0},set:function(A){B.fx.step[A.prop]?B.fx.step[A.prop](A):1!==A.elem.nodeType||!B.cssHooks[A.prop]&&null==A.elem.style[zA(A.prop)]?A.elem[A.prop]=A.now:B.style(A.elem,A.prop,A.now+A.unit)}}},te.propHooks.scrollTop=te.propHooks.scrollLeft={set:function(A){A.elem.nodeType&&A.elem.parentNode&&(A.elem[A.prop]=A.now)}},B.easing={linear:function(A){return A},swing:function(A){return.5-Math.cos(A*Math.PI)/2},_default:"swing"},B.fx=te.prototype.init,B.fx.step={};var le,se,ie=/^(?:toggle|show|hide)$/,re=/queueHooks$/;function oe(){se&&(!1===f.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(oe):t.setTimeout(oe,B.fx.interval),B.fx.tick())}function Ce(){return t.setTimeout((function(){le=void 0})),le=Date.now()}function ae(A,e){var n,t=0,l={height:A};for(e=e?1:0;t<4;t+=2-e)l["margin"+(n=sA[t])]=l["padding"+n]=A;return e&&(l.opacity=l.width=A),l}function ue(A,e,n){for(var t,l=(ce.tweeners[e]||[]).concat(ce.tweeners["*"]),s=0,i=l.length;s<i;s++)if(t=l[s].call(n,e,A))return t}function ce(A,e,n){var t,l,s=0,i=ce.prefilters.length,r=B.Deferred().always((function(){delete o.elem})),o=function(){if(l)return!1;for(var e=le||Ce(),n=Math.max(0,C.startTime+C.duration-e),t=1-(n/C.duration||0),s=0,i=C.tweens.length;s<i;s++)C.tweens[s].run(t);return r.notifyWith(A,[C,t,n]),t<1&&i?n:(i||r.notifyWith(A,[C,1,0]),r.resolveWith(A,[C]),!1)},C=r.promise({elem:A,props:B.extend({},e),opts:B.extend(!0,{specialEasing:{},easing:B.easing._default},n),originalProperties:e,originalOptions:n,startTime:le||Ce(),duration:n.duration,tweens:[],createTween:function(e,n){var t=B.Tween(A,C.opts,e,n,C.opts.specialEasing[e]||C.opts.easing);return C.tweens.push(t),t},stop:function(e){var n=0,t=e?C.tweens.length:0;if(l)return this;for(l=!0;n<t;n++)C.tweens[n].run(1);return e?(r.notifyWith(A,[C,1,0]),r.resolveWith(A,[C,e])):r.rejectWith(A,[C,e]),this}}),a=C.props;for(!function(A,e){var n,t,l,s,i;for(n in A)if(l=e[t=z(n)],s=A[n],Array.isArray(s)&&(l=s[1],s=A[n]=s[0]),n!==t&&(A[t]=s,delete A[n]),(i=B.cssHooks[t])&&"expand"in i)for(n in s=i.expand(s),delete A[t],s)n in A||(A[n]=s[n],e[n]=l);else e[t]=l}(a,C.opts.specialEasing);s<i;s++)if(t=ce.prefilters[s].call(C,A,a,C.opts))return h(t.stop)&&(B._queueHooks(C.elem,C.opts.queue).stop=t.stop.bind(t)),t;return B.map(a,ue,C),h(C.opts.start)&&C.opts.start.call(A,C),C.progress(C.opts.progress).done(C.opts.done,C.opts.complete).fail(C.opts.fail).always(C.opts.always),B.fx.timer(B.extend(o,{elem:A,anim:C,queue:C.opts.queue})),C}B.Animation=B.extend(ce,{tweeners:{"*":[function(A,e){var n=this.createTween(A,e);return aA(n.elem,A,lA.exec(e),n),n}]},tweener:function(A,e){h(A)?(e=A,A=["*"]):A=A.match(H);for(var n,t=0,l=A.length;t<l;t++)n=A[t],ce.tweeners[n]=ce.tweeners[n]||[],ce.tweeners[n].unshift(e)},prefilters:[function(A,e,n){var t,l,s,i,r,o,C,a,u="width"in e||"height"in e,c=this,m={},d=A.style,E=A.nodeType&&CA(A),p=J.get(A,"fxshow");for(t in n.queue||(null==(i=B._queueHooks(A,"fx")).unqueued&&(i.unqueued=0,r=i.empty.fire,i.empty.fire=function(){i.unqueued||r()}),i.unqueued++,c.always((function(){c.always((function(){i.unqueued--,B.queue(A,"fx").length||i.empty.fire()}))}))),e)if(l=e[t],ie.test(l)){if(delete e[t],s=s||"toggle"===l,l===(E?"hide":"show")){if("show"!==l||!p||void 0===p[t])continue;E=!0}m[t]=p&&p[t]||B.style(A,t)}if((o=!B.isEmptyObject(e))||!B.isEmptyObject(m))for(t in u&&1===A.nodeType&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],null==(C=p&&p.display)&&(C=J.get(A,"display")),"none"===(a=B.css(A,"display"))&&(C?a=C:(mA([A],!0),C=A.style.display||C,a=B.css(A,"display"),mA([A]))),("inline"===a||"inline-block"===a&&null!=C)&&"none"===B.css(A,"float")&&(o||(c.done((function(){d.display=C})),null==C&&(a=d.display,C="none"===a?"":a)),d.display="inline-block")),n.overflow&&(d.overflow="hidden",c.always((function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}))),o=!1,m)o||(p?"hidden"in p&&(E=p.hidden):p=J.access(A,"fxshow",{display:C}),s&&(p.hidden=!E),E&&mA([A],!0),c.done((function(){for(t in E||mA([A]),J.remove(A,"fxshow"),m)B.style(A,t,m[t])}))),o=ue(E?p[t]:0,t,c),t in p||(p[t]=o.start,E&&(o.end=o.start,o.start=0))}],prefilter:function(A,e){e?ce.prefilters.unshift(A):ce.prefilters.push(A)}}),B.speed=function(A,e,n){var t=A&&"object"==typeof A?B.extend({},A):{complete:n||!n&&e||h(A)&&A,duration:A,easing:n&&e||e&&!h(e)&&e};return B.fx.off?t.duration=0:"number"!=typeof t.duration&&(t.duration in B.fx.speeds?t.duration=B.fx.speeds[t.duration]:t.duration=B.fx.speeds._default),null!=t.queue&&!0!==t.queue||(t.queue="fx"),t.old=t.complete,t.complete=function(){h(t.old)&&t.old.call(this),t.queue&&B.dequeue(this,t.queue)},t},B.fn.extend({fadeTo:function(A,e,n,t){return this.filter(CA).css("opacity",0).show().end().animate({opacity:e},A,n,t)},animate:function(A,e,n,t){var l=B.isEmptyObject(A),s=B.speed(e,n,t),i=function(){var e=ce(this,B.extend({},A),s);(l||J.get(this,"finish"))&&e.stop(!0)};return i.finish=i,l||!1===s.queue?this.each(i):this.queue(s.queue,i)},stop:function(A,e,n){var t=function(A){var e=A.stop;delete A.stop,e(n)};return"string"!=typeof A&&(n=e,e=A,A=void 0),e&&this.queue(A||"fx",[]),this.each((function(){var e=!0,l=null!=A&&A+"queueHooks",s=B.timers,i=J.get(this);if(l)i[l]&&i[l].stop&&t(i[l]);else for(l in i)i[l]&&i[l].stop&&re.test(l)&&t(i[l]);for(l=s.length;l--;)s[l].elem!==this||null!=A&&s[l].queue!==A||(s[l].anim.stop(n),e=!1,s.splice(l,1));!e&&n||B.dequeue(this,A)}))},finish:function(A){return!1!==A&&(A=A||"fx"),this.each((function(){var e,n=J.get(this),t=n[A+"queue"],l=n[A+"queueHooks"],s=B.timers,i=t?t.length:0;for(n.finish=!0,B.queue(this,A,[]),l&&l.stop&&l.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===A&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<i;e++)t[e]&&t[e].finish&&t[e].finish.call(this);delete n.finish}))}}),B.each(["toggle","show","hide"],(function(A,e){var n=B.fn[e];B.fn[e]=function(A,t,l){return null==A||"boolean"==typeof A?n.apply(this,arguments):this.animate(ae(e,!0),A,t,l)}})),B.each({slideDown:ae("show"),slideUp:ae("hide"),slideToggle:ae("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(A,e){B.fn[A]=function(A,n,t){return this.animate(e,A,n,t)}})),B.timers=[],B.fx.tick=function(){var A,e=0,n=B.timers;for(le=Date.now();e<n.length;e++)(A=n[e])()||n[e]!==A||n.splice(e--,1);n.length||B.fx.stop(),le=void 0},B.fx.timer=function(A){B.timers.push(A),B.fx.start()},B.fx.interval=13,B.fx.start=function(){se||(se=!0,oe())},B.fx.stop=function(){se=null},B.fx.speeds={slow:600,fast:200,_default:400},B.fn.delay=function(A,e){return A=B.fx&&B.fx.speeds[A]||A,e=e||"fx",this.queue(e,(function(e,n){var l=t.setTimeout(e,A);n.stop=function(){t.clearTimeout(l)}}))},function(){var A=f.createElement("input"),e=f.createElement("select").appendChild(f.createElement("option"));A.type="checkbox",p.checkOn=""!==A.value,p.optSelected=e.selected,(A=f.createElement("input")).value="t",A.type="radio",p.radioValue="t"===A.value}();var me,de=B.expr.attrHandle;B.fn.extend({attr:function(A,e){return N(this,B.attr,A,e,arguments.length>1)},removeAttr:function(A){return this.each((function(){B.removeAttr(this,A)}))}}),B.extend({attr:function(A,e,n){var t,l,s=A.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===A.getAttribute?B.prop(A,e,n):(1===s&&B.isXMLDoc(A)||(l=B.attrHooks[e.toLowerCase()]||(B.expr.match.bool.test(e)?me:void 0)),void 0!==n?null===n?void B.removeAttr(A,e):l&&"set"in l&&void 0!==(t=l.set(A,n,e))?t:(A.setAttribute(e,n+""),n):l&&"get"in l&&null!==(t=l.get(A,e))?t:null==(t=B.find.attr(A,e))?void 0:t)},attrHooks:{type:{set:function(A,e){if(!p.radioValue&&"radio"===e&&O(A,"input")){var n=A.value;return A.setAttribute("type",e),n&&(A.value=n),e}}}},removeAttr:function(A,e){var n,t=0,l=e&&e.match(H);if(l&&1===A.nodeType)for(;n=l[t++];)A.removeAttribute(n)}}),me={set:function(A,e,n){return!1===e?B.removeAttr(A,n):A.setAttribute(n,n),n}},B.each(B.expr.match.bool.source.match(/\w+/g),(function(A,e){var n=de[e]||B.find.attr;de[e]=function(A,e,t){var l,s,i=e.toLowerCase();return t||(s=de[i],de[i]=l,l=null!=n(A,e,t)?i:null,de[i]=s),l}}));var Ee=/^(?:input|select|textarea|button)$/i,pe=/^(?:a|area)$/i;function he(A){return(A.match(H)||[]).join(" ")}function Ie(A){return A.getAttribute&&A.getAttribute("class")||""}function fe(A){return Array.isArray(A)?A:"string"==typeof A&&A.match(H)||[]}B.fn.extend({prop:function(A,e){return N(this,B.prop,A,e,arguments.length>1)},removeProp:function(A){return this.each((function(){delete this[B.propFix[A]||A]}))}}),B.extend({prop:function(A,e,n){var t,l,s=A.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&B.isXMLDoc(A)||(e=B.propFix[e]||e,l=B.propHooks[e]),void 0!==n?l&&"set"in l&&void 0!==(t=l.set(A,n,e))?t:A[e]=n:l&&"get"in l&&null!==(t=l.get(A,e))?t:A[e]},propHooks:{tabIndex:{get:function(A){var e=B.find.attr(A,"tabindex");return e?parseInt(e,10):Ee.test(A.nodeName)||pe.test(A.nodeName)&&A.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),p.optSelected||(B.propHooks.selected={get:function(A){var e=A.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(A){var e=A.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),B.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){B.propFix[this.toLowerCase()]=this})),B.fn.extend({addClass:function(A){var e,n,t,l,s,i,r,o=0;if(h(A))return this.each((function(e){B(this).addClass(A.call(this,e,Ie(this)))}));if((e=fe(A)).length)for(;n=this[o++];)if(l=Ie(n),t=1===n.nodeType&&" "+he(l)+" "){for(i=0;s=e[i++];)t.indexOf(" "+s+" ")<0&&(t+=s+" ");l!==(r=he(t))&&n.setAttribute("class",r)}return this},removeClass:function(A){var e,n,t,l,s,i,r,o=0;if(h(A))return this.each((function(e){B(this).removeClass(A.call(this,e,Ie(this)))}));if(!arguments.length)return this.attr("class","");if((e=fe(A)).length)for(;n=this[o++];)if(l=Ie(n),t=1===n.nodeType&&" "+he(l)+" "){for(i=0;s=e[i++];)for(;t.indexOf(" "+s+" ")>-1;)t=t.replace(" "+s+" "," ");l!==(r=he(t))&&n.setAttribute("class",r)}return this},toggleClass:function(A,e){var n=typeof A,t="string"===n||Array.isArray(A);return"boolean"==typeof e&&t?e?this.addClass(A):this.removeClass(A):h(A)?this.each((function(n){B(this).toggleClass(A.call(this,n,Ie(this),e),e)})):this.each((function(){var e,l,s,i;if(t)for(l=0,s=B(this),i=fe(A);e=i[l++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else void 0!==A&&"boolean"!==n||((e=Ie(this))&&J.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===A?"":J.get(this,"__className__")||""))}))},hasClass:function(A){var e,n,t=0;for(e=" "+A+" ";n=this[t++];)if(1===n.nodeType&&(" "+he(Ie(n))+" ").indexOf(e)>-1)return!0;return!1}});var ge=/\r/g;B.fn.extend({val:function(A){var e,n,t,l=this[0];return arguments.length?(t=h(A),this.each((function(n){var l;1===this.nodeType&&(null==(l=t?A.call(this,n,B(this).val()):A)?l="":"number"==typeof l?l+="":Array.isArray(l)&&(l=B.map(l,(function(A){return null==A?"":A+""}))),(e=B.valHooks[this.type]||B.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,l,"value")||(this.value=l))}))):l?(e=B.valHooks[l.type]||B.valHooks[l.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(l,"value"))?n:"string"==typeof(n=l.value)?n.replace(ge,""):null==n?"":n:void 0}}),B.extend({valHooks:{option:{get:function(A){var e=B.find.attr(A,"value");return null!=e?e:he(B.text(A))}},select:{get:function(A){var e,n,t,l=A.options,s=A.selectedIndex,i="select-one"===A.type,r=i?null:[],o=i?s+1:l.length;for(t=s<0?o:i?s:0;t<o;t++)if(((n=l[t]).selected||t===s)&&!n.disabled&&(!n.parentNode.disabled||!O(n.parentNode,"optgroup"))){if(e=B(n).val(),i)return e;r.push(e)}return r},set:function(A,e){for(var n,t,l=A.options,s=B.makeArray(e),i=l.length;i--;)((t=l[i]).selected=B.inArray(B.valHooks.option.get(t),s)>-1)&&(n=!0);return n||(A.selectedIndex=-1),s}}}}),B.each(["radio","checkbox"],(function(){B.valHooks[this]={set:function(A,e){if(Array.isArray(e))return A.checked=B.inArray(B(A).val(),e)>-1}},p.checkOn||(B.valHooks[this].get=function(A){return null===A.getAttribute("value")?"on":A.value})})),p.focusin="onfocusin"in t;var Me=/^(?:focusinfocus|focusoutblur)$/,ve=function(A){A.stopPropagation()};B.extend(B.event,{trigger:function(A,e,n,l){var s,i,r,o,C,a,u,c,d=[n||f],E=m.call(A,"type")?A.type:A,p=m.call(A,"namespace")?A.namespace.split("."):[];if(i=c=r=n=n||f,3!==n.nodeType&&8!==n.nodeType&&!Me.test(E+B.event.triggered)&&(E.indexOf(".")>-1&&(p=E.split("."),E=p.shift(),p.sort()),C=E.indexOf(":")<0&&"on"+E,(A=A[B.expando]?A:new B.Event(E,"object"==typeof A&&A)).isTrigger=l?2:3,A.namespace=p.join("."),A.rnamespace=A.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,A.result=void 0,A.target||(A.target=n),e=null==e?[A]:B.makeArray(e,[A]),u=B.event.special[E]||{},l||!u.trigger||!1!==u.trigger.apply(n,e))){if(!l&&!u.noBubble&&!I(n)){for(o=u.delegateType||E,Me.test(o+E)||(i=i.parentNode);i;i=i.parentNode)d.push(i),r=i;r===(n.ownerDocument||f)&&d.push(r.defaultView||r.parentWindow||t)}for(s=0;(i=d[s++])&&!A.isPropagationStopped();)c=i,A.type=s>1?o:u.bindType||E,(a=(J.get(i,"events")||Object.create(null))[A.type]&&J.get(i,"handle"))&&a.apply(i,e),(a=C&&i[C])&&a.apply&&$(i)&&(A.result=a.apply(i,e),!1===A.result&&A.preventDefault());return A.type=E,l||A.isDefaultPrevented()||u._default&&!1!==u._default.apply(d.pop(),e)||!$(n)||C&&h(n[E])&&!I(n)&&((r=n[C])&&(n[C]=null),B.event.triggered=E,A.isPropagationStopped()&&c.addEventListener(E,ve),n[E](),A.isPropagationStopped()&&c.removeEventListener(E,ve),B.event.triggered=void 0,r&&(n[C]=r)),A.result}},simulate:function(A,e,n){var t=B.extend(new B.Event,n,{type:A,isSimulated:!0});B.event.trigger(t,null,e)}}),B.fn.extend({trigger:function(A,e){return this.each((function(){B.event.trigger(A,e,this)}))},triggerHandler:function(A,e){var n=this[0];if(n)return B.event.trigger(A,e,n,!0)}}),p.focusin||B.each({focus:"focusin",blur:"focusout"},(function(A,e){var n=function(A){B.event.simulate(e,A.target,B.event.fix(A))};B.event.special[e]={setup:function(){var t=this.ownerDocument||this.document||this,l=J.access(t,e);l||t.addEventListener(A,n,!0),J.access(t,e,(l||0)+1)},teardown:function(){var t=this.ownerDocument||this.document||this,l=J.access(t,e)-1;l?J.access(t,e,l):(t.removeEventListener(A,n,!0),J.remove(t,e))}}}));var ye=t.location,Be={guid:Date.now()},be=/\?/;B.parseXML=function(A){var e,n;if(!A||"string"!=typeof A)return null;try{e=(new t.DOMParser).parseFromString(A,"text/xml")}catch(A){}return n=e&&e.getElementsByTagName("parsererror")[0],e&&!n||B.error("Invalid XML: "+(n?B.map(n.childNodes,(function(A){return A.textContent})).join("\n"):A)),e};var Se=/\[\]$/,Qe=/\r?\n/g,Ge=/^(?:submit|button|image|reset|file)$/i,xe=/^(?:input|select|textarea|keygen)/i;function Oe(A,e,n,t){var l;if(Array.isArray(e))B.each(e,(function(e,l){n||Se.test(A)?t(A,l):Oe(A+"["+("object"==typeof l&&null!=l?e:"")+"]",l,n,t)}));else if(n||"object"!==v(e))t(A,e);else for(l in e)Oe(A+"["+l+"]",e[l],n,t)}B.param=function(A,e){var n,t=[],l=function(A,e){var n=h(e)?e():e;t[t.length]=encodeURIComponent(A)+"="+encodeURIComponent(null==n?"":n)};if(null==A)return"";if(Array.isArray(A)||A.jquery&&!B.isPlainObject(A))B.each(A,(function(){l(this.name,this.value)}));else for(n in A)Oe(n,A[n],e,l);return t.join("&")},B.fn.extend({serialize:function(){return B.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var A=B.prop(this,"elements");return A?B.makeArray(A):this})).filter((function(){var A=this.type;return this.name&&!B(this).is(":disabled")&&xe.test(this.nodeName)&&!Ge.test(A)&&(this.checked||!pA.test(A))})).map((function(A,e){var n=B(this).val();return null==n?null:Array.isArray(n)?B.map(n,(function(A){return{name:e.name,value:A.replace(Qe,"\r\n")}})):{name:e.name,value:n.replace(Qe,"\r\n")}})).get()}});var we=/%20/g,We=/#.*$/,Ke=/([?&])_=[^&]*/,_e=/^(.*?):[ \t]*([^\r\n]*)$/gm,Te=/^(?:GET|HEAD)$/,De=/^\/\//,Ve={},He={},ke="*/".concat("*"),Fe=f.createElement("a");function Ye(A){return function(e,n){"string"!=typeof e&&(n=e,e="*");var t,l=0,s=e.toLowerCase().match(H)||[];if(h(n))for(;t=s[l++];)"+"===t[0]?(t=t.slice(1)||"*",(A[t]=A[t]||[]).unshift(n)):(A[t]=A[t]||[]).push(n)}}function qe(A,e,n,t){var l={},s=A===He;function i(r){var o;return l[r]=!0,B.each(A[r]||[],(function(A,r){var C=r(e,n,t);return"string"!=typeof C||s||l[C]?s?!(o=C):void 0:(e.dataTypes.unshift(C),i(C),!1)})),o}return i(e.dataTypes[0])||!l["*"]&&i("*")}function Ue(A,e){var n,t,l=B.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((l[n]?A:t||(t={}))[n]=e[n]);return t&&B.extend(!0,A,t),A}Fe.href=ye.href,B.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ye.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ye.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":ke,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":B.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(A,e){return e?Ue(Ue(A,B.ajaxSettings),e):Ue(B.ajaxSettings,A)},ajaxPrefilter:Ye(Ve),ajaxTransport:Ye(He),ajax:function(A,e){"object"==typeof A&&(e=A,A=void 0),e=e||{};var n,l,s,i,r,o,C,a,u,c,m=B.ajaxSetup({},e),d=m.context||m,E=m.context&&(d.nodeType||d.jquery)?B(d):B.event,p=B.Deferred(),h=B.Callbacks("once memory"),I=m.statusCode||{},g={},M={},v="canceled",y={readyState:0,getResponseHeader:function(A){var e;if(C){if(!i)for(i={};e=_e.exec(s);)i[e[1].toLowerCase()+" "]=(i[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=i[A.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return C?s:null},setRequestHeader:function(A,e){return null==C&&(A=M[A.toLowerCase()]=M[A.toLowerCase()]||A,g[A]=e),this},overrideMimeType:function(A){return null==C&&(m.mimeType=A),this},statusCode:function(A){var e;if(A)if(C)y.always(A[y.status]);else for(e in A)I[e]=[I[e],A[e]];return this},abort:function(A){var e=A||v;return n&&n.abort(e),b(0,e),this}};if(p.promise(y),m.url=((A||m.url||ye.href)+"").replace(De,ye.protocol+"//"),m.type=e.method||e.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(H)||[""],null==m.crossDomain){o=f.createElement("a");try{o.href=m.url,o.href=o.href,m.crossDomain=Fe.protocol+"//"+Fe.host!=o.protocol+"//"+o.host}catch(A){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=B.param(m.data,m.traditional)),qe(Ve,m,e,y),C)return y;for(u in(a=B.event&&m.global)&&0==B.active++&&B.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Te.test(m.type),l=m.url.replace(We,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(we,"+")):(c=m.url.slice(l.length),m.data&&(m.processData||"string"==typeof m.data)&&(l+=(be.test(l)?"&":"?")+m.data,delete m.data),!1===m.cache&&(l=l.replace(Ke,"$1"),c=(be.test(l)?"&":"?")+"_="+Be.guid+++c),m.url=l+c),m.ifModified&&(B.lastModified[l]&&y.setRequestHeader("If-Modified-Since",B.lastModified[l]),B.etag[l]&&y.setRequestHeader("If-None-Match",B.etag[l])),(m.data&&m.hasContent&&!1!==m.contentType||e.contentType)&&y.setRequestHeader("Content-Type",m.contentType),y.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+ke+"; q=0.01":""):m.accepts["*"]),m.headers)y.setRequestHeader(u,m.headers[u]);if(m.beforeSend&&(!1===m.beforeSend.call(d,y,m)||C))return y.abort();if(v="abort",h.add(m.complete),y.done(m.success),y.fail(m.error),n=qe(He,m,e,y)){if(y.readyState=1,a&&E.trigger("ajaxSend",[y,m]),C)return y;m.async&&m.timeout>0&&(r=t.setTimeout((function(){y.abort("timeout")}),m.timeout));try{C=!1,n.send(g,b)}catch(A){if(C)throw A;b(-1,A)}}else b(-1,"No Transport");function b(A,e,i,o){var u,c,f,g,M,v=e;C||(C=!0,r&&t.clearTimeout(r),n=void 0,s=o||"",y.readyState=A>0?4:0,u=A>=200&&A<300||304===A,i&&(g=function(A,e,n){for(var t,l,s,i,r=A.contents,o=A.dataTypes;"*"===o[0];)o.shift(),void 0===t&&(t=A.mimeType||e.getResponseHeader("Content-Type"));if(t)for(l in r)if(r[l]&&r[l].test(t)){o.unshift(l);break}if(o[0]in n)s=o[0];else{for(l in n){if(!o[0]||A.converters[l+" "+o[0]]){s=l;break}i||(i=l)}s=s||i}if(s)return s!==o[0]&&o.unshift(s),n[s]}(m,y,i)),!u&&B.inArray("script",m.dataTypes)>-1&&B.inArray("json",m.dataTypes)<0&&(m.converters["text script"]=function(){}),g=function(A,e,n,t){var l,s,i,r,o,C={},a=A.dataTypes.slice();if(a[1])for(i in A.converters)C[i.toLowerCase()]=A.converters[i];for(s=a.shift();s;)if(A.responseFields[s]&&(n[A.responseFields[s]]=e),!o&&t&&A.dataFilter&&(e=A.dataFilter(e,A.dataType)),o=s,s=a.shift())if("*"===s)s=o;else if("*"!==o&&o!==s){if(!(i=C[o+" "+s]||C["* "+s]))for(l in C)if((r=l.split(" "))[1]===s&&(i=C[o+" "+r[0]]||C["* "+r[0]])){!0===i?i=C[l]:!0!==C[l]&&(s=r[0],a.unshift(r[1]));break}if(!0!==i)if(i&&A.throws)e=i(e);else try{e=i(e)}catch(A){return{state:"parsererror",error:i?A:"No conversion from "+o+" to "+s}}}return{state:"success",data:e}}(m,g,y,u),u?(m.ifModified&&((M=y.getResponseHeader("Last-Modified"))&&(B.lastModified[l]=M),(M=y.getResponseHeader("etag"))&&(B.etag[l]=M)),204===A||"HEAD"===m.type?v="nocontent":304===A?v="notmodified":(v=g.state,c=g.data,u=!(f=g.error))):(f=v,!A&&v||(v="error",A<0&&(A=0))),y.status=A,y.statusText=(e||v)+"",u?p.resolveWith(d,[c,v,y]):p.rejectWith(d,[y,v,f]),y.statusCode(I),I=void 0,a&&E.trigger(u?"ajaxSuccess":"ajaxError",[y,m,u?c:f]),h.fireWith(d,[y,v]),a&&(E.trigger("ajaxComplete",[y,m]),--B.active||B.event.trigger("ajaxStop")))}return y},getJSON:function(A,e,n){return B.get(A,e,n,"json")},getScript:function(A,e){return B.get(A,void 0,e,"script")}}),B.each(["get","post"],(function(A,e){B[e]=function(A,n,t,l){return h(n)&&(l=l||t,t=n,n=void 0),B.ajax(B.extend({url:A,type:e,dataType:l,data:n,success:t},B.isPlainObject(A)&&A))}})),B.ajaxPrefilter((function(A){var e;for(e in A.headers)"content-type"===e.toLowerCase()&&(A.contentType=A.headers[e]||"")})),B._evalUrl=function(A,e,n){return B.ajax({url:A,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(A){B.globalEval(A,e,n)}})},B.fn.extend({wrapAll:function(A){var e;return this[0]&&(h(A)&&(A=A.call(this[0])),e=B(A,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var A=this;A.firstElementChild;)A=A.firstElementChild;return A})).append(this)),this},wrapInner:function(A){return h(A)?this.each((function(e){B(this).wrapInner(A.call(this,e))})):this.each((function(){var e=B(this),n=e.contents();n.length?n.wrapAll(A):e.append(A)}))},wrap:function(A){var e=h(A);return this.each((function(n){B(this).wrapAll(e?A.call(this,n):A)}))},unwrap:function(A){return this.parent(A).not("body").each((function(){B(this).replaceWith(this.childNodes)})),this}}),B.expr.pseudos.hidden=function(A){return!B.expr.pseudos.visible(A)},B.expr.pseudos.visible=function(A){return!!(A.offsetWidth||A.offsetHeight||A.getClientRects().length)},B.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(A){}};var Pe={0:200,1223:204},Ne=B.ajaxSettings.xhr();p.cors=!!Ne&&"withCredentials"in Ne,p.ajax=Ne=!!Ne,B.ajaxTransport((function(A){var e,n;if(p.cors||Ne&&!A.crossDomain)return{send:function(l,s){var i,r=A.xhr();if(r.open(A.type,A.url,A.async,A.username,A.password),A.xhrFields)for(i in A.xhrFields)r[i]=A.xhrFields[i];for(i in A.mimeType&&r.overrideMimeType&&r.overrideMimeType(A.mimeType),A.crossDomain||l["X-Requested-With"]||(l["X-Requested-With"]="XMLHttpRequest"),l)r.setRequestHeader(i,l[i]);e=function(A){return function(){e&&(e=n=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===A?r.abort():"error"===A?"number"!=typeof r.status?s(0,"error"):s(r.status,r.statusText):s(Pe[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=e(),n=r.onerror=r.ontimeout=e("error"),void 0!==r.onabort?r.onabort=n:r.onreadystatechange=function(){4===r.readyState&&t.setTimeout((function(){e&&n()}))},e=e("abort");try{r.send(A.hasContent&&A.data||null)}catch(A){if(e)throw A}},abort:function(){e&&e()}}})),B.ajaxPrefilter((function(A){A.crossDomain&&(A.contents.script=!1)})),B.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(A){return B.globalEval(A),A}}}),B.ajaxPrefilter("script",(function(A){void 0===A.cache&&(A.cache=!1),A.crossDomain&&(A.type="GET")})),B.ajaxTransport("script",(function(A){var e,n;if(A.crossDomain||A.scriptAttrs)return{send:function(t,l){e=B("<script>").attr(A.scriptAttrs||{}).prop({charset:A.scriptCharset,src:A.url}).on("load error",n=function(A){e.remove(),n=null,A&&l("error"===A.type?404:200,A.type)}),f.head.appendChild(e[0])},abort:function(){n&&n()}}}));var Le,je=[],Re=/(=)\?(?=&|$)|\?\?/;B.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var A=je.pop()||B.expando+"_"+Be.guid++;return this[A]=!0,A}}),B.ajaxPrefilter("json jsonp",(function(A,e,n){var l,s,i,r=!1!==A.jsonp&&(Re.test(A.url)?"url":"string"==typeof A.data&&0===(A.contentType||"").indexOf("application/x-www-form-urlencoded")&&Re.test(A.data)&&"data");if(r||"jsonp"===A.dataTypes[0])return l=A.jsonpCallback=h(A.jsonpCallback)?A.jsonpCallback():A.jsonpCallback,r?A[r]=A[r].replace(Re,"$1"+l):!1!==A.jsonp&&(A.url+=(be.test(A.url)?"&":"?")+A.jsonp+"="+l),A.converters["script json"]=function(){return i||B.error(l+" was not called"),i[0]},A.dataTypes[0]="json",s=t[l],t[l]=function(){i=arguments},n.always((function(){void 0===s?B(t).removeProp(l):t[l]=s,A[l]&&(A.jsonpCallback=e.jsonpCallback,je.push(l)),i&&h(s)&&s(i[0]),i=s=void 0})),"script"})),p.createHTMLDocument=((Le=f.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Le.childNodes.length),B.parseHTML=function(A,e,n){return"string"!=typeof A?[]:("boolean"==typeof e&&(n=e,e=!1),e||(p.createHTMLDocument?((t=(e=f.implementation.createHTMLDocument("")).createElement("base")).href=f.location.href,e.head.appendChild(t)):e=f),s=!n&&[],(l=w.exec(A))?[e.createElement(l[1])]:(l=yA([A],e,s),s&&s.length&&B(s).remove(),B.merge([],l.childNodes)));var t,l,s},B.fn.load=function(A,e,n){var t,l,s,i=this,r=A.indexOf(" ");return r>-1&&(t=he(A.slice(r)),A=A.slice(0,r)),h(e)?(n=e,e=void 0):e&&"object"==typeof e&&(l="POST"),i.length>0&&B.ajax({url:A,type:l||"GET",dataType:"html",data:e}).done((function(A){s=arguments,i.html(t?B("<div>").append(B.parseHTML(A)).find(t):A)})).always(n&&function(A,e){i.each((function(){n.apply(this,s||[A.responseText,e,A])}))}),this},B.expr.pseudos.animated=function(A){return B.grep(B.timers,(function(e){return A===e.elem})).length},B.offset={setOffset:function(A,e,n){var t,l,s,i,r,o,C=B.css(A,"position"),a=B(A),u={};"static"===C&&(A.style.position="relative"),r=a.offset(),s=B.css(A,"top"),o=B.css(A,"left"),("absolute"===C||"fixed"===C)&&(s+o).indexOf("auto")>-1?(i=(t=a.position()).top,l=t.left):(i=parseFloat(s)||0,l=parseFloat(o)||0),h(e)&&(e=e.call(A,n,B.extend({},r))),null!=e.top&&(u.top=e.top-r.top+i),null!=e.left&&(u.left=e.left-r.left+l),"using"in e?e.using.call(A,u):a.css(u)}},B.fn.extend({offset:function(A){if(arguments.length)return void 0===A?this:this.each((function(e){B.offset.setOffset(this,A,e)}));var e,n,t=this[0];return t?t.getClientRects().length?(e=t.getBoundingClientRect(),n=t.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var A,e,n,t=this[0],l={top:0,left:0};if("fixed"===B.css(t,"position"))e=t.getBoundingClientRect();else{for(e=this.offset(),n=t.ownerDocument,A=t.offsetParent||n.documentElement;A&&(A===n.body||A===n.documentElement)&&"static"===B.css(A,"position");)A=A.parentNode;A&&A!==t&&1===A.nodeType&&((l=B(A).offset()).top+=B.css(A,"borderTopWidth",!0),l.left+=B.css(A,"borderLeftWidth",!0))}return{top:e.top-l.top-B.css(t,"marginTop",!0),left:e.left-l.left-B.css(t,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var A=this.offsetParent;A&&"static"===B.css(A,"position");)A=A.offsetParent;return A||iA}))}}),B.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(A,e){var n="pageYOffset"===e;B.fn[A]=function(t){return N(this,(function(A,t,l){var s;if(I(A)?s=A:9===A.nodeType&&(s=A.defaultView),void 0===l)return s?s[e]:A[t];s?s.scrollTo(n?s.pageXOffset:l,n?l:s.pageYOffset):A[t]=l}),A,t,arguments.length)}})),B.each(["top","left"],(function(A,e){B.cssHooks[e]=NA(p.pixelPosition,(function(A,n){if(n)return n=PA(A,e),FA.test(n)?B(A).position()[e]+"px":n}))})),B.each({Height:"height",Width:"width"},(function(A,e){B.each({padding:"inner"+A,content:e,"":"outer"+A},(function(n,t){B.fn[t]=function(l,s){var i=arguments.length&&(n||"boolean"!=typeof l),r=n||(!0===l||!0===s?"margin":"border");return N(this,(function(e,n,l){var s;return I(e)?0===t.indexOf("outer")?e["inner"+A]:e.document.documentElement["client"+A]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+A],s["scroll"+A],e.body["offset"+A],s["offset"+A],s["client"+A])):void 0===l?B.css(e,n,r):B.style(e,n,l,r)}),e,i?l:void 0,i)}}))})),B.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(A,e){B.fn[e]=function(A){return this.on(e,A)}})),B.fn.extend({bind:function(A,e,n){return this.on(A,null,e,n)},unbind:function(A,e){return this.off(A,null,e)},delegate:function(A,e,n,t){return this.on(e,A,n,t)},undelegate:function(A,e,n){return 1===arguments.length?this.off(A,"**"):this.off(e,A||"**",n)},hover:function(A,e){return this.mouseenter(A).mouseleave(e||A)}}),B.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(A,e){B.fn[e]=function(A,n){return arguments.length>0?this.on(e,null,A,n):this.trigger(e)}}));var ze=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;B.proxy=function(A,e){var n,t,l;if("string"==typeof e&&(n=A[e],e=A,A=n),h(A))return t=r.call(arguments,2),l=function(){return A.apply(e||this,t.concat(r.call(arguments)))},l.guid=A.guid=A.guid||B.guid++,l},B.holdReady=function(A){A?B.readyWait++:B.ready(!0)},B.isArray=Array.isArray,B.parseJSON=JSON.parse,B.nodeName=O,B.isFunction=h,B.isWindow=I,B.camelCase=z,B.type=v,B.now=Date.now,B.isNumeric=function(A){var e=B.type(A);return("number"===e||"string"===e)&&!isNaN(A-parseFloat(A))},B.trim=function(A){return null==A?"":(A+"").replace(ze,"")},void 0===(n=function(){return B}.apply(e,[]))||(A.exports=n);var $e=t.jQuery,Xe=t.$;return B.noConflict=function(A){return t.$===B&&(t.$=Xe),A&&t.jQuery===B&&(t.jQuery=$e),B},void 0===l&&(t.jQuery=t.$=B),B}))},"./src/plugin/Model sync recursive .ts$":(A,e,n)=>{var t={"./Model.ts":"./src/plugin/Model/Model.ts","./model.test.ts":"./src/plugin/Model/model.test.ts","./types.ts":"./src/plugin/Model/types.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/Model sync recursive .ts$"},"./src/plugin/Model sync recursive test.ts$":(A,e,n)=>{var t={"./model.test.ts":"./src/plugin/Model/model.test.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/Model sync recursive test.ts$"},"./src/plugin/Presenter sync recursive .ts$":(A,e,n)=>{var t={"./Presenter.ts":"./src/plugin/Presenter/Presenter.ts","./presenter.test.ts":"./src/plugin/Presenter/presenter.test.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/Presenter sync recursive .ts$"},"./src/plugin/Presenter sync recursive test.ts$":(A,e,n)=>{var t={"./presenter.test.ts":"./src/plugin/Presenter/presenter.test.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/Presenter sync recursive test.ts$"},"./src/plugin/View sync recursive .ts$":(A,e,n)=>{var t={"./Handles/Handles.ts":"./src/plugin/View/Handles/Handles.ts","./Handles/handles.test.ts":"./src/plugin/View/Handles/handles.test.ts","./Handles/types.ts":"./src/plugin/View/Handles/types.ts","./Movement/Movement.ts":"./src/plugin/View/Movement/Movement.ts","./Movement/movement.test.ts":"./src/plugin/View/Movement/movement.test.ts","./Movement/types.ts":"./src/plugin/View/Movement/types.ts","./SelectedInterval/SelectedInterval.ts":"./src/plugin/View/SelectedInterval/SelectedInterval.ts","./SelectedInterval/selectedInterval.test.ts":"./src/plugin/View/SelectedInterval/selectedInterval.test.ts","./SelectedInterval/types.ts":"./src/plugin/View/SelectedInterval/types.ts","./SideMenu/SideMenu.ts":"./src/plugin/View/SideMenu/SideMenu.ts","./SideMenu/sideMenu.test.ts":"./src/plugin/View/SideMenu/sideMenu.test.ts","./SideMenu/types.ts":"./src/plugin/View/SideMenu/types.ts","./Slider/Slider.ts":"./src/plugin/View/Slider/Slider.ts","./Slider/slider.test.ts":"./src/plugin/View/Slider/slider.test.ts","./Slider/types.ts":"./src/plugin/View/Slider/types.ts","./ValuesScale/ValuesScale.ts":"./src/plugin/View/ValuesScale/ValuesScale.ts","./ValuesScale/interfaces.ts":"./src/plugin/View/ValuesScale/interfaces.ts","./ValuesScale/valueScale.test.ts":"./src/plugin/View/ValuesScale/valueScale.test.ts","./View.ts":"./src/plugin/View/View.ts","./types.ts":"./src/plugin/View/types.ts","./view.test.ts":"./src/plugin/View/view.test.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/View sync recursive .ts$"},"./src/plugin/View sync recursive test.ts$":(A,e,n)=>{var t={"./Handles/handles.test.ts":"./src/plugin/View/Handles/handles.test.ts","./Movement/movement.test.ts":"./src/plugin/View/Movement/movement.test.ts","./SelectedInterval/selectedInterval.test.ts":"./src/plugin/View/SelectedInterval/selectedInterval.test.ts","./SideMenu/sideMenu.test.ts":"./src/plugin/View/SideMenu/sideMenu.test.ts","./Slider/slider.test.ts":"./src/plugin/View/Slider/slider.test.ts","./ValuesScale/valueScale.test.ts":"./src/plugin/View/ValuesScale/valueScale.test.ts","./view.test.ts":"./src/plugin/View/view.test.ts"};function l(A){var e=s(A);return n(e)}function s(A){if(!n.o(t,A)){var e=new Error("Cannot find module '"+A+"'");throw e.code="MODULE_NOT_FOUND",e}return t[A]}l.keys=function(){return Object.keys(t)},l.resolve=s,A.exports=l,l.id="./src/plugin/View sync recursive test.ts$"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,